(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(n){function e(e){for(var r,a,s=e[0],c=e[1],l=e[2],u=0,d=[];u<s.length;u++)a=s[u],Object.prototype.hasOwnProperty.call(o,a)&&o[a]&&d.push(o[a][0]),o[a]=0;for(r in c)Object.prototype.hasOwnProperty.call(c,r)&&(n[r]=c[r]);for(p&&p(e);d.length;)d.shift()();return i.push.apply(i,l||[]),t()}function t(){for(var n,e=0;e<i.length;e++){for(var t=i[e],r=!0,s=1;s<t.length;s++){var c=t[s];0!==o[c]&&(r=!1)}r&&(i.splice(e--,1),n=a(a.s=t[0]))}return n}var r={},o={1:0},i=[];function a(e){if(r[e])return r[e].exports;var t=r[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,a),t.l=!0,t.exports}a.e=function(n){var e=[],t=o[n];if(0!==t)if(t)e.push(t[2]);else{var r=new Promise((function(e,r){t=o[n]=[e,r]}));e.push(t[2]=r);var i,s=document.createElement("script");s.charset="utf-8",s.timeout=120,a.nc&&s.setAttribute("nonce",a.nc),s.src=function(n){return a.p+"assets/js/"+({}[n]||n)+"."+{2:"a537d9bf",3:"32f7dc34",4:"cdd01a51",5:"2e57f11f",6:"1e22d08b",7:"62d20bec",8:"926898e7",9:"44e709ee",10:"23e87492",11:"99c80547",12:"33bce858",13:"84ca3c8f",14:"32bbd5d4",15:"5c4218db",16:"88d88b20",17:"d658ff66",18:"4da7a8cd",19:"02b63d01",20:"23430b1c",21:"dfd89b0f",22:"8d5baf7f",23:"5b3b3393",24:"4ddb2a4f",25:"22ef4965",26:"553968e8"}[n]+".js"}(n);var c=new Error;i=function(e){s.onerror=s.onload=null,clearTimeout(l);var t=o[n];if(0!==t){if(t){var r=e&&("load"===e.type?"missing":e.type),i=e&&e.target&&e.target.src;c.message="Loading chunk "+n+" failed.\n("+r+": "+i+")",c.name="ChunkLoadError",c.type=r,c.request=i,t[1](c)}o[n]=void 0}};var l=setTimeout((function(){i({type:"timeout",target:s})}),12e4);s.onerror=s.onload=i,document.head.appendChild(s)}return Promise.all(e)},a.m=n,a.c=r,a.d=function(n,e,t){a.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},a.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},a.t=function(n,e){if(1&e&&(n=a(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(a.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var r in n)a.d(t,r,function(e){return n[e]}.bind(null,r));return t},a.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return a.d(e,"a",e),e},a.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},a.p="/spring-boot-tutorial/",a.oe=function(n){throw console.error(n),n};var s=window.webpackJsonp=window.webpackJsonp||[],c=s.push.bind(s);s.push=e,s=s.slice();for(var l=0;l<s.length;l++)e(s[l]);var p=c;i.push([250,0]),t()}([function(n,e,t){var r=t(3),o=t(38).f,i=t(36),a=t(15),s=t(122),c=t(127),l=t(114);n.exports=function(n,e){var t,p,u,d,f,g=n.target,m=n.global,h=n.stat;if(t=m?r:h?r[g]||s(g,{}):(r[g]||{}).prototype)for(p in e){if(d=e[p],u=n.dontCallGetSet?(f=o(t,p))&&f.value:t[p],!l(m?p:g+(h?".":"#")+p,n.forced)&&void 0!==u){if(typeof d==typeof u)continue;c(d,u)}(n.sham||u&&u.sham)&&i(d,"sham",!0),a(t,p,d,n)}}},function(n,e){n.exports=function(n){try{return!!n()}catch(n){return!0}}},function(n,e,t){var r=t(72),o=Function.prototype,i=o.bind,a=o.call,s=r&&i.bind(a,a);n.exports=r?function(n){return n&&s(n)}:function(n){return n&&function(){return a.apply(n,arguments)}}},function(n,e){var t=function(n){return n&&n.Math==Math&&n};n.exports=t("object"==typeof globalThis&&globalThis)||t("object"==typeof window&&window)||t("object"==typeof self&&self)||t("object"==typeof global&&global)||function(){return this}()||Function("return this")()},function(n,e){n.exports=function(n){return"function"==typeof n}},function(n,e,t){var r=t(131),o=t(15),i=t(278);r||o(Object.prototype,"toString",i,{unsafe:!0})},function(n,e,t){var r=t(3),o=t(55),i=t(9),a=t(92),s=t(56),c=t(167),l=o("wks"),p=r.Symbol,u=p&&p.for,d=c?p:p&&p.withoutSetter||a;n.exports=function(n){if(!i(l,n)||!s&&"string"!=typeof l[n]){var e="Symbol."+n;s&&i(p,n)?l[n]=p[n]:l[n]=c&&u?u(e):d(e)}return l[n]}},function(n,e,t){var r=t(1);n.exports=!r((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(n,e,t){var r=t(72),o=Function.prototype.call;n.exports=r?o.bind(o):function(){return o.apply(o,arguments)}},function(n,e,t){var r=t(2),o=t(16),i=r({}.hasOwnProperty);n.exports=Object.hasOwn||function(n,e){return i(o(n),e)}},function(n,e,t){var r=t(11),o=String,i=TypeError;n.exports=function(n){if(r(n))return n;throw i(o(n)+" is not an object")}},function(n,e,t){var r=t(4);n.exports=function(n){return"object"==typeof n?null!==n:r(n)}},function(n,e,t){var r=t(7),o=t(169),i=t(168),a=t(10),s=t(94),c=TypeError,l=Object.defineProperty,p=Object.getOwnPropertyDescriptor;e.f=r?i?function(n,e,t){if(a(n),e=s(e),a(t),"function"==typeof n&&"prototype"===e&&"value"in t&&"writable"in t&&!t.writable){var r=p(n,e);r&&r.writable&&(n[e]=t.value,t={configurable:"configurable"in t?t.configurable:r.configurable,enumerable:"enumerable"in t?t.enumerable:r.enumerable,writable:!1})}return l(n,e,t)}:l:function(n,e,t){if(a(n),e=s(e),a(t),o)try{return l(n,e,t)}catch(n){}if("get"in t||"set"in t)throw c("Accessors not supported");return"value"in t&&(n[e]=t.value),n}},function(n,e,t){var r=t(90),o=String;n.exports=function(n){if("Symbol"===r(n))throw TypeError("Cannot convert a Symbol value to a string");return o(n)}},function(n,e,t){var r=t(3),o=t(4),i=function(n){return o(n)?n:void 0};n.exports=function(n,e){return arguments.length<2?i(r[n]):r[n]&&r[n][e]}},function(n,e,t){var r=t(4),o=t(12),i=t(174),a=t(122);n.exports=function(n,e,t,s){s||(s={});var c=s.enumerable,l=void 0!==s.name?s.name:e;return r(t)&&i(t,l,s),s.global?c?n[e]=t:a(e,t):(s.unsafe?n[e]&&(c=!0):delete n[e],c?n[e]=t:o.f(n,e,{value:t,enumerable:!1,configurable:!s.nonConfigurable,writable:!s.nonWritable})),n}},function(n,e,t){var r=t(18),o=Object;n.exports=function(n){return o(r(n))}},function(n,e){n.exports=!1},function(n,e){var t=TypeError;n.exports=function(n){if(null==n)throw t("Can't call method on "+n);return n}},function(n,e,t){var r=t(68),o=t(18);n.exports=function(n){return r(o(n))}},function(n,e,t){"use strict";var r=t(189).charAt,o=t(13),i=t(41),a=t(173),s=i.set,c=i.getterFor("String Iterator");a(String,"String",(function(n){s(this,{type:"String Iterator",string:o(n),index:0})}),(function(){var n,e=c(this),t=e.string,o=e.index;return o>=t.length?{value:void 0,done:!0}:(n=r(t,o),e.index+=n.length,{value:n,done:!1})}))},function(n,e,t){"use strict";var r=t(0),o=t(193);r({target:"Array",proto:!0,forced:[].forEach!=o},{forEach:o})},function(n,e,t){var r=t(3),o=t(190),i=t(191),a=t(193),s=t(36),c=function(n){if(n&&n.forEach!==a)try{s(n,"forEach",a)}catch(e){n.forEach=a}};for(var l in o)o[l]&&c(r[l]&&r[l].prototype);c(i)},function(n,e,t){"use strict";function r(n,e,t,r,o,i,a,s){var c,l="function"==typeof n?n.options:n;if(e&&(l.render=e,l.staticRenderFns=t,l._compiled=!0),r&&(l.functional=!0),i&&(l._scopeId="data-v-"+i),a?(c=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),o&&o.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(a)},l._ssrRegister=c):o&&(c=s?function(){o.call(this,(l.functional?this.parent:this).$root.$options.shadowRoot)}:o),c)if(l.functional){l._injectStyles=c;var p=l.render;l.render=function(n,e){return c.call(e),p(n,e)}}else{var u=l.beforeCreate;l.beforeCreate=u?[].concat(u,c):[c]}return{exports:n,options:l}}t.d(e,"a",(function(){return r}))},function(n,e,t){"use strict";var r=t(0),o=t(105);r({target:"RegExp",proto:!0,forced:/./.exec!==o},{exec:o})},function(n,e,t){var r=t(59);n.exports=function(n){return r(n.length)}},function(n,e,t){var r=t(3),o=t(190),i=t(191),a=t(156),s=t(36),c=t(6),l=c("iterator"),p=c("toStringTag"),u=a.values,d=function(n,e){if(n){if(n[l]!==u)try{s(n,l,u)}catch(e){n[l]=u}if(n[p]||s(n,p,e),o[e])for(var t in a)if(n[t]!==a[t])try{s(n,t,a[t])}catch(e){n[t]=a[t]}}};for(var f in o)d(r[f]&&r[f].prototype,f);d(i,"DOMTokenList")},function(n,e,t){var r=t(15),o=t(287),i=Error.prototype;i.toString!==o&&r(i,"toString",o)},function(n,e,t){var r=t(4),o=t(58),i=TypeError;n.exports=function(n){if(r(n))return n;throw i(o(n)+" is not a function")}},function(n,e,t){"use strict";var r=t(0),o=t(67).filter;r({target:"Array",proto:!0,forced:!t(83)("filter")},{filter:function(n){return o(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){var r=t(2),o=r({}.toString),i=r("".slice);n.exports=function(n){return i(o(n),8,-1)}},function(n,e){var t=Array.isArray;n.exports=t},function(n,e,t){var r=t(14);n.exports=r("navigator","userAgent")||""},function(n,e,t){var r=t(202),o="object"==typeof self&&self&&self.Object===Object&&self,i=r||o||Function("return this")();n.exports=i},function(n,e,t){var r,o=t(10),i=t(123),a=t(125),s=t(74),c=t(172),l=t(93),p=t(97),u=p("IE_PROTO"),d=function(){},f=function(n){return"<script>"+n+"<\/script>"},g=function(n){n.write(f("")),n.close();var e=n.parentWindow.Object;return n=null,e},m=function(){try{r=new ActiveXObject("htmlfile")}catch(n){}var n,e;m="undefined"!=typeof document?document.domain&&r?g(r):((e=l("iframe")).style.display="none",c.appendChild(e),e.src=String("javascript:"),(n=e.contentWindow.document).open(),n.write(f("document.F=Object")),n.close(),n.F):g(r);for(var t=a.length;t--;)delete m.prototype[a[t]];return m()};s[u]=!0,n.exports=Object.create||function(n,e){var t;return null!==n?(d.prototype=o(n),t=new d,d.prototype=null,t[u]=n):t=m(),void 0===e?t:i.f(t,e)}},function(n,e,t){var r=t(2);n.exports=r({}.isPrototypeOf)},function(n,e,t){var r=t(7),o=t(12),i=t(51);n.exports=r?function(n,e,t){return o.f(n,e,i(1,t))}:function(n,e,t){return n[e]=t,n}},function(n,e,t){var r=t(12).f,o=t(9),i=t(6)("toStringTag");n.exports=function(n,e,t){n&&!t&&(n=n.prototype),n&&!o(n,i)&&r(n,i,{configurable:!0,value:e})}},function(n,e,t){var r=t(7),o=t(8),i=t(126),a=t(51),s=t(19),c=t(94),l=t(9),p=t(169),u=Object.getOwnPropertyDescriptor;e.f=r?u:function(n,e){if(n=s(n),e=c(e),p)try{return u(n,e)}catch(n){}if(l(n,e))return a(!o(i.f,n,e),n[e])}},function(n,e,t){var r=t(0),o=t(3),i=t(42),a=t(283),s=o.WebAssembly,c=7!==Error("e",{cause:7}).cause,l=function(n,e){var t={};t[n]=a(n,e,c),r({global:!0,constructor:!0,arity:1,forced:c},t)},p=function(n,e){if(s&&s[n]){var t={};t[n]=a("WebAssembly."+n,e,c),r({target:"WebAssembly",stat:!0,constructor:!0,arity:1,forced:c},t)}};l("Error",(function(n){return function(e){return i(n,this,arguments)}})),l("EvalError",(function(n){return function(e){return i(n,this,arguments)}})),l("RangeError",(function(n){return function(e){return i(n,this,arguments)}})),l("ReferenceError",(function(n){return function(e){return i(n,this,arguments)}})),l("SyntaxError",(function(n){return function(e){return i(n,this,arguments)}})),l("TypeError",(function(n){return function(e){return i(n,this,arguments)}})),l("URIError",(function(n){return function(e){return i(n,this,arguments)}})),p("CompileError",(function(n){return function(e){return i(n,this,arguments)}})),p("LinkError",(function(n){return function(e){return i(n,this,arguments)}})),p("RuntimeError",(function(n){return function(e){return i(n,this,arguments)}}))},function(n,e,t){"use strict";var r=t(0),o=t(52),i=t(101),a=t(11),s=t(96),c=t(25),l=t(19),p=t(62),u=t(6),d=t(83),f=t(78),g=d("slice"),m=u("species"),h=Array,v=Math.max;r({target:"Array",proto:!0,forced:!g},{slice:function(n,e){var t,r,u,d=l(this),g=c(d),b=s(n,g),y=s(void 0===e?g:e,g);if(o(d)&&(t=d.constructor,(i(t)&&(t===h||o(t.prototype))||a(t)&&null===(t=t[m]))&&(t=void 0),t===h||void 0===t))return f(d,b,y);for(r=new(void 0===t?h:t)(v(y-b,0)),u=0;b<y;b++,u++)b in d&&p(r,u,d[b]);return r.length=u,r}})},function(n,e,t){var r,o,i,a=t(253),s=t(3),c=t(2),l=t(11),p=t(36),u=t(9),d=t(121),f=t(97),g=t(74),m=s.TypeError,h=s.WeakMap;if(a||d.state){var v=d.state||(d.state=new h),b=c(v.get),y=c(v.has),x=c(v.set);r=function(n,e){if(y(v,n))throw new m("Object already initialized");return e.facade=n,x(v,n,e),e},o=function(n){return b(v,n)||{}},i=function(n){return y(v,n)}}else{var S=f("state");g[S]=!0,r=function(n,e){if(u(n,S))throw new m("Object already initialized");return e.facade=n,p(n,S,e),e},o=function(n){return u(n,S)?n[S]:{}},i=function(n){return u(n,S)}}n.exports={set:r,get:o,has:i,enforce:function(n){return i(n)?o(n):r(n,{})},getterFor:function(n){return function(e){var t;if(!l(e)||(t=o(e)).type!==n)throw m("Incompatible receiver, "+n+" required");return t}}}},function(n,e,t){var r=t(72),o=Function.prototype,i=o.apply,a=o.call;n.exports="object"==typeof Reflect&&Reflect.apply||(r?a.bind(i):function(){return a.apply(i,arguments)})},function(n,e,t){var r=t(316),o=t(319);n.exports=function(n,e){var t=o(n,e);return r(t)?t:void 0}},function(n,e,t){t(392),t(393)},function(n,e,t){"use strict";t.d(e,"e",(function(){return r})),t.d(e,"b",(function(){return i})),t.d(e,"j",(function(){return a})),t.d(e,"g",(function(){return c})),t.d(e,"h",(function(){return l})),t.d(e,"i",(function(){return p})),t.d(e,"c",(function(){return u})),t.d(e,"f",(function(){return d})),t.d(e,"l",(function(){return f})),t.d(e,"m",(function(){return g})),t.d(e,"d",(function(){return h})),t.d(e,"k",(function(){return v})),t.d(e,"n",(function(){return b})),t.d(e,"a",(function(){return x}));t(24),t(47),t(154),t(88),t(151),t(120),t(46),t(21),t(5),t(22),t(29),t(91),t(87),t(166),t(65),t(223),t(27),t(155);var r=/#.*$/,o=/\.(md|html)$/,i=/\/$/,a=/^[a-z]+:/i;function s(n){return decodeURI(n).replace(r,"").replace(o,"")}function c(n){return a.test(n)}function l(n){return/^mailto:/.test(n)}function p(n){return/^tel:/.test(n)}function u(n){if(c(n))return n;if(!n)return"404";var e=n.match(r),t=e?e[0]:"",o=s(n);return i.test(o)?n:o+".html"+t}function d(n,e){var t=n.hash,o=function(n){var e=n&&n.match(r);if(e)return e[0]}(e);return(!o||t===o)&&s(n.path)===s(e)}function f(n,e,t){if(c(e))return{type:"external",path:e};t&&(e=function(n,e,t){var r=n.charAt(0);if("/"===r)return n;if("?"===r||"#"===r)return e+n;var o=e.split("/");t&&o[o.length-1]||o.pop();for(var i=n.replace(/^\//,"").split("/"),a=0;a<i.length;a++){var s=i[a];".."===s?o.pop():"."!==s&&o.push(s)}""!==o[0]&&o.unshift("");return o.join("/")}(e,t));for(var r=s(e),o=0;o<n.length;o++)if(s(n[o].regularPath)===r)return Object.assign({},n[o],{type:"page",path:u(n[o].path)});return console.error('[vuepress] No matching page found for sidebar item "'.concat(e,'"')),{}}function g(n,e,t,r){var o=t.pages,i=t.themeConfig,a=r&&i.locales&&i.locales[r]||i;if("auto"===(n.frontmatter.sidebar||a.sidebar||i.sidebar))return m(n);var s=a.sidebar||i.sidebar;if(s){var c=function(n,e){if(Array.isArray(e))return{base:"/",config:e};for(var t in e)if(0===(r=n,/(\.html|\/)$/.test(r)?r:r+"/").indexOf(encodeURI(t)))return{base:t,config:e[t]};var r;return{}}(e,s),l=c.base,p=c.config;return"auto"===p?m(n):p?p.map((function(n){return function n(e,t,r){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;if("string"==typeof e)return f(t,e,r);if(Array.isArray(e))return Object.assign(f(t,e[0],r),{title:e[1]});o>3&&console.error("[vuepress] detected a too deep nested sidebar group.");var i=e.children||[];return 0===i.length&&e.path?Object.assign(f(t,e.path,r),{title:e.title}):{type:"group",path:e.path,title:e.title,sidebarDepth:e.sidebarDepth,initialOpenGroupIndex:e.initialOpenGroupIndex,children:i.map((function(e){return n(e,t,r,o+1)})),collapsable:!1!==e.collapsable}}(n,o,l)})):[]}return[]}function m(n){var e=h(n.headers||[]);return[{type:"group",collapsable:!1,title:n.title,path:null,children:e.map((function(e){return{type:"auto",title:e.title,basePath:n.path,path:n.path+"#"+e.slug,children:e.children||[]}}))}]}function h(n){var e;return(n=n.map((function(n){return Object.assign({},n)}))).forEach((function(n){2===n.level?e=n:e&&(e.children||(e.children=[])).push(n)})),n.filter((function(n){return 2===n.level}))}function v(n){return Object.assign(n,{type:n.items&&n.items.length?"links":"link"})}function b(n){return Object.prototype.toString.call(n).match(/\[object (.*?)\]/)[1].toLowerCase()}function y(n){var e=n.frontmatter.date||n.lastUpdated||new Date,t=new Date(e);return"Invalid Date"==t&&e&&(t=new Date(e.replace(/-/g,"/"))),t.getTime()}function x(n,e){return y(e)-y(n)}},function(n,e,t){"use strict";var r=t(0),o=t(67).map;r({target:"Array",proto:!0,forced:!t(83)("map")},{map:function(n){return o(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){"use strict";var r=t(42),o=t(8),i=t(2),a=t(118),s=t(1),c=t(10),l=t(4),p=t(48),u=t(59),d=t(13),f=t(18),g=t(138),m=t(50),h=t(297),v=t(119),b=t(6)("replace"),y=Math.max,x=Math.min,S=i([].concat),_=i([].push),w=i("".indexOf),j=i("".slice),C="$0"==="a".replace(/./,"$0"),k=!!/./[b]&&""===/./[b]("a","$0");a("replace",(function(n,e,t){var i=k?"$":"$0";return[function(n,t){var r=f(this),i=null==n?void 0:m(n,b);return i?o(i,n,r,t):o(e,d(r),n,t)},function(n,o){var a=c(this),s=d(n);if("string"==typeof o&&-1===w(o,i)&&-1===w(o,"$<")){var f=t(e,a,s,o);if(f.done)return f.value}var m=l(o);m||(o=d(o));var b=a.global;if(b){var C=a.unicode;a.lastIndex=0}for(var k=[];;){var E=v(a,s);if(null===E)break;if(_(k,E),!b)break;""===d(E[0])&&(a.lastIndex=g(s,u(a.lastIndex),C))}for(var B,A="",T=0,I=0;I<k.length;I++){for(var O=d((E=k[I])[0]),P=y(x(p(E.index),s.length),0),M=[],L=1;L<E.length;L++)_(M,void 0===(B=E[L])?B:String(B));var z=E.groups;if(m){var R=S([O],M,P,s);void 0!==z&&_(R,z);var D=d(r(o,void 0,R))}else D=h(O,s,P,M,z,o);P>=T&&(A+=j(s,T,P)+D,T=P+O.length)}return A+j(s,T)}]}),!!s((function(){var n=/./;return n.exec=function(){var n=[];return n.groups={a:"7"},n},"7"!=="".replace(n,"$<a>")}))||!C||k)},function(n,e,t){var r=t(252);n.exports=function(n){var e=+n;return e!=e||0===e?0:r(e)}},function(n,e,t){"use strict";var r=t(1);n.exports=function(n,e){var t=[][n];return!!t&&r((function(){t.call(null,e||function(){return 1},1)}))}},function(n,e,t){var r=t(28);n.exports=function(n,e){var t=n[e];return null==t?void 0:r(t)}},function(n,e){n.exports=function(n,e){return{enumerable:!(1&n),configurable:!(2&n),writable:!(4&n),value:e}}},function(n,e,t){var r=t(30);n.exports=Array.isArray||function(n){return"Array"==r(n)}},function(n,e){n.exports=function(n){return null!=n&&"object"==typeof n}},function(n,e,t){"use strict";t.d(e,"a",(function(){return i}));t(89),t(61),t(29),t(5),t(410),t(21),t(22),t(194),t(411),t(82);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}},function(n,e,t){var r=t(17),o=t(121);(n.exports=function(n,e){return o[n]||(o[n]=void 0!==e?e:{})})("versions",[]).push({version:"3.23.0",mode:r?"pure":"global",copyright:"© 2014-2022 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.23.0/LICENSE",source:"https://github.com/zloirock/core-js"})},function(n,e,t){var r=t(57),o=t(1);n.exports=!!Object.getOwnPropertySymbols&&!o((function(){var n=Symbol();return!String(n)||!(Object(n)instanceof Symbol)||!Symbol.sham&&r&&r<41}))},function(n,e,t){var r,o,i=t(3),a=t(32),s=i.process,c=i.Deno,l=s&&s.versions||c&&c.version,p=l&&l.v8;p&&(o=(r=p.split("."))[0]>0&&r[0]<4?1:+(r[0]+r[1])),!o&&a&&(!(r=a.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=a.match(/Chrome\/(\d+)/))&&(o=+r[1]),n.exports=o},function(n,e){var t=String;n.exports=function(n){try{return t(n)}catch(n){return"Object"}}},function(n,e,t){var r=t(48),o=Math.min;n.exports=function(n){return n>0?o(r(n),9007199254740991):0}},function(n,e,t){var r=t(3);n.exports=r.Promise},function(n,e,t){t(271),t(275),t(276),t(134),t(277)},function(n,e,t){"use strict";var r=t(94),o=t(12),i=t(51);n.exports=function(n,e,t){var a=r(e);a in n?o.f(n,a,i(0,t)):n[a]=t}},function(n,e,t){"use strict";t.d(e,"a",(function(){return o}));t(61),t(81),t(5),t(103),t(20),t(26),t(279),t(280),t(281),t(282),t(82),t(135),t(39),t(27),t(136),t(21),t(22),t(70),t(137),t(288),t(40);var r=t(64);function o(){
/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
o=function(){return n};var n={},e=Object.prototype,t=e.hasOwnProperty,i="function"==typeof Symbol?Symbol:{},a=i.iterator||"@@iterator",s=i.asyncIterator||"@@asyncIterator",c=i.toStringTag||"@@toStringTag";function l(n,e,t){return Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}),n[e]}try{l({},"")}catch(n){l=function(n,e,t){return n[e]=t}}function p(n,e,t,r){var o=e&&e.prototype instanceof f?e:f,i=Object.create(o.prototype),a=new C(r||[]);return i._invoke=function(n,e,t){var r="suspendedStart";return function(o,i){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===o)throw i;return E()}for(t.method=o,t.arg=i;;){var a=t.delegate;if(a){var s=_(a,t);if(s){if(s===d)continue;return s}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if("suspendedStart"===r)throw r="completed",t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);r="executing";var c=u(n,e,t);if("normal"===c.type){if(r=t.done?"completed":"suspendedYield",c.arg===d)continue;return{value:c.arg,done:t.done}}"throw"===c.type&&(r="completed",t.method="throw",t.arg=c.arg)}}}(n,t,a),i}function u(n,e,t){try{return{type:"normal",arg:n.call(e,t)}}catch(n){return{type:"throw",arg:n}}}n.wrap=p;var d={};function f(){}function g(){}function m(){}var h={};l(h,a,(function(){return this}));var v=Object.getPrototypeOf,b=v&&v(v(k([])));b&&b!==e&&t.call(b,a)&&(h=b);var y=m.prototype=f.prototype=Object.create(h);function x(n){["next","throw","return"].forEach((function(e){l(n,e,(function(n){return this._invoke(e,n)}))}))}function S(n,e){var o;this._invoke=function(i,a){function s(){return new e((function(o,s){!function o(i,a,s,c){var l=u(n[i],n,a);if("throw"!==l.type){var p=l.arg,d=p.value;return d&&"object"==Object(r.a)(d)&&t.call(d,"__await")?e.resolve(d.__await).then((function(n){o("next",n,s,c)}),(function(n){o("throw",n,s,c)})):e.resolve(d).then((function(n){p.value=n,s(p)}),(function(n){return o("throw",n,s,c)}))}c(l.arg)}(i,a,o,s)}))}return o=o?o.then(s,s):s()}}function _(n,e){var t=n.iterator[e.method];if(void 0===t){if(e.delegate=null,"throw"===e.method){if(n.iterator.return&&(e.method="return",e.arg=void 0,_(n,e),"throw"===e.method))return d;e.method="throw",e.arg=new TypeError("The iterator does not provide a 'throw' method")}return d}var r=u(t,n.iterator,e.arg);if("throw"===r.type)return e.method="throw",e.arg=r.arg,e.delegate=null,d;var o=r.arg;return o?o.done?(e[n.resultName]=o.value,e.next=n.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,d):o:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,d)}function w(n){var e={tryLoc:n[0]};1 in n&&(e.catchLoc=n[1]),2 in n&&(e.finallyLoc=n[2],e.afterLoc=n[3]),this.tryEntries.push(e)}function j(n){var e=n.completion||{};e.type="normal",delete e.arg,n.completion=e}function C(n){this.tryEntries=[{tryLoc:"root"}],n.forEach(w,this),this.reset(!0)}function k(n){if(n){var e=n[a];if(e)return e.call(n);if("function"==typeof n.next)return n;if(!isNaN(n.length)){var r=-1,o=function e(){for(;++r<n.length;)if(t.call(n,r))return e.value=n[r],e.done=!1,e;return e.value=void 0,e.done=!0,e};return o.next=o}}return{next:E}}function E(){return{value:void 0,done:!0}}return g.prototype=m,l(y,"constructor",m),l(m,"constructor",g),g.displayName=l(m,c,"GeneratorFunction"),n.isGeneratorFunction=function(n){var e="function"==typeof n&&n.constructor;return!!e&&(e===g||"GeneratorFunction"===(e.displayName||e.name))},n.mark=function(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,m):(n.__proto__=m,l(n,c,"GeneratorFunction")),n.prototype=Object.create(y),n},n.awrap=function(n){return{__await:n}},x(S.prototype),l(S.prototype,s,(function(){return this})),n.AsyncIterator=S,n.async=function(e,t,r,o,i){void 0===i&&(i=Promise);var a=new S(p(e,t,r,o),i);return n.isGeneratorFunction(t)?a:a.next().then((function(n){return n.done?n.value:a.next()}))},x(y),l(y,c,"Generator"),l(y,a,(function(){return this})),l(y,"toString",(function(){return"[object Generator]"})),n.keys=function(n){var e=[];for(var t in n)e.push(t);return e.reverse(),function t(){for(;e.length;){var r=e.pop();if(r in n)return t.value=r,t.done=!1,t}return t.done=!0,t}},n.values=k,C.prototype={constructor:C,reset:function(n){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(j),!n)for(var e in this)"t"===e.charAt(0)&&t.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var n=this.tryEntries[0].completion;if("throw"===n.type)throw n.arg;return this.rval},dispatchException:function(n){if(this.done)throw n;var e=this;function r(t,r){return a.type="throw",a.arg=n,e.next=t,r&&(e.method="next",e.arg=void 0),!!r}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],a=i.completion;if("root"===i.tryLoc)return r("end");if(i.tryLoc<=this.prev){var s=t.call(i,"catchLoc"),c=t.call(i,"finallyLoc");if(s&&c){if(this.prev<i.catchLoc)return r(i.catchLoc,!0);if(this.prev<i.finallyLoc)return r(i.finallyLoc)}else if(s){if(this.prev<i.catchLoc)return r(i.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return r(i.finallyLoc)}}}},abrupt:function(n,e){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&t.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===n||"continue"===n)&&i.tryLoc<=e&&e<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=n,a.arg=e,i?(this.method="next",this.next=i.finallyLoc,d):this.complete(a)},complete:function(n,e){if("throw"===n.type)throw n.arg;return"break"===n.type||"continue"===n.type?this.next=n.arg:"return"===n.type?(this.rval=this.arg=n.arg,this.method="return",this.next="end"):"normal"===n.type&&e&&(this.next=e),d},finish:function(n){for(var e=this.tryEntries.length-1;e>=0;--e){var t=this.tryEntries[e];if(t.finallyLoc===n)return this.complete(t.completion,t.afterLoc),j(t),d}},catch:function(n){for(var e=this.tryEntries.length-1;e>=0;--e){var t=this.tryEntries[e];if(t.tryLoc===n){var r=t.completion;if("throw"===r.type){var o=r.arg;j(t)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(n,e,t){return this.delegate={iterator:k(n),resultName:e,nextLoc:t},"next"===this.method&&(this.arg=void 0),d}},n}},function(n,e,t){"use strict";t.d(e,"a",(function(){return r}));t(61),t(81),t(5),t(103),t(20),t(26);function r(n){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}},function(n,e,t){"use strict";var r=t(0),o=t(1),i=t(52),a=t(11),s=t(16),c=t(25),l=t(161),p=t(62),u=t(116),d=t(83),f=t(6),g=t(57),m=f("isConcatSpreadable"),h=g>=51||!o((function(){var n=[];return n[m]=!1,n.concat()[0]!==n})),v=d("concat"),b=function(n){if(!a(n))return!1;var e=n[m];return void 0!==e?!!e:i(n)};r({target:"Array",proto:!0,arity:1,forced:!h||!v},{concat:function(n){var e,t,r,o,i,a=s(this),d=u(a,0),f=0;for(e=-1,r=arguments.length;e<r;e++)if(b(i=-1===e?a:arguments[e]))for(o=c(i),l(f+o),t=0;t<o;t++,f++)t in i&&p(d,f,i[t]);else l(f+1),p(d,f++,i);return d.length=f,d}})},function(n,e,t){var r=t(2),o=t(28),i=t(72),a=r(r.bind);n.exports=function(n,e){return o(n),void 0===e?n:i?a(n,e):function(){return n.apply(e,arguments)}}},function(n,e,t){var r=t(66),o=t(2),i=t(68),a=t(16),s=t(25),c=t(116),l=o([].push),p=function(n){var e=1==n,t=2==n,o=3==n,p=4==n,u=6==n,d=7==n,f=5==n||u;return function(g,m,h,v){for(var b,y,x=a(g),S=i(x),_=r(m,h),w=s(S),j=0,C=v||c,k=e?C(g,w):t||d?C(g,0):void 0;w>j;j++)if((f||j in S)&&(y=_(b=S[j],j,x),n))if(e)k[j]=y;else if(y)switch(n){case 3:return!0;case 5:return b;case 6:return j;case 2:l(k,b)}else switch(n){case 4:return!1;case 7:l(k,b)}return u?-1:o||p?p:k}};n.exports={forEach:p(0),map:p(1),filter:p(2),some:p(3),every:p(4),find:p(5),findIndex:p(6),filterReject:p(7)}},function(n,e,t){var r=t(2),o=t(1),i=t(30),a=Object,s=r("".split);n.exports=o((function(){return!a("z").propertyIsEnumerable(0)}))?function(n){return"String"==i(n)?s(n,""):a(n)}:a},function(n,e,t){var r=t(171),o=t(125).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(n){return r(n,o)}},function(n,e,t){var r=t(7),o=t(76).EXISTS,i=t(2),a=t(12).f,s=Function.prototype,c=i(s.toString),l=/function\b(?:\s|\/\*[\S\s]*?\*\/|\/\/[^\n\r]*[\n\r]+)*([^\s(/]*)/,p=i(l.exec);r&&!o&&a(s,"name",{configurable:!0,get:function(){try{return p(l,c(this))[1]}catch(n){return""}}})},function(n,e,t){var r=t(84),o=t(301),i=t(302),a=r?r.toStringTag:void 0;n.exports=function(n){return null==n?void 0===n?"[object Undefined]":"[object Null]":a&&a in Object(n)?o(n):i(n)}},function(n,e,t){var r=t(1);n.exports=!r((function(){var n=function(){}.bind();return"function"!=typeof n||n.hasOwnProperty("prototype")}))},function(n,e,t){var r=t(14),o=t(4),i=t(35),a=t(167),s=Object;n.exports=a?function(n){return"symbol"==typeof n}:function(n){var e=r("Symbol");return o(e)&&i(e.prototype,s(n))}},function(n,e){n.exports={}},function(n,e){n.exports={}},function(n,e,t){var r=t(7),o=t(9),i=Function.prototype,a=r&&Object.getOwnPropertyDescriptor,s=o(i,"name"),c=s&&"something"===function(){}.name,l=s&&(!r||r&&a(i,"name").configurable);n.exports={EXISTS:s,PROPER:c,CONFIGURABLE:l}},function(n,e,t){var r=t(2),o=t(10),i=t(254);n.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var n,e=!1,t={};try{(n=r(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set))(t,[]),e=t instanceof Array}catch(n){}return function(t,r){return o(t),i(r),e?n(t,r):t.__proto__=r,t}}():void 0)},function(n,e,t){var r=t(2);n.exports=r([].slice)},function(n,e,t){var r=t(3),o=t(60),i=t(4),a=t(114),s=t(98),c=t(6),l=t(262),p=t(17),u=t(57),d=o&&o.prototype,f=c("species"),g=!1,m=i(r.PromiseRejectionEvent),h=a("Promise",(function(){var n=s(o),e=n!==String(o);if(!e&&66===u)return!0;if(p&&(!d.catch||!d.finally))return!0;if(u>=51&&/native code/.test(n))return!1;var t=new o((function(n){n(1)})),r=function(n){n((function(){}),(function(){}))};return(t.constructor={})[f]=r,!(g=t.then((function(){}))instanceof r)||!e&&l&&!m}));n.exports={CONSTRUCTOR:h,REJECTION_EVENT:m,SUBCLASSING:g}},function(n,e,t){"use strict";var r=t(28),o=function(n){var e,t;this.promise=new n((function(n,r){if(void 0!==e||void 0!==t)throw TypeError("Bad Promise constructor");e=n,t=r})),this.resolve=r(e),this.reject=r(t)};n.exports.f=function(n){return new o(n)}},function(n,e,t){"use strict";var r=t(0),o=t(7),i=t(3),a=t(2),s=t(9),c=t(4),l=t(35),p=t(13),u=t(12).f,d=t(127),f=i.Symbol,g=f&&f.prototype;if(o&&c(f)&&(!("description"in g)||void 0!==f().description)){var m={},h=function(){var n=arguments.length<1||void 0===arguments[0]?void 0:p(arguments[0]),e=l(g,this)?new f(n):void 0===n?f():f(n);return""===n&&(m[e]=!0),e};d(h,f),h.prototype=g,g.constructor=h;var v="Symbol(test)"==String(f("test")),b=a(g.toString),y=a(g.valueOf),x=/^Symbol\((.*)\)[^)]+$/,S=a("".replace),_=a("".slice);u(g,"description",{configurable:!0,get:function(){var n=y(this),e=b(n);if(s(m,n))return"";var t=v?_(e,7,-1):S(e,x,"$1");return""===t?void 0:t}}),r({global:!0,constructor:!0,forced:!0},{Symbol:h})}},function(n,e,t){var r=t(0),o=t(7),i=t(12).f;r({target:"Object",stat:!0,forced:Object.defineProperty!==i,sham:!o},{defineProperty:i})},function(n,e,t){var r=t(1),o=t(6),i=t(57),a=o("species");n.exports=function(n){return i>=51||!r((function(){var e=[];return(e.constructor={})[a]=function(){return{foo:1}},1!==e[n](Boolean).foo}))}},function(n,e,t){var r=t(33).Symbol;n.exports=r},function(n,e,t){"use strict";t.d(e,"a",(function(){return i}));t(91);var r=t(86);t(61),t(81),t(5),t(103),t(20),t(26),t(199);var o=t(111);t(39),t(27);function i(n){return function(n){if(Array.isArray(n))return Object(r.a)(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||Object(o.a)(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},function(n,e,t){"use strict";function r(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}t.d(e,"a",(function(){return r}))},function(n,e,t){"use strict";var r=t(0),o=t(2),i=t(124).indexOf,a=t(49),s=o([].indexOf),c=!!s&&1/s([1],1,-0)<0,l=a("indexOf");r({target:"Array",proto:!0,forced:c||!l},{indexOf:function(n){var e=arguments.length>1?arguments[1]:void 0;return c?s(this,n,e)||0:i(this,n,e)}})},function(n,e,t){"use strict";t(24);var r,o,i=t(0),a=t(8),s=t(2),c=t(4),l=t(11),p=(r=!1,(o=/[ac]/).exec=function(){return r=!0,/./.exec.apply(this,arguments)},!0===o.test("abc")&&r),u=TypeError,d=s(/./.test);i({target:"RegExp",proto:!0,forced:!p},{test:function(n){var e=this.exec;if(!c(e))return d(this,n);var t=a(e,this,n);if(null!==t&&!l(t))throw new u("RegExp exec method returned something other than an Object or null");return!!t}})},function(n,e,t){var r=t(0),o=t(16),i=t(95);r({target:"Object",stat:!0,forced:t(1)((function(){i(1)}))},{keys:function(n){return i(o(n))}})},function(n,e,t){var r=t(131),o=t(4),i=t(30),a=t(6)("toStringTag"),s=Object,c="Arguments"==i(function(){return arguments}());n.exports=r?i:function(n){var e,t,r;return void 0===n?"Undefined":null===n?"Null":"string"==typeof(t=function(n,e){try{return n[e]}catch(n){}}(e=s(n),a))?t:c?i(e):"Object"==(r=i(e))&&o(e.callee)?"Arguments":r}},function(n,e,t){t(0)({target:"Array",stat:!0},{isArray:t(52)})},function(n,e,t){var r=t(2),o=0,i=Math.random(),a=r(1..toString);n.exports=function(n){return"Symbol("+(void 0===n?"":n)+")_"+a(++o+i,36)}},function(n,e,t){var r=t(3),o=t(11),i=r.document,a=o(i)&&o(i.createElement);n.exports=function(n){return a?i.createElement(n):{}}},function(n,e,t){var r=t(170),o=t(73);n.exports=function(n){var e=r(n,"string");return o(e)?e:e+""}},function(n,e,t){var r=t(171),o=t(125);n.exports=Object.keys||function(n){return r(n,o)}},function(n,e,t){var r=t(48),o=Math.max,i=Math.min;n.exports=function(n,e){var t=r(n);return t<0?o(t+e,0):i(t,e)}},function(n,e,t){var r=t(55),o=t(92),i=r("keys");n.exports=function(n){return i[n]||(i[n]=o(n))}},function(n,e,t){var r=t(2),o=t(4),i=t(121),a=r(Function.toString);o(i.inspectSource)||(i.inspectSource=function(n){return a(n)}),n.exports=i.inspectSource},function(n,e){e.f=Object.getOwnPropertySymbols},function(n,e,t){var r=t(30),o=t(3);n.exports="process"==r(o.process)},function(n,e,t){var r=t(2),o=t(1),i=t(4),a=t(90),s=t(14),c=t(98),l=function(){},p=[],u=s("Reflect","construct"),d=/^\s*(?:class|function)\b/,f=r(d.exec),g=!d.exec(l),m=function(n){if(!i(n))return!1;try{return u(l,p,n),!0}catch(n){return!1}},h=function(n){if(!i(n))return!1;switch(a(n)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}try{return g||!!f(d,c(n))}catch(n){return!0}};h.sham=!0,n.exports=!u||o((function(){var n;return m(m.call)||!m(Object)||!m((function(){n=!0}))||n}))?h:m},function(n,e,t){var r=t(272),o=t(9),i=t(187),a=t(12).f;n.exports=function(n){var e=r.Symbol||(r.Symbol={});o(e,n)||a(e,n,{value:i.f(n)})}},function(n,e,t){t(102)("iterator")},function(n,e,t){"use strict";t.d(e,"a",(function(){return o}));t(5);function r(n,e,t,r,o,i,a){try{var s=n[i](a),c=s.value}catch(n){return void t(n)}s.done?e(c):Promise.resolve(c).then(r,o)}function o(n){return function(){var e=this,t=arguments;return new Promise((function(o,i){var a=n.apply(e,t);function s(n){r(a,o,i,s,c,"next",n)}function c(n){r(a,o,i,s,c,"throw",n)}s(void 0)}))}}},function(n,e,t){"use strict";var r,o,i=t(8),a=t(2),s=t(13),c=t(200),l=t(117),p=t(55),u=t(34),d=t(41).get,f=t(236),g=t(241),m=p("native-string-replace",String.prototype.replace),h=RegExp.prototype.exec,v=h,b=a("".charAt),y=a("".indexOf),x=a("".replace),S=a("".slice),_=(o=/b*/g,i(h,r=/a/,"a"),i(h,o,"a"),0!==r.lastIndex||0!==o.lastIndex),w=l.BROKEN_CARET,j=void 0!==/()??/.exec("")[1];(_||j||w||f||g)&&(v=function(n){var e,t,r,o,a,l,p,f=this,g=d(f),C=s(n),k=g.raw;if(k)return k.lastIndex=f.lastIndex,e=i(v,k,C),f.lastIndex=k.lastIndex,e;var E=g.groups,B=w&&f.sticky,A=i(c,f),T=f.source,I=0,O=C;if(B&&(A=x(A,"y",""),-1===y(A,"g")&&(A+="g"),O=S(C,f.lastIndex),f.lastIndex>0&&(!f.multiline||f.multiline&&"\n"!==b(C,f.lastIndex-1))&&(T="(?: "+T+")",O=" "+O,I++),t=new RegExp("^(?:"+T+")",A)),j&&(t=new RegExp("^"+T+"$(?!\\s)",A)),_&&(r=f.lastIndex),o=i(h,B?t:f,O),B?o?(o.input=S(o.input,I),o[0]=S(o[0],I),o.index=f.lastIndex,f.lastIndex+=o[0].length):f.lastIndex=0:_&&o&&(f.lastIndex=f.global?o.index+o[0].length:r),j&&o&&o.length>1&&i(m,o[0],t,(function(){for(a=1;a<arguments.length-2;a++)void 0===arguments[a]&&(o[a]=void 0)})),o&&E)for(o.groups=l=u(null),a=0;a<E.length;a++)l[(p=E[a])[0]]=o[p[1]];return o}),n.exports=v},function(n,e,t){var r=t(306),o=t(307),i=t(308),a=t(309),s=t(310);function c(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}c.prototype.clear=r,c.prototype.delete=o,c.prototype.get=i,c.prototype.has=a,c.prototype.set=s,n.exports=c},function(n,e,t){var r=t(204);n.exports=function(n,e){for(var t=n.length;t--;)if(r(n[t][0],e))return t;return-1}},function(n,e,t){var r=t(43)(Object,"create");n.exports=r},function(n,e,t){var r=t(328);n.exports=function(n,e){var t=n.__data__;return r(e)?t["string"==typeof e?"string":"hash"]:t.map}},function(n,e,t){var r=t(146);n.exports=function(n){if("string"==typeof n||r(n))return n;var e=n+"";return"0"==e&&1/n==-1/0?"-0":e}},function(n,e,t){"use strict";t.d(e,"a",(function(){return o}));t(40),t(5),t(70),t(199),t(20),t(24),t(88);var r=t(86);function o(n,e){if(n){if("string"==typeof n)return Object(r.a)(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Object(r.a)(n,e):void 0}}},function(n,e,t){var r,o;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(o="function"==typeof(r=function(){var n,e,t={version:"0.2.0"},r=t.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function o(n,e,t){return n<e?e:n>t?t:n}function i(n){return 100*(-1+n)}t.configure=function(n){var e,t;for(e in n)void 0!==(t=n[e])&&n.hasOwnProperty(e)&&(r[e]=t);return this},t.status=null,t.set=function(n){var e=t.isStarted();n=o(n,r.minimum,1),t.status=1===n?null:n;var c=t.render(!e),l=c.querySelector(r.barSelector),p=r.speed,u=r.easing;return c.offsetWidth,a((function(e){""===r.positionUsing&&(r.positionUsing=t.getPositioningCSS()),s(l,function(n,e,t){var o;return(o="translate3d"===r.positionUsing?{transform:"translate3d("+i(n)+"%,0,0)"}:"translate"===r.positionUsing?{transform:"translate("+i(n)+"%,0)"}:{"margin-left":i(n)+"%"}).transition="all "+e+"ms "+t,o}(n,p,u)),1===n?(s(c,{transition:"none",opacity:1}),c.offsetWidth,setTimeout((function(){s(c,{transition:"all "+p+"ms linear",opacity:0}),setTimeout((function(){t.remove(),e()}),p)}),p)):setTimeout(e,p)})),this},t.isStarted=function(){return"number"==typeof t.status},t.start=function(){t.status||t.set(0);var n=function(){setTimeout((function(){t.status&&(t.trickle(),n())}),r.trickleSpeed)};return r.trickle&&n(),this},t.done=function(n){return n||t.status?t.inc(.3+.5*Math.random()).set(1):this},t.inc=function(n){var e=t.status;return e?("number"!=typeof n&&(n=(1-e)*o(Math.random()*e,.1,.95)),e=o(e+n,0,.994),t.set(e)):t.start()},t.trickle=function(){return t.inc(Math.random()*r.trickleRate)},n=0,e=0,t.promise=function(r){return r&&"resolved"!==r.state()?(0===e&&t.start(),n++,e++,r.always((function(){0==--e?(n=0,t.done()):t.set((n-e)/n)})),this):this},t.render=function(n){if(t.isRendered())return document.getElementById("nprogress");l(document.documentElement,"nprogress-busy");var e=document.createElement("div");e.id="nprogress",e.innerHTML=r.template;var o,a=e.querySelector(r.barSelector),c=n?"-100":i(t.status||0),p=document.querySelector(r.parent);return s(a,{transition:"all 0 linear",transform:"translate3d("+c+"%,0,0)"}),r.showSpinner||(o=e.querySelector(r.spinnerSelector))&&d(o),p!=document.body&&l(p,"nprogress-custom-parent"),p.appendChild(e),e},t.remove=function(){p(document.documentElement,"nprogress-busy"),p(document.querySelector(r.parent),"nprogress-custom-parent");var n=document.getElementById("nprogress");n&&d(n)},t.isRendered=function(){return!!document.getElementById("nprogress")},t.getPositioningCSS=function(){var n=document.body.style,e="WebkitTransform"in n?"Webkit":"MozTransform"in n?"Moz":"msTransform"in n?"ms":"OTransform"in n?"O":"";return e+"Perspective"in n?"translate3d":e+"Transform"in n?"translate":"margin"};var a=function(){var n=[];function e(){var t=n.shift();t&&t(e)}return function(t){n.push(t),1==n.length&&e()}}(),s=function(){var n=["Webkit","O","Moz","ms"],e={};function t(t){return t=t.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(n,e){return e.toUpperCase()})),e[t]||(e[t]=function(e){var t=document.body.style;if(e in t)return e;for(var r,o=n.length,i=e.charAt(0).toUpperCase()+e.slice(1);o--;)if((r=n[o]+i)in t)return r;return e}(t))}function r(n,e,r){e=t(e),n.style[e]=r}return function(n,e){var t,o,i=arguments;if(2==i.length)for(t in e)void 0!==(o=e[t])&&e.hasOwnProperty(t)&&r(n,t,o);else r(n,i[1],i[2])}}();function c(n,e){return("string"==typeof n?n:u(n)).indexOf(" "+e+" ")>=0}function l(n,e){var t=u(n),r=t+e;c(t,e)||(n.className=r.substring(1))}function p(n,e){var t,r=u(n);c(n,e)&&(t=r.replace(" "+e+" "," "),n.className=t.substring(1,t.length-1))}function u(n){return(" "+(n.className||"")+" ").replace(/\s+/gi," ")}function d(n){n&&n.parentNode&&n.parentNode.removeChild(n)}return t})?r.call(e,t,e,n):r)||(n.exports=o)},function(n){n.exports=JSON.parse('{"_from":"vuepress-plugin-comment@^0.7.3","_id":"vuepress-plugin-comment@0.7.3","_inBundle":false,"_integrity":"sha512-CvuBST37snmQGzGD5lMxyw0u2eXWKVPjegfuwlI2+CTs2qWarKX16dVHHLR8DVa/yL5UGT3VuoNETH/zEexl8A==","_location":"/vuepress-plugin-comment","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"vuepress-plugin-comment@^0.7.3","name":"vuepress-plugin-comment","escapedName":"vuepress-plugin-comment","rawSpec":"^0.7.3","saveSpec":null,"fetchSpec":"^0.7.3"},"_requiredBy":["#DEV:/"],"_resolved":"https://registry.npmjs.org/vuepress-plugin-comment/-/vuepress-plugin-comment-0.7.3.tgz","_shasum":"2cff36b8f90896a7f88d494d78458398b1510249","_spec":"vuepress-plugin-comment@^0.7.3","_where":"/home/runner/work/spring-boot-tutorial/spring-boot-tutorial","author":{"name":"dongyuanxin"},"bugs":{"url":"https://github.com/dongyuanxin/vuepress-plugin-comment/issues"},"bundleDependencies":false,"dependencies":{"ejs":"^2.6.1","gitalk":"^1.5.0","gitalk-fix":"^1.5.2","i":"^0.3.6","npm":"^6.9.0","valine":"^1.3.9"},"deprecated":false,"description":"Comment plugin in vuepress, such as Gitalk, Valine...","homepage":"https://github.com/dongyuanxin/vuepress-plugin-comment#readme","keywords":["vuepress","comment","plugin","vue","gitalk","valine"],"license":"MIT","main":"index.js","name":"vuepress-plugin-comment","repository":{"type":"git","url":"git+ssh://git@github.com/dongyuanxin/vuepress-plugin-comment.git"},"scripts":{"test":"echo \\"Error: no test specified\\" && exit 1"},"version":"0.7.3"}')},function(n,e,t){var r=t(1),o=t(4),i=/#|\.prototype\./,a=function(n,e){var t=c[s(n)];return t==p||t!=l&&(o(e)?r(e):!!e)},s=a.normalize=function(n){return String(n).replace(i,".").toLowerCase()},c=a.data={},l=a.NATIVE="N",p=a.POLYFILL="P";n.exports=a},function(n,e,t){var r=t(90),o=t(50),i=t(75),a=t(6)("iterator");n.exports=function(n){if(null!=n)return o(n,a)||o(n,"@@iterator")||i[r(n)]}},function(n,e,t){var r=t(274);n.exports=function(n,e){return new(r(n))(0===e?0:e)}},function(n,e,t){var r=t(1),o=t(3).RegExp,i=r((function(){var n=o("a","y");return n.lastIndex=2,null!=n.exec("abcd")})),a=i||r((function(){return!o("a","y").sticky})),s=i||r((function(){var n=o("^r","gy");return n.lastIndex=2,null!=n.exec("str")}));n.exports={BROKEN_CARET:s,MISSED_STICKY:a,UNSUPPORTED_Y:i}},function(n,e,t){"use strict";t(24);var r=t(2),o=t(15),i=t(105),a=t(1),s=t(6),c=t(36),l=s("species"),p=RegExp.prototype;n.exports=function(n,e,t,u){var d=s(n),f=!a((function(){var e={};return e[d]=function(){return 7},7!=""[n](e)})),g=f&&!a((function(){var e=!1,t=/a/;return"split"===n&&((t={}).constructor={},t.constructor[l]=function(){return t},t.flags="",t[d]=/./[d]),t.exec=function(){return e=!0,null},t[d](""),!e}));if(!f||!g||t){var m=r(/./[d]),h=e(d,""[n],(function(n,e,t,o,a){var s=r(n),c=e.exec;return c===i||c===p.exec?f&&!a?{done:!0,value:m(e,t,o)}:{done:!0,value:s(t,e,o)}:{done:!1}}));o(String.prototype,n,h[0]),o(p,d,h[1])}u&&c(p[d],"sham",!0)}},function(n,e,t){var r=t(8),o=t(10),i=t(4),a=t(30),s=t(105),c=TypeError;n.exports=function(n,e){var t=n.exec;if(i(t)){var l=r(t,n,e);return null!==l&&o(l),l}if("RegExp"===a(n))return r(s,n,e);throw c("RegExp#exec called on incompatible receiver")}},function(n,e,t){"use strict";var r=t(0),o=t(2),i=t(68),a=t(19),s=t(49),c=o([].join),l=i!=Object,p=s("join",",");r({target:"Array",proto:!0,forced:l||!p},{join:function(n){return c(a(this),void 0===n?",":n)}})},function(n,e,t){var r=t(3),o=t(122),i=r["__core-js_shared__"]||o("__core-js_shared__",{});n.exports=i},function(n,e,t){var r=t(3),o=Object.defineProperty;n.exports=function(n,e){try{o(r,n,{value:e,configurable:!0,writable:!0})}catch(t){r[n]=e}return e}},function(n,e,t){var r=t(7),o=t(168),i=t(12),a=t(10),s=t(19),c=t(95);e.f=r&&!o?Object.defineProperties:function(n,e){a(n);for(var t,r=s(e),o=c(e),l=o.length,p=0;l>p;)i.f(n,t=o[p++],r[t]);return n}},function(n,e,t){var r=t(19),o=t(96),i=t(25),a=function(n){return function(e,t,a){var s,c=r(e),l=i(c),p=o(a,l);if(n&&t!=t){for(;l>p;)if((s=c[p++])!=s)return!0}else for(;l>p;p++)if((n||p in c)&&c[p]===t)return n||p||0;return!n&&-1}};n.exports={includes:a(!0),indexOf:a(!1)}},function(n,e){n.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(n,e,t){"use strict";var r={}.propertyIsEnumerable,o=Object.getOwnPropertyDescriptor,i=o&&!r.call({1:2},1);e.f=i?function(n){var e=o(this,n);return!!e&&e.enumerable}:r},function(n,e,t){var r=t(9),o=t(128),i=t(38),a=t(12);n.exports=function(n,e,t){for(var s=o(e),c=a.f,l=i.f,p=0;p<s.length;p++){var u=s[p];r(n,u)||t&&r(t,u)||c(n,u,l(e,u))}}},function(n,e,t){var r=t(14),o=t(2),i=t(69),a=t(99),s=t(10),c=o([].concat);n.exports=r("Reflect","ownKeys")||function(n){var e=i.f(s(n)),t=a.f;return t?c(e,t(n)):e}},function(n,e,t){var r=t(9),o=t(4),i=t(16),a=t(97),s=t(176),c=a("IE_PROTO"),l=Object,p=l.prototype;n.exports=s?l.getPrototypeOf:function(n){var e=i(n);if(r(e,c))return e[c];var t=e.constructor;return o(t)&&e instanceof t?t.prototype:e instanceof l?p:null}},function(n,e,t){var r=t(10),o=t(177),i=t(6)("species");n.exports=function(n,e){var t,a=r(n).constructor;return void 0===a||null==(t=r(a)[i])?e:o(t)}},function(n,e,t){var r={};r[t(6)("toStringTag")]="z",n.exports="[object z]"===String(r)},function(n,e){n.exports=function(n){try{return{error:!1,value:n()}}catch(n){return{error:!0,value:n}}}},function(n,e,t){var r=t(96),o=t(25),i=t(62),a=Array,s=Math.max;n.exports=function(n,e,t){for(var c=o(n),l=r(e,c),p=r(void 0===t?c:t,c),u=a(s(p-l,0)),d=0;l<p;l++,d++)i(u,d,n[l]);return u.length=d,u}},function(n,e,t){var r=t(0),o=t(14),i=t(42),a=t(8),s=t(2),c=t(1),l=t(52),p=t(4),u=t(11),d=t(73),f=t(78),g=t(56),m=o("JSON","stringify"),h=s(/./.exec),v=s("".charAt),b=s("".charCodeAt),y=s("".replace),x=s(1..toString),S=/[\uD800-\uDFFF]/g,_=/^[\uD800-\uDBFF]$/,w=/^[\uDC00-\uDFFF]$/,j=!g||c((function(){var n=o("Symbol")();return"[null]"!=m([n])||"{}"!=m({a:n})||"{}"!=m(Object(n))})),C=c((function(){return'"\\udf06\\ud834"'!==m("\udf06\ud834")||'"\\udead"'!==m("\udead")})),k=function(n,e){var t=f(arguments),r=e;if((u(e)||void 0!==n)&&!d(n))return l(e)||(e=function(n,e){if(p(r)&&(e=a(r,this,n,e)),!d(e))return e}),t[1]=e,i(m,null,t)},E=function(n,e,t){var r=v(t,e-1),o=v(t,e+1);return h(_,n)&&!h(w,o)||h(w,n)&&!h(_,r)?"\\u"+x(b(n,0),16):n};m&&r({target:"JSON",stat:!0,arity:3,forced:j||C},{stringify:function(n,e,t){var r=f(arguments),o=i(j?k:m,null,r);return C&&"string"==typeof o?y(o,S,E):o}})},function(n,e,t){t(0)({target:"Object",stat:!0,sham:!t(7)},{create:t(34)})},function(n,e,t){var r=t(0),o=t(1),i=t(16),a=t(129),s=t(176);r({target:"Object",stat:!0,forced:o((function(){a(1)})),sham:!s},{getPrototypeOf:function(n){return a(i(n))}})},function(n,e,t){t(0)({target:"Object",stat:!0},{setPrototypeOf:t(77)})},function(n,e,t){"use strict";var r=t(189).charAt;n.exports=function(n,e,t){return e+(t?r(n,e).length:1)}},function(n,e,t){var r=t(300),o=t(53),i=Object.prototype,a=i.hasOwnProperty,s=i.propertyIsEnumerable,c=r(function(){return arguments}())?r:function(n){return o(n)&&a.call(n,"callee")&&!s.call(n,"callee")};n.exports=c},function(n,e,t){var r=t(43)(t(33),"Map");n.exports=r},function(n,e){n.exports=function(n){var e=typeof n;return null!=n&&("object"==e||"function"==e)}},function(n,e,t){var r=t(320),o=t(327),i=t(329),a=t(330),s=t(331);function c(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}c.prototype.clear=r,c.prototype.delete=o,c.prototype.get=i,c.prototype.has=a,c.prototype.set=s,n.exports=c},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n){t[++e]=n})),t}},function(n,e){n.exports=function(n){return"number"==typeof n&&n>-1&&n%1==0&&n<=9007199254740991}},function(n,e,t){var r=t(31),o=t(146),i=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,a=/^\w*$/;n.exports=function(n,e){if(r(n))return!1;var t=typeof n;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=n&&!o(n))||(a.test(n)||!i.test(n)||null!=e&&n in Object(e))}},function(n,e,t){var r=t(71),o=t(53);n.exports=function(n){return"symbol"==typeof n||o(n)&&"[object Symbol]"==r(n)}},function(n,e){n.exports=function(n){return n}},function(n,e,t){var r=t(0),o=t(222);r({target:"Function",proto:!0,forced:Function.bind!==o},{bind:o})},function(n,e,t){var r=t(0),o=t(3),i=t(37);r({global:!0},{Reflect:{}}),i(o.Reflect,"Reflect",!0)},function(n,e,t){"use strict";t.d(e,"a",(function(){return o}));t(91);t(61),t(81),t(5),t(103),t(20),t(26);var r=t(111);t(39),t(27);function o(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,o,i=[],a=!0,s=!1;try{for(t=t.call(n);!(a=(r=t.next()).done)&&(i.push(r.value),!e||i.length!==e);a=!0);}catch(n){s=!0,o=n}finally{try{a||null==t.return||t.return()}finally{if(s)throw o}}return i}}(n,e)||Object(r.a)(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},function(n,e,t){"use strict";var r=t(42),o=t(8),i=t(2),a=t(118),s=t(160),c=t(10),l=t(18),p=t(130),u=t(138),d=t(59),f=t(13),g=t(50),m=t(133),h=t(119),v=t(105),b=t(117),y=t(1),x=b.UNSUPPORTED_Y,S=Math.min,_=[].push,w=i(/./.exec),j=i(_),C=i("".slice);a("split",(function(n,e,t){var i;return i="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(n,t){var i=f(l(this)),a=void 0===t?4294967295:t>>>0;if(0===a)return[];if(void 0===n)return[i];if(!s(n))return o(e,i,n,a);for(var c,p,u,d=[],g=(n.ignoreCase?"i":"")+(n.multiline?"m":"")+(n.unicode?"u":"")+(n.sticky?"y":""),h=0,b=new RegExp(n.source,g+"g");(c=o(v,b,i))&&!((p=b.lastIndex)>h&&(j(d,C(i,h,c.index)),c.length>1&&c.index<i.length&&r(_,d,m(c,1)),u=c[0].length,h=p,d.length>=a));)b.lastIndex===c.index&&b.lastIndex++;return h===i.length?!u&&w(b,"")||j(d,""):j(d,C(i,h)),d.length>a?m(d,0,a):d}:"0".split(void 0,0).length?function(n,t){return void 0===n&&0===t?[]:o(e,this,n,t)}:e,[function(e,t){var r=l(this),a=null==e?void 0:g(e,n);return a?o(a,e,r,t):o(i,f(r),e,t)},function(n,r){var o=c(this),a=f(n),s=t(i,o,a,r,i!==e);if(s.done)return s.value;var l=p(o,RegExp),g=o.unicode,m=(o.ignoreCase?"i":"")+(o.multiline?"m":"")+(o.unicode?"u":"")+(x?"g":"y"),v=new l(x?"^(?:"+o.source+")":o,m),b=void 0===r?4294967295:r>>>0;if(0===b)return[];if(0===a.length)return null===h(v,a)?[a]:[];for(var y=0,_=0,w=[];_<a.length;){v.lastIndex=x?0:_;var k,E=h(v,x?C(a,_):a);if(null===E||(k=S(d(v.lastIndex+(x?_:0)),a.length))===y)_=u(a,_,g);else{if(j(w,C(a,y,_)),w.length===b)return w;for(var B=1;B<=E.length-1;B++)if(j(w,E[B]),w.length===b)return w;_=y=k}}return j(w,C(a,y)),w}]}),!!y((function(){var n=/(?:)/,e=n.exec;n.exec=function(){return e.apply(this,arguments)};var t="ab".split(n);return 2!==t.length||"a"!==t[0]||"b"!==t[1]})),x)},function(n,e,t){"use strict";var r=t(0),o=t(67).some;r({target:"Array",proto:!0,forced:!t(49)("some")},{some:function(n){return o(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){var r=t(6),o=t(34),i=t(12).f,a=r("unscopables"),s=Array.prototype;null==s[a]&&i(s,a,{configurable:!0,value:o(null)}),n.exports=function(n){s[a][n]=!0}},function(n,e,t){"use strict";var r=t(8),o=t(118),i=t(10),a=t(59),s=t(13),c=t(18),l=t(50),p=t(138),u=t(119);o("match",(function(n,e,t){return[function(e){var t=c(this),o=null==e?void 0:l(e,n);return o?r(o,e,t):new RegExp(e)[n](s(t))},function(n){var r=i(this),o=s(n),c=t(e,r,o);if(c.done)return c.value;if(!r.global)return u(r,o);var l=r.unicode;r.lastIndex=0;for(var d,f=[],g=0;null!==(d=u(r,o));){var m=s(d[0]);f[g]=m,""===m&&(r.lastIndex=p(o,a(r.lastIndex),l)),g++}return 0===g?null:f}]}))},function(n,e,t){"use strict";var r=t(76).PROPER,o=t(15),i=t(10),a=t(13),s=t(1),c=t(246),l=RegExp.prototype.toString,p=s((function(){return"/a/b"!=l.call({source:"a",flags:"b"})})),u=r&&"toString"!=l.name;(p||u)&&o(RegExp.prototype,"toString",(function(){var n=i(this);return"/"+a(n.source)+"/"+a(c(n))}),{unsafe:!0})},function(n,e,t){"use strict";var r=t(19),o=t(153),i=t(75),a=t(41),s=t(12).f,c=t(173),l=t(17),p=t(7),u=a.set,d=a.getterFor("Array Iterator");n.exports=c(Array,"Array",(function(n,e){u(this,{type:"Array Iterator",target:r(n),index:0,kind:e})}),(function(){var n=d(this),e=n.target,t=n.kind,r=n.index++;return!e||r>=e.length?(n.target=void 0,{value:void 0,done:!0}):"keys"==t?{value:r,done:!1}:"values"==t?{value:e[r],done:!1}:{value:[r,e[r]],done:!1}}),"values");var f=i.Arguments=i.Array;if(o("keys"),o("values"),o("entries"),!l&&p&&"values"!==f.name)try{s(f,"name",{value:"values"})}catch(n){}},function(n,e){var t=TypeError;n.exports=function(n,e){if(n<e)throw t("Not enough arguments");return n}},function(n,e,t){var r=t(8),o=t(28),i=t(10),a=t(58),s=t(115),c=TypeError;n.exports=function(n,e){var t=arguments.length<2?s(n):e;if(o(t))return i(r(t,n));throw c(a(n)+" is not iterable")}},function(n,e,t){var r=t(4),o=t(11),i=t(77);n.exports=function(n,e,t){var a,s;return i&&r(a=e.constructor)&&a!==t&&o(s=a.prototype)&&s!==t.prototype&&i(n,s),n}},function(n,e,t){var r=t(11),o=t(30),i=t(6)("match");n.exports=function(n){var e;return r(n)&&(void 0!==(e=n[i])?!!e:"RegExp"==o(n))}},function(n,e){var t=TypeError;n.exports=function(n){if(n>9007199254740991)throw t("Maximum allowed index exceeded");return n}},function(n,e){n.exports=function(n){return n.webpackPolyfill||(n.deprecate=function(){},n.paths=[],n.children||(n.children=[]),Object.defineProperty(n,"loaded",{enumerable:!0,get:function(){return n.l}}),Object.defineProperty(n,"id",{enumerable:!0,get:function(){return n.i}}),n.webpackPolyfill=1),n}},function(n,e){var t=/^\s+|\s+$/g,r=/^[-+]0x[0-9a-f]+$/i,o=/^0b[01]+$/i,i=/^0o[0-7]+$/i,a=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,c="object"==typeof self&&self&&self.Object===Object&&self,l=s||c||Function("return this")(),p=Object.prototype.toString,u=Math.max,d=Math.min,f=function(){return l.Date.now()};function g(n){var e=typeof n;return!!n&&("object"==e||"function"==e)}function m(n){if("number"==typeof n)return n;if(function(n){return"symbol"==typeof n||function(n){return!!n&&"object"==typeof n}(n)&&"[object Symbol]"==p.call(n)}(n))return NaN;if(g(n)){var e="function"==typeof n.valueOf?n.valueOf():n;n=g(e)?e+"":e}if("string"!=typeof n)return 0===n?n:+n;n=n.replace(t,"");var s=o.test(n);return s||i.test(n)?a(n.slice(2),s?2:8):r.test(n)?NaN:+n}n.exports=function(n,e,t){var r,o,i,a,s,c,l=0,p=!1,h=!1,v=!0;if("function"!=typeof n)throw new TypeError("Expected a function");function b(e){var t=r,i=o;return r=o=void 0,l=e,a=n.apply(i,t)}function y(n){return l=n,s=setTimeout(S,e),p?b(n):a}function x(n){var t=n-c;return void 0===c||t>=e||t<0||h&&n-l>=i}function S(){var n=f();if(x(n))return _(n);s=setTimeout(S,function(n){var t=e-(n-c);return h?d(t,i-(n-l)):t}(n))}function _(n){return s=void 0,v&&r?b(n):(r=o=void 0,a)}function w(){var n=f(),t=x(n);if(r=arguments,o=this,c=n,t){if(void 0===s)return y(c);if(h)return s=setTimeout(S,e),b(c)}return void 0===s&&(s=setTimeout(S,e)),a}return e=m(e)||0,g(t)&&(p=!!t.leading,i=(h="maxWait"in t)?u(m(t.maxWait)||0,e):i,v="trailing"in t?!!t.trailing:v),w.cancel=function(){void 0!==s&&clearTimeout(s),l=0,r=c=o=s=void 0},w.flush=function(){return void 0===s?a:_(f())},w}},function(n,e,t){var r=t(2),o=t(18),i=t(13),a=t(165),s=r("".replace),c="["+a+"]",l=RegExp("^"+c+c+"*"),p=RegExp(c+c+"*$"),u=function(n){return function(e){var t=i(o(e));return 1&n&&(t=s(t,l,"")),2&n&&(t=s(t,p,"")),t}};n.exports={start:u(1),end:u(2),trim:u(3)}},function(n,e){n.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},function(n,e,t){var r=t(2),o=t(15),i=Date.prototype,a=r(i.toString),s=r(i.getTime);"Invalid Date"!=String(new Date(NaN))&&o(i,"toString",(function(){var n=s(this);return n==n?a(this):"Invalid Date"}))},function(n,e,t){var r=t(56);n.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(n,e,t){var r=t(7),o=t(1);n.exports=r&&o((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},function(n,e,t){var r=t(7),o=t(1),i=t(93);n.exports=!r&&!o((function(){return 7!=Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a}))},function(n,e,t){var r=t(8),o=t(11),i=t(73),a=t(50),s=t(251),c=t(6),l=TypeError,p=c("toPrimitive");n.exports=function(n,e){if(!o(n)||i(n))return n;var t,c=a(n,p);if(c){if(void 0===e&&(e="default"),t=r(c,n,e),!o(t)||i(t))return t;throw l("Can't convert object to primitive value")}return void 0===e&&(e="number"),s(n,e)}},function(n,e,t){var r=t(2),o=t(9),i=t(19),a=t(124).indexOf,s=t(74),c=r([].push);n.exports=function(n,e){var t,r=i(n),l=0,p=[];for(t in r)!o(s,t)&&o(r,t)&&c(p,t);for(;e.length>l;)o(r,t=e[l++])&&(~a(p,t)||c(p,t));return p}},function(n,e,t){var r=t(14);n.exports=r("document","documentElement")},function(n,e,t){"use strict";var r=t(0),o=t(8),i=t(17),a=t(76),s=t(4),c=t(237),l=t(129),p=t(77),u=t(37),d=t(36),f=t(15),g=t(6),m=t(75),h=t(175),v=a.PROPER,b=a.CONFIGURABLE,y=h.IteratorPrototype,x=h.BUGGY_SAFARI_ITERATORS,S=g("iterator"),_=function(){return this};n.exports=function(n,e,t,a,g,h,w){c(t,e,a);var j,C,k,E=function(n){if(n===g&&O)return O;if(!x&&n in T)return T[n];switch(n){case"keys":case"values":case"entries":return function(){return new t(this,n)}}return function(){return new t(this)}},B=e+" Iterator",A=!1,T=n.prototype,I=T[S]||T["@@iterator"]||g&&T[g],O=!x&&I||E(g),P="Array"==e&&T.entries||I;if(P&&(j=l(P.call(new n)))!==Object.prototype&&j.next&&(i||l(j)===y||(p?p(j,y):s(j[S])||f(j,S,_)),u(j,B,!0,!0),i&&(m[B]=_)),v&&"values"==g&&I&&"values"!==I.name&&(!i&&b?d(T,"name","values"):(A=!0,O=function(){return o(I,this)})),g)if(C={values:E("values"),keys:h?O:E("keys"),entries:E("entries")},w)for(k in C)(x||A||!(k in T))&&f(T,k,C[k]);else r({target:e,proto:!0,forced:x||A},C);return i&&!w||T[S]===O||f(T,S,O,{name:g}),m[e]=O,C}},function(n,e,t){var r=t(1),o=t(4),i=t(9),a=t(7),s=t(76).CONFIGURABLE,c=t(98),l=t(41),p=l.enforce,u=l.get,d=Object.defineProperty,f=a&&!r((function(){return 8!==d((function(){}),"length",{value:8}).length})),g=String(String).split("String"),m=n.exports=function(n,e,t){"Symbol("===String(e).slice(0,7)&&(e="["+String(e).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),t&&t.getter&&(e="get "+e),t&&t.setter&&(e="set "+e),(!i(n,"name")||s&&n.name!==e)&&d(n,"name",{value:e,configurable:!0}),f&&t&&i(t,"arity")&&n.length!==t.arity&&d(n,"length",{value:t.arity});try{t&&i(t,"constructor")&&t.constructor?a&&d(n,"prototype",{writable:!1}):n.prototype&&(n.prototype=void 0)}catch(n){}var r=p(n);return i(r,"source")||(r.source=g.join("string"==typeof e?e:"")),n};Function.prototype.toString=m((function(){return o(this)&&u(this).source||c(this)}),"toString")},function(n,e,t){"use strict";var r,o,i,a=t(1),s=t(4),c=t(34),l=t(129),p=t(15),u=t(6),d=t(17),f=u("iterator"),g=!1;[].keys&&("next"in(i=[].keys())?(o=l(l(i)))!==Object.prototype&&(r=o):g=!0),null==r||a((function(){var n={};return r[f].call(n)!==n}))?r={}:d&&(r=c(r)),s(r[f])||p(r,f,(function(){return this})),n.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:g}},function(n,e,t){var r=t(1);n.exports=!r((function(){function n(){}return n.prototype.constructor=null,Object.getPrototypeOf(new n)!==n.prototype}))},function(n,e,t){var r=t(101),o=t(58),i=TypeError;n.exports=function(n){if(r(n))return n;throw i(o(n)+" is not a constructor")}},function(n,e,t){var r,o,i,a,s=t(3),c=t(42),l=t(66),p=t(4),u=t(9),d=t(1),f=t(172),g=t(78),m=t(93),h=t(157),v=t(179),b=t(100),y=s.setImmediate,x=s.clearImmediate,S=s.process,_=s.Dispatch,w=s.Function,j=s.MessageChannel,C=s.String,k=0,E={};try{r=s.location}catch(n){}var B=function(n){if(u(E,n)){var e=E[n];delete E[n],e()}},A=function(n){return function(){B(n)}},T=function(n){B(n.data)},I=function(n){s.postMessage(C(n),r.protocol+"//"+r.host)};y&&x||(y=function(n){h(arguments.length,1);var e=p(n)?n:w(n),t=g(arguments,1);return E[++k]=function(){c(e,void 0,t)},o(k),k},x=function(n){delete E[n]},b?o=function(n){S.nextTick(A(n))}:_&&_.now?o=function(n){_.now(A(n))}:j&&!v?(a=(i=new j).port2,i.port1.onmessage=T,o=l(a.postMessage,a)):s.addEventListener&&p(s.postMessage)&&!s.importScripts&&r&&"file:"!==r.protocol&&!d(I)?(o=I,s.addEventListener("message",T,!1)):o="onreadystatechange"in m("script")?function(n){f.appendChild(m("script")).onreadystatechange=function(){f.removeChild(this),B(n)}}:function(n){setTimeout(A(n),0)}),n.exports={set:y,clear:x}},function(n,e,t){var r=t(32);n.exports=/(?:ipad|iphone|ipod).*applewebkit/i.test(r)},function(n,e,t){var r=t(66),o=t(8),i=t(10),a=t(58),s=t(181),c=t(25),l=t(35),p=t(158),u=t(115),d=t(182),f=TypeError,g=function(n,e){this.stopped=n,this.result=e},m=g.prototype;n.exports=function(n,e,t){var h,v,b,y,x,S,_,w=t&&t.that,j=!(!t||!t.AS_ENTRIES),C=!(!t||!t.IS_ITERATOR),k=!(!t||!t.INTERRUPTED),E=r(e,w),B=function(n){return h&&d(h,"normal",n),new g(!0,n)},A=function(n){return j?(i(n),k?E(n[0],n[1],B):E(n[0],n[1])):k?E(n,B):E(n)};if(C)h=n;else{if(!(v=u(n)))throw f(a(n)+" is not iterable");if(s(v)){for(b=0,y=c(n);y>b;b++)if((x=A(n[b]))&&l(m,x))return x;return new g(!1)}h=p(n,v)}for(S=h.next;!(_=o(S,h)).done;){try{x=A(_.value)}catch(n){d(h,"throw",n)}if("object"==typeof x&&x&&l(m,x))return x}return new g(!1)}},function(n,e,t){var r=t(6),o=t(75),i=r("iterator"),a=Array.prototype;n.exports=function(n){return void 0!==n&&(o.Array===n||a[i]===n)}},function(n,e,t){var r=t(8),o=t(10),i=t(50);n.exports=function(n,e,t){var a,s;o(n);try{if(!(a=i(n,"return"))){if("throw"===e)throw t;return t}a=r(a,n)}catch(n){s=!0,a=n}if("throw"===e)throw t;if(s)throw a;return o(a),t}},function(n,e,t){var r=t(60),o=t(184),i=t(79).CONSTRUCTOR;n.exports=i||!o((function(n){r.all(n).then(void 0,(function(){}))}))},function(n,e,t){var r=t(6)("iterator"),o=!1;try{var i=0,a={next:function(){return{done:!!i++}},return:function(){o=!0}};a[r]=function(){return this},Array.from(a,(function(){throw 2}))}catch(n){}n.exports=function(n,e){if(!e&&!o)return!1;var t=!1;try{var i={};i[r]=function(){return{next:function(){return{done:t=!0}}}},n(i)}catch(n){}return t}},function(n,e,t){var r=t(10),o=t(11),i=t(80);n.exports=function(n,e){if(r(n),o(e)&&e.constructor===n)return e;var t=i.f(n);return(0,t.resolve)(e),t.promise}},function(n,e,t){var r=t(30),o=t(19),i=t(69).f,a=t(133),s="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];n.exports.f=function(n){return s&&"Window"==r(n)?function(n){try{return i(n)}catch(n){return a(s)}}(n):i(o(n))}},function(n,e,t){var r=t(6);e.f=r},function(n,e,t){var r=t(56);n.exports=r&&!!Symbol.for&&!!Symbol.keyFor},function(n,e,t){var r=t(2),o=t(48),i=t(13),a=t(18),s=r("".charAt),c=r("".charCodeAt),l=r("".slice),p=function(n){return function(e,t){var r,p,u=i(a(e)),d=o(t),f=u.length;return d<0||d>=f?n?"":void 0:(r=c(u,d))<55296||r>56319||d+1===f||(p=c(u,d+1))<56320||p>57343?n?s(u,d):r:n?l(u,d,d+2):p-56320+(r-55296<<10)+65536}};n.exports={codeAt:p(!1),charAt:p(!0)}},function(n,e){n.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},function(n,e,t){var r=t(93)("span").classList,o=r&&r.constructor&&r.constructor.prototype;n.exports=o===Object.prototype?void 0:o},function(n,e,t){var r=t(13);n.exports=function(n,e){return void 0===n?arguments.length<2?"":e:r(n)}},function(n,e,t){"use strict";var r=t(67).forEach,o=t(49)("forEach");n.exports=o?[].forEach:function(n){return r(this,n,arguments.length>1?arguments[1]:void 0)}},function(n,e,t){var r=t(0),o=t(7),i=t(128),a=t(19),s=t(38),c=t(62);r({target:"Object",stat:!0,sham:!o},{getOwnPropertyDescriptors:function(n){for(var e,t,r=a(n),o=s.f,l=i(r),p={},u=0;l.length>u;)void 0!==(t=o(r,e=l[u++]))&&c(p,e,t);return p}})},function(n,e,t){"use strict";var r,o=t(0),i=t(2),a=t(38).f,s=t(59),c=t(13),l=t(196),p=t(18),u=t(197),d=t(17),f=i("".startsWith),g=i("".slice),m=Math.min,h=u("startsWith");o({target:"String",proto:!0,forced:!!(d||h||(r=a(String.prototype,"startsWith"),!r||r.writable))&&!h},{startsWith:function(n){var e=c(p(this));l(n);var t=s(m(arguments.length>1?arguments[1]:void 0,e.length)),r=c(n);return f?f(e,r,t):g(e,t,t+r.length)===r}})},function(n,e,t){var r=t(160),o=TypeError;n.exports=function(n){if(r(n))throw o("The method doesn't accept regular expressions");return n}},function(n,e,t){var r=t(6)("match");n.exports=function(n){var e=/./;try{"/./"[n](e)}catch(t){try{return e[r]=!1,"/./"[n](e)}catch(n){}}return!1}},function(n,e,t){var r=t(1);n.exports=!r((function(){return Object.isExtensible(Object.preventExtensions({}))}))},function(n,e,t){var r=t(0),o=t(295);r({target:"Array",stat:!0,forced:!t(184)((function(n){Array.from(n)}))},{from:o})},function(n,e,t){"use strict";var r=t(10);n.exports=function(){var n=r(this),e="";return n.hasIndices&&(e+="d"),n.global&&(e+="g"),n.ignoreCase&&(e+="i"),n.multiline&&(e+="m"),n.dotAll&&(e+="s"),n.unicode&&(e+="u"),n.sticky&&(e+="y"),e}},function(n,e){n.exports=function(n,e){for(var t=-1,r=e.length,o=n.length;++t<r;)n[o+t]=e[t];return n}},function(n,e){var t="object"==typeof global&&global&&global.Object===Object&&global;n.exports=t},function(n,e,t){var r=t(106),o=t(311),i=t(312),a=t(313),s=t(314),c=t(315);function l(n){var e=this.__data__=new r(n);this.size=e.size}l.prototype.clear=o,l.prototype.delete=i,l.prototype.get=a,l.prototype.has=s,l.prototype.set=c,n.exports=l},function(n,e){n.exports=function(n,e){return n===e||n!=n&&e!=e}},function(n,e,t){var r=t(71),o=t(141);n.exports=function(n){if(!o(n))return!1;var e=r(n);return"[object Function]"==e||"[object GeneratorFunction]"==e||"[object AsyncFunction]"==e||"[object Proxy]"==e}},function(n,e){var t=Function.prototype.toString;n.exports=function(n){if(null!=n){try{return t.call(n)}catch(n){}try{return n+""}catch(n){}}return""}},function(n,e,t){var r=t(332),o=t(53);n.exports=function n(e,t,i,a,s){return e===t||(null==e||null==t||!o(e)&&!o(t)?e!=e&&t!=t:r(e,t,i,a,n,s))}},function(n,e,t){var r=t(209),o=t(335),i=t(210);n.exports=function(n,e,t,a,s,c){var l=1&t,p=n.length,u=e.length;if(p!=u&&!(l&&u>p))return!1;var d=c.get(n),f=c.get(e);if(d&&f)return d==e&&f==n;var g=-1,m=!0,h=2&t?new r:void 0;for(c.set(n,e),c.set(e,n);++g<p;){var v=n[g],b=e[g];if(a)var y=l?a(b,v,g,e,n,c):a(v,b,g,n,e,c);if(void 0!==y){if(y)continue;m=!1;break}if(h){if(!o(e,(function(n,e){if(!i(h,e)&&(v===n||s(v,n,t,a,c)))return h.push(e)}))){m=!1;break}}else if(v!==b&&!s(v,b,t,a,c)){m=!1;break}}return c.delete(n),c.delete(e),m}},function(n,e,t){var r=t(142),o=t(333),i=t(334);function a(n){var e=-1,t=null==n?0:n.length;for(this.__data__=new r;++e<t;)this.add(n[e])}a.prototype.add=a.prototype.push=o,a.prototype.has=i,n.exports=a},function(n,e){n.exports=function(n,e){return n.has(e)}},function(n,e,t){var r=t(345),o=t(351),i=t(215);n.exports=function(n){return i(n)?r(n):o(n)}},function(n,e,t){(function(n){var r=t(33),o=t(347),i=e&&!e.nodeType&&e,a=i&&"object"==typeof n&&n&&!n.nodeType&&n,s=a&&a.exports===i?r.Buffer:void 0,c=(s?s.isBuffer:void 0)||o;n.exports=c}).call(this,t(162)(n))},function(n,e){var t=/^(?:0|[1-9]\d*)$/;n.exports=function(n,e){var r=typeof n;return!!(e=null==e?9007199254740991:e)&&("number"==r||"symbol"!=r&&t.test(n))&&n>-1&&n%1==0&&n<e}},function(n,e,t){var r=t(348),o=t(349),i=t(350),a=i&&i.isTypedArray,s=a?o(a):r;n.exports=s},function(n,e,t){var r=t(205),o=t(144);n.exports=function(n){return null!=n&&o(n.length)&&!r(n)}},function(n,e,t){var r=t(43)(t(33),"Set");n.exports=r},function(n,e,t){var r=t(141);n.exports=function(n){return n==n&&!r(n)}},function(n,e){n.exports=function(n,e){return function(t){return null!=t&&(t[n]===e&&(void 0!==e||n in Object(t)))}}},function(n,e,t){var r=t(220),o=t(110);n.exports=function(n,e){for(var t=0,i=(e=r(e,n)).length;null!=n&&t<i;)n=n[o(e[t++])];return t&&t==i?n:void 0}},function(n,e,t){var r=t(31),o=t(145),i=t(362),a=t(365);n.exports=function(n,e){return r(n)?n:o(n,e)?[n]:i(a(n))}},function(n,e,t){var r=t(3),o=t(42),i=t(4),a=t(32),s=t(78),c=t(157),l=/MSIE .\./.test(a),p=r.Function,u=function(n){return l?function(e,t){var r=c(arguments.length,1)>2,a=i(e)?e:p(e),l=r?s(arguments,2):void 0;return n(r?function(){o(a,this,l)}:a,t)}:n};n.exports={setTimeout:u(r.setTimeout),setInterval:u(r.setInterval)}},function(n,e,t){"use strict";var r=t(2),o=t(28),i=t(11),a=t(9),s=t(78),c=t(72),l=Function,p=r([].concat),u=r([].join),d={},f=function(n,e,t){if(!a(d,e)){for(var r=[],o=0;o<e;o++)r[o]="a["+o+"]";d[e]=l("C,a","return new C("+u(r,",")+")")}return d[e](n,t)};n.exports=c?l.bind:function(n){var e=o(this),t=e.prototype,r=s(arguments,1),a=function(){var t=p(r,s(arguments));return this instanceof a?f(e,t.length,t):e.apply(n,t)};return i(t)&&(a.prototype=t),a}},function(n,e,t){"use strict";var r=t(0),o=t(398).start;r({target:"String",proto:!0,forced:t(400)},{padStart:function(n){return o(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){},function(n,e,t){},function(n,e,t){"use strict";var r=t(58),o=TypeError;n.exports=function(n,e){if(!delete n[e])throw o("Cannot delete property "+r(e)+" of "+r(n))}},function(n,e,t){var r=t(0),o=t(14),i=t(42),a=t(222),s=t(177),c=t(10),l=t(11),p=t(34),u=t(1),d=o("Reflect","construct"),f=Object.prototype,g=[].push,m=u((function(){function n(){}return!(d((function(){}),[],n)instanceof n)})),h=!u((function(){d((function(){}))})),v=m||h;r({target:"Reflect",stat:!0,forced:v,sham:v},{construct:function(n,e){s(n),c(e);var t=arguments.length<3?n:s(arguments[2]);if(h&&!m)return d(n,e,t);if(n==t){switch(e.length){case 0:return new n;case 1:return new n(e[0]);case 2:return new n(e[0],e[1]);case 3:return new n(e[0],e[1],e[2]);case 4:return new n(e[0],e[1],e[2],e[3])}var r=[null];return i(g,r,e),new(i(a,n,r))}var o=t.prototype,u=p(l(o)?o:f),v=i(n,u,e);return l(v)?v:u}})},function(n,e,t){},function(n,e,t){},function(n,e,t){var r=t(298),o=t(303),i=t(374),a=t(382),s=t(391),c=t(244),l=i((function(n){var e=c(n);return s(e)&&(e=void 0),a(r(n,1,s,!0),o(e,2))}));n.exports=l},function(n,e,t){"use strict";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */var r=/["'&<>]/;n.exports=function(n){var e,t=""+n,o=r.exec(t);if(!o)return t;var i="",a=0,s=0;for(a=o.index;a<t.length;a++){switch(t.charCodeAt(a)){case 34:e="&quot;";break;case 38:e="&amp;";break;case 39:e="&#39;";break;case 60:e="&lt;";break;case 62:e="&gt;";break;default:continue}s!==a&&(i+=t.substring(s,a)),s=a+1,i+=e}return s!==a?i+t.substring(s,a):i}},function(n,e,t){"use strict";
/**
 * @file Embedded JavaScript templating engine. {@link http://ejs.co}
 * @author Matthew Eernisse <mde@fleegix.org>
 * @author Tiancheng "Timothy" Gu <timothygu99@gmail.com>
 * @project EJS
 * @license {@link http://www.apache.org/licenses/LICENSE-2.0 Apache License, Version 2.0}
 */var r=t(413),o=t(414),i=t(415),a=!1,s=t(416).version,c=["delimiter","scope","context","debug","compileDebug","client","_with","rmWhitespace","strict","filename","async"],l=c.concat("cache"),p=/^\uFEFF/;function u(n,t){var o,i,a=t.views,s=/^[A-Za-z]+:\\|^\//.exec(n);if(s&&s.length)o=e.resolveInclude(n.replace(/^\/*/,""),t.root||"/",!0);else if(t.filename&&(i=e.resolveInclude(n,t.filename),r.existsSync(i)&&(o=i)),o||Array.isArray(a)&&a.some((function(t){return i=e.resolveInclude(n,t,!0),r.existsSync(i)}))&&(o=i),!o)throw new Error('Could not find the include file "'+t.escapeFunction(n)+'"');return o}function d(n,t){var r,o=n.filename,i=arguments.length>1;if(n.cache){if(!o)throw new Error("cache option requires a filename");if(r=e.cache.get(o))return r;i||(t=g(o).toString().replace(p,""))}else if(!i){if(!o)throw new Error("Internal EJS error: no file name or template provided");t=g(o).toString().replace(p,"")}return r=e.compile(t,n),n.cache&&e.cache.set(o,r),r}function f(n,t,r){var o;if(!r){if("function"==typeof e.promiseImpl)return new e.promiseImpl((function(e,r){try{e(o=d(n)(t))}catch(n){r(n)}}));throw new Error("Please provide a callback function")}try{o=d(n)(t)}catch(n){return r(n)}r(null,o)}function g(n){return e.fileLoader(n)}function m(n,e,t,r,o){var i=e.split("\n"),a=Math.max(r-3,0),s=Math.min(i.length,r+3),c=o(t),l=i.slice(a,s).map((function(n,e){var t=e+a+1;return(t==r?" >> ":"    ")+t+"| "+n})).join("\n");throw n.path=c,n.message=(c||"ejs")+":"+r+"\n"+l+"\n\n"+n.message,n}function h(n){return n.replace(/;(\s*$)/,"$1")}function v(n,t){t=t||{};var r={};this.templateText=n,this.mode=null,this.truncate=!1,this.currentLine=1,this.source="",this.dependencies=[],r.client=t.client||!1,r.escapeFunction=t.escape||t.escapeFunction||i.escapeXML,r.compileDebug=!1!==t.compileDebug,r.debug=!!t.debug,r.filename=t.filename,r.openDelimiter=t.openDelimiter||e.openDelimiter||"<",r.closeDelimiter=t.closeDelimiter||e.closeDelimiter||">",r.delimiter=t.delimiter||e.delimiter||"%",r.strict=t.strict||!1,r.context=t.context,r.cache=t.cache||!1,r.rmWhitespace=t.rmWhitespace,r.root=t.root,r.outputFunctionName=t.outputFunctionName,r.localsName=t.localsName||e.localsName||"locals",r.views=t.views,r.async=t.async,r.destructuredLocals=t.destructuredLocals,r.legacyInclude=void 0===t.legacyInclude||!!t.legacyInclude,r.strict?r._with=!1:r._with=void 0===t._with||t._with,this.opts=r,this.regex=this.createRegex()}e.cache=i.cache,e.fileLoader=r.readFileSync,e.localsName="locals",e.promiseImpl=new Function("return this;")().Promise,e.resolveInclude=function(n,e,t){var r=o.dirname,i=o.extname,a=(0,o.resolve)(t?e:r(e),n);return i(n)||(a+=".ejs"),a},e.compile=function(n,e){return e&&e.scope&&(a||(console.warn("`scope` option is deprecated and will be removed in EJS 3"),a=!0),e.context||(e.context=e.scope),delete e.scope),new v(n,e).compile()},e.render=function(n,e,t){var r=e||{},o=t||{};return 2==arguments.length&&i.shallowCopyFromList(o,r,c),d(o,n)(r)},e.renderFile=function(){var n,e,t,r=Array.prototype.slice.call(arguments),o=r.shift(),a={filename:o};return"function"==typeof arguments[arguments.length-1]&&(n=r.pop()),r.length?(e=r.shift(),r.length?i.shallowCopy(a,r.pop()):(e.settings&&(e.settings.views&&(a.views=e.settings.views),e.settings["view cache"]&&(a.cache=!0),(t=e.settings["view options"])&&i.shallowCopy(a,t)),i.shallowCopyFromList(a,e,l)),a.filename=o):e={},f(a,e,n)},e.Template=v,e.clearCache=function(){e.cache.reset()},v.modes={EVAL:"eval",ESCAPED:"escaped",RAW:"raw",COMMENT:"comment",LITERAL:"literal"},v.prototype={createRegex:function(){var n="(<%%|%%>|<%=|<%-|<%_|<%#|<%|%>|-%>|_%>)",e=i.escapeRegExpChars(this.opts.delimiter),t=i.escapeRegExpChars(this.opts.openDelimiter),r=i.escapeRegExpChars(this.opts.closeDelimiter);return n=n.replace(/%/g,e).replace(/</g,t).replace(/>/g,r),new RegExp(n)},compile:function(){var n,e,t,r=this.opts,a="",s="",c=r.escapeFunction;if(!this.source){if(this.generateSource(),a+='  var __output = "";\n  function __append(s) { if (s !== undefined && s !== null) __output += s }\n',r.outputFunctionName&&(a+="  var "+r.outputFunctionName+" = __append;\n"),r.destructuredLocals&&r.destructuredLocals.length){for(var l="  var __locals = ("+r.localsName+" || {}),\n",p=0;p<r.destructuredLocals.length;p++){var f=r.destructuredLocals[p];p>0&&(l+=",\n  "),l+=f+" = __locals."+f}a+=l+";\n"}!1!==r._with&&(a+="  with ("+r.localsName+" || {}) {\n",s+="  }\n"),s+="  return __output;\n",this.source=a+this.source+s}n=r.compileDebug?"var __line = 1\n  , __lines = "+JSON.stringify(this.templateText)+"\n  , __filename = "+(r.filename?JSON.stringify(r.filename):"undefined")+";\ntry {\n"+this.source+"} catch (e) {\n  rethrow(e, __lines, __filename, __line, escapeFn);\n}\n":this.source,r.client&&(n="escapeFn = escapeFn || "+c.toString()+";\n"+n,r.compileDebug&&(n="rethrow = rethrow || "+m.toString()+";\n"+n)),r.strict&&(n='"use strict";\n'+n),r.debug&&console.log(n),r.compileDebug&&r.filename&&(n=n+"\n//# sourceURL="+r.filename+"\n");try{if(r.async)try{t=new Function("return (async function(){}).constructor;")()}catch(n){throw n instanceof SyntaxError?new Error("This environment does not support async/await"):n}else t=Function;e=new t(r.localsName+", escapeFn, include, rethrow",n)}catch(n){throw n instanceof SyntaxError&&(r.filename&&(n.message+=" in "+r.filename),n.message+=" while compiling ejs\n\n",n.message+="If the above error is not helpful, you may want to try EJS-Lint:\n",n.message+="https://github.com/RyanZim/EJS-Lint",r.async||(n.message+="\n",n.message+="Or, if you meant to create an async function, pass `async: true` as an option.")),n}var g=r.client?e:function(n){return e.apply(r.context,[n||{},c,function(e,t){var o=i.shallowCopy({},n);return t&&(o=i.shallowCopy(o,t)),function(n,e){var t=i.shallowCopy({},e);return t.filename=u(n,t),d(t)}(e,r)(o)},m])};if(g.dependencies=this.dependencies,r.filename&&"function"==typeof Object.defineProperty){var h=r.filename,v=o.basename(h,o.extname(h));try{Object.defineProperty(g,"name",{value:v,writable:!1,enumerable:!1,configurable:!0})}catch(n){}}return g},generateSource:function(){var n=this.opts;n.rmWhitespace&&(this.templateText=this.templateText.replace(/[\r\n]+/g,"\n").replace(/^\s+|\s+$/gm,"")),this.templateText=this.templateText.replace(/[ \t]*<%_/gm,"<%_").replace(/_%>[ \t]*/gm,"_%>");var t=this,r=this.parseTemplateText(),o=this.opts.delimiter,a=this.opts.openDelimiter,s=this.opts.closeDelimiter;r&&r.length&&r.forEach((function(c,l){var d,f,m,h,b,y;if(0===c.indexOf(a+o)&&0!==c.indexOf(a+o+o)&&(f=r[l+2])!=o+s&&f!="-"+o+s&&f!="_"+o+s)throw new Error('Could not find matching close tag for "'+c+'".');if(n.legacyInclude&&(m=c.match(/^\s*include\s+(\S+)/))&&(d=r[l-1])&&(d==a+o||d==a+o+"-"||d==a+o+"_"))return h=i.shallowCopy({},t.opts),b=function(n,e){var t,r,o=i.shallowCopy({},e);r=g(t=u(n,o)).toString().replace(p,""),o.filename=t;var a=new v(r,o);return a.generateSource(),{source:a.source,filename:t,template:r}}(m[1],h),y=t.opts.compileDebug?"    ; (function(){\n      var __line = 1\n      , __lines = "+JSON.stringify(b.template)+"\n      , __filename = "+JSON.stringify(b.filename)+";\n      try {\n"+b.source+"      } catch (e) {\n        rethrow(e, __lines, __filename, __line, escapeFn);\n      }\n    ; }).call(this)\n":"    ; (function(){\n"+b.source+"    ; }).call(this)\n",t.source+=y,void t.dependencies.push(e.resolveInclude(m[1],h.filename));t.scanLine(c)}))},parseTemplateText:function(){for(var n,e=this.templateText,t=this.regex,r=t.exec(e),o=[];r;)0!==(n=r.index)&&(o.push(e.substring(0,n)),e=e.slice(n)),o.push(r[0]),e=e.slice(r[0].length),r=t.exec(e);return e&&o.push(e),o},_addOutput:function(n){if(this.truncate&&(n=n.replace(/^(?:\r\n|\r|\n)/,""),this.truncate=!1),!n)return n;n=(n=(n=(n=n.replace(/\\/g,"\\\\")).replace(/\n/g,"\\n")).replace(/\r/g,"\\r")).replace(/"/g,'\\"'),this.source+='    ; __append("'+n+'")\n'},scanLine:function(n){var e,t=this.opts.delimiter,r=this.opts.openDelimiter,o=this.opts.closeDelimiter;switch(e=n.split("\n").length-1,n){case r+t:case r+t+"_":this.mode=v.modes.EVAL;break;case r+t+"=":this.mode=v.modes.ESCAPED;break;case r+t+"-":this.mode=v.modes.RAW;break;case r+t+"#":this.mode=v.modes.COMMENT;break;case r+t+t:this.mode=v.modes.LITERAL,this.source+='    ; __append("'+n.replace(r+t+t,r+t)+'")\n';break;case t+t+o:this.mode=v.modes.LITERAL,this.source+='    ; __append("'+n.replace(t+t+o,t+o)+'")\n';break;case t+o:case"-"+t+o:case"_"+t+o:this.mode==v.modes.LITERAL&&this._addOutput(n),this.mode=null,this.truncate=0===n.indexOf("-")||0===n.indexOf("_");break;default:if(this.mode){switch(this.mode){case v.modes.EVAL:case v.modes.ESCAPED:case v.modes.RAW:n.lastIndexOf("//")>n.lastIndexOf("\n")&&(n+="\n")}switch(this.mode){case v.modes.EVAL:this.source+="    ; "+n+"\n";break;case v.modes.ESCAPED:this.source+="    ; __append(escapeFn("+h(n)+"))\n";break;case v.modes.RAW:this.source+="    ; __append("+h(n)+")\n";break;case v.modes.COMMENT:break;case v.modes.LITERAL:this._addOutput(n)}}else this._addOutput(n)}this.opts.compileDebug&&e&&(this.currentLine+=e,this.source+="    ; __line = "+this.currentLine+"\n")}},e.escapeXML=i.escapeXML,e.__express=e.renderFile,e.VERSION=s,e.name="ejs","undefined"!=typeof window&&(window.ejs=e)},function(n,e,t){"use strict";t.r(e);var r={name:"CodeBlock",props:{title:{type:String,required:!0},active:{type:Boolean,default:!1}}},o=(t(401),t(23)),i=Object(o.a)(r,(function(){var n=this.$createElement;return(this._self._c||n)("div",{staticClass:"theme-code-block",class:{"theme-code-block__active":this.active}},[this._t("default")],2)}),[],!1,null,"4f1e9d0c",null);e.default=i.exports},function(n,e,t){"use strict";t.r(e);t(21),t(5),t(22),t(46),t(29);var r={name:"CodeGroup",data:function(){return{codeTabs:[],activeCodeTabIndex:-1}},watch:{activeCodeTabIndex:function(n){this.codeTabs.forEach((function(n){n.elm.classList.remove("theme-code-block__active")})),this.codeTabs[n].elm.classList.add("theme-code-block__active")}},mounted:function(){var n=this;this.codeTabs=(this.$slots.default||[]).filter((function(n){return Boolean(n.componentOptions)})).map((function(e,t){return""===e.componentOptions.propsData.active&&(n.activeCodeTabIndex=t),{title:e.componentOptions.propsData.title,elm:e.elm}})),-1===this.activeCodeTabIndex&&this.codeTabs.length>0&&(this.activeCodeTabIndex=0)},methods:{changeCodeTab:function(n){this.activeCodeTabIndex=n}}},o=(t(402),t(23)),i=Object(o.a)(r,(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"theme-code-group"},[t("div",{staticClass:"theme-code-group__nav"},[t("ul",{staticClass:"theme-code-group__ul"},n._l(n.codeTabs,(function(e,r){return t("li",{key:e.title,staticClass:"theme-code-group__li"},[t("button",{staticClass:"theme-code-group__nav-tab",class:{"theme-code-group__nav-tab-active":r===n.activeCodeTabIndex},on:{click:function(e){return n.changeCodeTab(r)}}},[n._v("\n            "+n._s(e.title)+"\n          ")])])})),0)]),n._v(" "),n._t("default"),n._v(" "),n.codeTabs.length<1?t("pre",{staticClass:"pre-blank"},[n._v("// Make sure to add code blocks to your code group")]):n._e()],2)}),[],!1,null,"2f5f1757",null);e.default=i.exports},function(n,e,t){"use strict";var r=t(7),o=t(3),i=t(2),a=t(114),s=t(15),c=t(9),l=t(159),p=t(35),u=t(73),d=t(170),f=t(1),g=t(69).f,m=t(38).f,h=t(12).f,v=t(397),b=t(164).trim,y=o.Number,x=y.prototype,S=o.TypeError,_=i("".slice),w=i("".charCodeAt),j=function(n){var e=d(n,"number");return"bigint"==typeof e?e:C(e)},C=function(n){var e,t,r,o,i,a,s,c,l=d(n,"number");if(u(l))throw S("Cannot convert a Symbol value to a number");if("string"==typeof l&&l.length>2)if(l=b(l),43===(e=w(l,0))||45===e){if(88===(t=w(l,2))||120===t)return NaN}else if(48===e){switch(w(l,1)){case 66:case 98:r=2,o=49;break;case 79:case 111:r=8,o=55;break;default:return+l}for(a=(i=_(l,2)).length,s=0;s<a;s++)if((c=w(i,s))<48||c>o)return NaN;return parseInt(i,r)}return+l};if(a("Number",!y(" 0o1")||!y("0b1")||y("+0x1"))){for(var k,E=function(n){var e=arguments.length<1?0:y(j(n)),t=this;return p(x,t)&&f((function(){v(t)}))?l(Object(e),t,E):e},B=r?g(y):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,fromString,range".split(","),A=0;B.length>A;A++)c(y,k=B[A])&&!c(E,k)&&h(E,k,m(y,k));E.prototype=x,x.constructor=E,s(o,"Number",E,{constructor:!0})}},function(n,e,t){var r=t(1),o=t(3).RegExp;n.exports=r((function(){var n=o(".","s");return!(n.dotAll&&n.exec("\n")&&"s"===n.flags)}))},function(n,e,t){"use strict";var r=t(175).IteratorPrototype,o=t(34),i=t(51),a=t(37),s=t(75),c=function(){return this};n.exports=function(n,e,t,l){var p=e+" Iterator";return n.prototype=o(r,{next:i(+!l,t)}),a(n,p,!1,!0),s[p]=c,n}},function(n,e,t){"use strict";var r=t(14),o=t(12),i=t(6),a=t(7),s=i("species");n.exports=function(n){var e=r(n),t=o.f;a&&e&&!e[s]&&t(e,s,{configurable:!0,get:function(){return this}})}},function(n,e,t){var r=t(35),o=TypeError;n.exports=function(n,e){if(r(e,n))return n;throw o("Incorrect invocation")}},function(n,e,t){var r=t(12).f;n.exports=function(n,e,t){t in n||r(n,t,{configurable:!0,get:function(){return e[t]},set:function(n){e[t]=n}})}},function(n,e,t){var r=t(1),o=t(3).RegExp;n.exports=r((function(){var n=o("(?<a>b)","g");return"b"!==n.exec("b").groups.a||"bc"!=="b".replace(n,"$<a>c")}))},function(n,e,t){"use strict";var r=t(0),o=t(124).includes,i=t(1),a=t(153);r({target:"Array",proto:!0,forced:i((function(){return!Array(1).includes()}))},{includes:function(n){return o(this,n,arguments.length>1?arguments[1]:void 0)}}),a("includes")},function(n,e,t){"use strict";var r=t(0),o=t(2),i=t(196),a=t(18),s=t(13),c=t(197),l=o("".indexOf);r({target:"String",proto:!0,forced:!c("includes")},{includes:function(n){return!!~l(s(a(this)),s(i(n)),arguments.length>1?arguments[1]:void 0)}})},function(n,e){n.exports=function(n){var e=null==n?0:n.length;return e?n[e-1]:void 0}},function(n,e,t){"use strict";var r=t(0),o=t(164).trim;r({target:"String",proto:!0,forced:t(396)("trim")},{trim:function(){return o(this)}})},function(n,e,t){var r=t(8),o=t(9),i=t(35),a=t(200),s=RegExp.prototype;n.exports=function(n){var e=n.flags;return void 0!==e||"flags"in s||o(n,"flags")||!i(s,n)?e:r(a,n)}},function(n,e,t){var r=t(133),o=Math.floor,i=function(n,e){var t=n.length,c=o(t/2);return t<8?a(n,e):s(n,i(r(n,0,c),e),i(r(n,c),e),e)},a=function(n,e){for(var t,r,o=n.length,i=1;i<o;){for(r=i,t=n[i];r&&e(n[r-1],t)>0;)n[r]=n[--r];r!==i++&&(n[r]=t)}return n},s=function(n,e,t,r){for(var o=e.length,i=t.length,a=0,s=0;a<o||s<i;)n[a+s]=a<o&&s<i?r(e[a],t[s])<=0?e[a++]:t[s++]:a<o?e[a++]:t[s++];return n};n.exports=i},function(n,e,t){var r=t(7),o=t(117).MISSED_STICKY,i=t(30),a=t(249),s=t(41).get,c=RegExp.prototype,l=TypeError;r&&o&&a(c,"sticky",{configurable:!0,get:function(){if(this!==c){if("RegExp"===i(this))return!!s(this).sticky;throw l("Incompatible receiver, RegExp required")}}})},function(n,e,t){var r=t(174),o=t(12);n.exports=function(n,e,t){return t.get&&r(t.get,e,{getter:!0}),t.set&&r(t.set,e,{setter:!0}),o.f(n,e,t)}},function(n,e,t){n.exports=t(419)},function(n,e,t){var r=t(8),o=t(4),i=t(11),a=TypeError;n.exports=function(n,e){var t,s;if("string"===e&&o(t=n.toString)&&!i(s=r(t,n)))return s;if(o(t=n.valueOf)&&!i(s=r(t,n)))return s;if("string"!==e&&o(t=n.toString)&&!i(s=r(t,n)))return s;throw a("Can't convert object to primitive value")}},function(n,e){var t=Math.ceil,r=Math.floor;n.exports=Math.trunc||function(n){var e=+n;return(e>0?r:t)(e)}},function(n,e,t){var r=t(3),o=t(4),i=t(98),a=r.WeakMap;n.exports=o(a)&&/native code/.test(i(a))},function(n,e,t){var r=t(4),o=String,i=TypeError;n.exports=function(n){if("object"==typeof n||r(n))return n;throw i("Can't set "+o(n)+" as a prototype")}},function(n,e,t){t(256),t(263),t(264),t(265),t(266),t(267)},function(n,e,t){"use strict";var r,o,i,a=t(0),s=t(17),c=t(100),l=t(3),p=t(8),u=t(15),d=t(77),f=t(37),g=t(238),m=t(28),h=t(4),v=t(11),b=t(239),y=t(130),x=t(178).set,S=t(257),_=t(260),w=t(132),j=t(261),C=t(41),k=t(60),E=t(79),B=t(80),A=E.CONSTRUCTOR,T=E.REJECTION_EVENT,I=E.SUBCLASSING,O=C.getterFor("Promise"),P=C.set,M=k&&k.prototype,L=k,z=M,R=l.TypeError,D=l.document,$=l.process,N=B.f,F=N,J=!!(D&&D.createEvent&&l.dispatchEvent),U=function(n){var e;return!(!v(n)||!h(e=n.then))&&e},q=function(n,e){var t,r,o,i=e.value,a=1==e.state,s=a?n.ok:n.fail,c=n.resolve,l=n.reject,u=n.domain;try{s?(a||(2===e.rejection&&X(e),e.rejection=1),!0===s?t=i:(u&&u.enter(),t=s(i),u&&(u.exit(),o=!0)),t===n.promise?l(R("Promise-chain cycle")):(r=U(t))?p(r,t,c,l):c(t)):l(i)}catch(n){u&&!o&&u.exit(),l(n)}},H=function(n,e){n.notified||(n.notified=!0,S((function(){for(var t,r=n.reactions;t=r.get();)q(t,n);n.notified=!1,e&&!n.rejection&&V(n)})))},W=function(n,e,t){var r,o;J?((r=D.createEvent("Event")).promise=e,r.reason=t,r.initEvent(n,!1,!0),l.dispatchEvent(r)):r={promise:e,reason:t},!T&&(o=l["on"+n])?o(r):"unhandledrejection"===n&&_("Unhandled promise rejection",t)},V=function(n){p(x,l,(function(){var e,t=n.facade,r=n.value;if(G(n)&&(e=w((function(){c?$.emit("unhandledRejection",r,t):W("unhandledrejection",t,r)})),n.rejection=c||G(n)?2:1,e.error))throw e.value}))},G=function(n){return 1!==n.rejection&&!n.parent},X=function(n){p(x,l,(function(){var e=n.facade;c?$.emit("rejectionHandled",e):W("rejectionhandled",e,n.value)}))},Y=function(n,e,t){return function(r){n(e,r,t)}},K=function(n,e,t){n.done||(n.done=!0,t&&(n=t),n.value=e,n.state=2,H(n,!0))},Z=function(n,e,t){if(!n.done){n.done=!0,t&&(n=t);try{if(n.facade===e)throw R("Promise can't be resolved itself");var r=U(e);r?S((function(){var t={done:!1};try{p(r,e,Y(Z,t,n),Y(K,t,n))}catch(e){K(t,e,n)}})):(n.value=e,n.state=1,H(n,!1))}catch(e){K({done:!1},e,n)}}};if(A&&(z=(L=function(n){b(this,z),m(n),p(r,this);var e=O(this);try{n(Y(Z,e),Y(K,e))}catch(n){K(e,n)}}).prototype,(r=function(n){P(this,{type:"Promise",done:!1,notified:!1,parent:!1,reactions:new j,rejection:!1,state:0,value:void 0})}).prototype=u(z,"then",(function(n,e){var t=O(this),r=N(y(this,L));return t.parent=!0,r.ok=!h(n)||n,r.fail=h(e)&&e,r.domain=c?$.domain:void 0,0==t.state?t.reactions.add(r):S((function(){q(r,t)})),r.promise})),o=function(){var n=new r,e=O(n);this.promise=n,this.resolve=Y(Z,e),this.reject=Y(K,e)},B.f=N=function(n){return n===L||void 0===n?new o(n):F(n)},!s&&h(k)&&M!==Object.prototype)){i=M.then,I||u(M,"then",(function(n,e){var t=this;return new L((function(n,e){p(i,t,n,e)})).then(n,e)}),{unsafe:!0});try{delete M.constructor}catch(n){}d&&d(M,z)}a({global:!0,constructor:!0,wrap:!0,forced:A},{Promise:L}),f(L,"Promise",!1,!0),g("Promise")},function(n,e,t){var r,o,i,a,s,c,l,p,u=t(3),d=t(66),f=t(38).f,g=t(178).set,m=t(179),h=t(258),v=t(259),b=t(100),y=u.MutationObserver||u.WebKitMutationObserver,x=u.document,S=u.process,_=u.Promise,w=f(u,"queueMicrotask"),j=w&&w.value;j||(r=function(){var n,e;for(b&&(n=S.domain)&&n.exit();o;){e=o.fn,o=o.next;try{e()}catch(n){throw o?a():i=void 0,n}}i=void 0,n&&n.enter()},m||b||v||!y||!x?!h&&_&&_.resolve?((l=_.resolve(void 0)).constructor=_,p=d(l.then,l),a=function(){p(r)}):b?a=function(){S.nextTick(r)}:(g=d(g,u),a=function(){g(r)}):(s=!0,c=x.createTextNode(""),new y(r).observe(c,{characterData:!0}),a=function(){c.data=s=!s})),n.exports=j||function(n){var e={fn:n,next:void 0};i&&(i.next=e),o||(o=e,a()),i=e}},function(n,e,t){var r=t(32),o=t(3);n.exports=/ipad|iphone|ipod/i.test(r)&&void 0!==o.Pebble},function(n,e,t){var r=t(32);n.exports=/web0s(?!.*chrome)/i.test(r)},function(n,e,t){var r=t(3);n.exports=function(n,e){var t=r.console;t&&t.error&&(1==arguments.length?t.error(n):t.error(n,e))}},function(n,e){var t=function(){this.head=null,this.tail=null};t.prototype={add:function(n){var e={item:n,next:null};this.head?this.tail.next=e:this.head=e,this.tail=e},get:function(){var n=this.head;if(n)return this.head=n.next,this.tail===n&&(this.tail=null),n.item}},n.exports=t},function(n,e){n.exports="object"==typeof window&&"object"!=typeof Deno},function(n,e,t){"use strict";var r=t(0),o=t(8),i=t(28),a=t(80),s=t(132),c=t(180);r({target:"Promise",stat:!0,forced:t(183)},{all:function(n){var e=this,t=a.f(e),r=t.resolve,l=t.reject,p=s((function(){var t=i(e.resolve),a=[],s=0,p=1;c(n,(function(n){var i=s++,c=!1;p++,o(t,e,n).then((function(n){c||(c=!0,a[i]=n,--p||r(a))}),l)})),--p||r(a)}));return p.error&&l(p.value),t.promise}})},function(n,e,t){"use strict";var r=t(0),o=t(17),i=t(79).CONSTRUCTOR,a=t(60),s=t(14),c=t(4),l=t(15),p=a&&a.prototype;if(r({target:"Promise",proto:!0,forced:i,real:!0},{catch:function(n){return this.then(void 0,n)}}),!o&&c(a)){var u=s("Promise").prototype.catch;p.catch!==u&&l(p,"catch",u,{unsafe:!0})}},function(n,e,t){"use strict";var r=t(0),o=t(8),i=t(28),a=t(80),s=t(132),c=t(180);r({target:"Promise",stat:!0,forced:t(183)},{race:function(n){var e=this,t=a.f(e),r=t.reject,l=s((function(){var a=i(e.resolve);c(n,(function(n){o(a,e,n).then(t.resolve,r)}))}));return l.error&&r(l.value),t.promise}})},function(n,e,t){"use strict";var r=t(0),o=t(8),i=t(80);r({target:"Promise",stat:!0,forced:t(79).CONSTRUCTOR},{reject:function(n){var e=i.f(this);return o(e.reject,void 0,n),e.promise}})},function(n,e,t){"use strict";var r=t(0),o=t(14),i=t(17),a=t(60),s=t(79).CONSTRUCTOR,c=t(185),l=o("Promise"),p=i&&!s;r({target:"Promise",stat:!0,forced:i||s},{resolve:function(n){return c(p&&this===l?a:this,n)}})},function(n,e,t){var r=t(0),o=t(269);r({target:"Object",stat:!0,arity:2,forced:Object.assign!==o},{assign:o})},function(n,e,t){"use strict";var r=t(7),o=t(2),i=t(8),a=t(1),s=t(95),c=t(99),l=t(126),p=t(16),u=t(68),d=Object.assign,f=Object.defineProperty,g=o([].concat);n.exports=!d||a((function(){if(r&&1!==d({b:1},d(f({},"a",{enumerable:!0,get:function(){f(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var n={},e={},t=Symbol();return n[t]=7,"abcdefghijklmnopqrst".split("").forEach((function(n){e[n]=n})),7!=d({},n)[t]||"abcdefghijklmnopqrst"!=s(d({},e)).join("")}))?function(n,e){for(var t=p(n),o=arguments.length,a=1,d=c.f,f=l.f;o>a;)for(var m,h=u(arguments[a++]),v=d?g(s(h),d(h)):s(h),b=v.length,y=0;b>y;)m=v[y++],r&&!i(f,h,m)||(t[m]=h[m]);return t}:d},function(n,e,t){"use strict";var r=t(0),o=t(17),i=t(60),a=t(1),s=t(14),c=t(4),l=t(130),p=t(185),u=t(15),d=i&&i.prototype;if(r({target:"Promise",proto:!0,real:!0,forced:!!i&&a((function(){d.finally.call({then:function(){}},(function(){}))}))},{finally:function(n){var e=l(this,s("Promise")),t=c(n);return this.then(t?function(t){return p(e,n()).then((function(){return t}))}:n,t?function(t){return p(e,n()).then((function(){throw t}))}:n)}}),!o&&c(i)){var f=s("Promise").prototype.finally;d.finally!==f&&u(d,"finally",f,{unsafe:!0})}},function(n,e,t){"use strict";var r=t(0),o=t(3),i=t(8),a=t(2),s=t(17),c=t(7),l=t(56),p=t(1),u=t(9),d=t(35),f=t(10),g=t(19),m=t(94),h=t(13),v=t(51),b=t(34),y=t(95),x=t(69),S=t(186),_=t(99),w=t(38),j=t(12),C=t(123),k=t(126),E=t(15),B=t(55),A=t(97),T=t(74),I=t(92),O=t(6),P=t(187),M=t(102),L=t(273),z=t(37),R=t(41),D=t(67).forEach,$=A("hidden"),N=R.set,F=R.getterFor("Symbol"),J=Object.prototype,U=o.Symbol,q=U&&U.prototype,H=o.TypeError,W=o.QObject,V=w.f,G=j.f,X=S.f,Y=k.f,K=a([].push),Z=B("symbols"),Q=B("op-symbols"),nn=B("wks"),en=!W||!W.prototype||!W.prototype.findChild,tn=c&&p((function(){return 7!=b(G({},"a",{get:function(){return G(this,"a",{value:7}).a}})).a}))?function(n,e,t){var r=V(J,e);r&&delete J[e],G(n,e,t),r&&n!==J&&G(J,e,r)}:G,rn=function(n,e){var t=Z[n]=b(q);return N(t,{type:"Symbol",tag:n,description:e}),c||(t.description=e),t},on=function(n,e,t){n===J&&on(Q,e,t),f(n);var r=m(e);return f(t),u(Z,r)?(t.enumerable?(u(n,$)&&n[$][r]&&(n[$][r]=!1),t=b(t,{enumerable:v(0,!1)})):(u(n,$)||G(n,$,v(1,{})),n[$][r]=!0),tn(n,r,t)):G(n,r,t)},an=function(n,e){f(n);var t=g(e),r=y(t).concat(pn(t));return D(r,(function(e){c&&!i(sn,t,e)||on(n,e,t[e])})),n},sn=function(n){var e=m(n),t=i(Y,this,e);return!(this===J&&u(Z,e)&&!u(Q,e))&&(!(t||!u(this,e)||!u(Z,e)||u(this,$)&&this[$][e])||t)},cn=function(n,e){var t=g(n),r=m(e);if(t!==J||!u(Z,r)||u(Q,r)){var o=V(t,r);return!o||!u(Z,r)||u(t,$)&&t[$][r]||(o.enumerable=!0),o}},ln=function(n){var e=X(g(n)),t=[];return D(e,(function(n){u(Z,n)||u(T,n)||K(t,n)})),t},pn=function(n){var e=n===J,t=X(e?Q:g(n)),r=[];return D(t,(function(n){!u(Z,n)||e&&!u(J,n)||K(r,Z[n])})),r};l||(E(q=(U=function(){if(d(q,this))throw H("Symbol is not a constructor");var n=arguments.length&&void 0!==arguments[0]?h(arguments[0]):void 0,e=I(n),t=function(n){this===J&&i(t,Q,n),u(this,$)&&u(this[$],e)&&(this[$][e]=!1),tn(this,e,v(1,n))};return c&&en&&tn(J,e,{configurable:!0,set:t}),rn(e,n)}).prototype,"toString",(function(){return F(this).tag})),E(U,"withoutSetter",(function(n){return rn(I(n),n)})),k.f=sn,j.f=on,C.f=an,w.f=cn,x.f=S.f=ln,_.f=pn,P.f=function(n){return rn(O(n),n)},c&&(G(q,"description",{configurable:!0,get:function(){return F(this).description}}),s||E(J,"propertyIsEnumerable",sn,{unsafe:!0}))),r({global:!0,constructor:!0,wrap:!0,forced:!l,sham:!l},{Symbol:U}),D(y(nn),(function(n){M(n)})),r({target:"Symbol",stat:!0,forced:!l},{useSetter:function(){en=!0},useSimple:function(){en=!1}}),r({target:"Object",stat:!0,forced:!l,sham:!c},{create:function(n,e){return void 0===e?b(n):an(b(n),e)},defineProperty:on,defineProperties:an,getOwnPropertyDescriptor:cn}),r({target:"Object",stat:!0,forced:!l},{getOwnPropertyNames:ln}),L(),z(U,"Symbol"),T[$]=!0},function(n,e,t){var r=t(3);n.exports=r},function(n,e,t){var r=t(8),o=t(14),i=t(6),a=t(15);n.exports=function(){var n=o("Symbol"),e=n&&n.prototype,t=e&&e.valueOf,s=i("toPrimitive");e&&!e[s]&&a(e,s,(function(n){return r(t,this)}),{arity:1})}},function(n,e,t){var r=t(52),o=t(101),i=t(11),a=t(6)("species"),s=Array;n.exports=function(n){var e;return r(n)&&(e=n.constructor,(o(e)&&(e===s||r(e.prototype))||i(e)&&null===(e=e[a]))&&(e=void 0)),void 0===e?s:e}},function(n,e,t){var r=t(0),o=t(14),i=t(9),a=t(13),s=t(55),c=t(188),l=s("string-to-symbol-registry"),p=s("symbol-to-string-registry");r({target:"Symbol",stat:!0,forced:!c},{for:function(n){var e=a(n);if(i(l,e))return l[e];var t=o("Symbol")(e);return l[e]=t,p[t]=e,t}})},function(n,e,t){var r=t(0),o=t(9),i=t(73),a=t(58),s=t(55),c=t(188),l=s("symbol-to-string-registry");r({target:"Symbol",stat:!0,forced:!c},{keyFor:function(n){if(!i(n))throw TypeError(a(n)+" is not a symbol");if(o(l,n))return l[n]}})},function(n,e,t){var r=t(0),o=t(56),i=t(1),a=t(99),s=t(16);r({target:"Object",stat:!0,forced:!o||i((function(){a.f(1)}))},{getOwnPropertySymbols:function(n){var e=a.f;return e?e(s(n)):[]}})},function(n,e,t){"use strict";var r=t(131),o=t(90);n.exports=r?{}.toString:function(){return"[object "+o(this)+"]"}},function(n,e,t){t(102)("asyncIterator")},function(n,e,t){var r=t(14),o=t(102),i=t(37);o("toStringTag"),i(r("Symbol"),"Symbol")},function(n,e,t){var r=t(3);t(37)(r.JSON,"JSON",!0)},function(n,e,t){t(37)(Math,"Math",!0)},function(n,e,t){"use strict";var r=t(14),o=t(9),i=t(36),a=t(35),s=t(77),c=t(127),l=t(240),p=t(159),u=t(192),d=t(284),f=t(285),g=t(286),m=t(7),h=t(17);n.exports=function(n,e,t,v){var b=v?2:1,y=n.split("."),x=y[y.length-1],S=r.apply(null,y);if(S){var _=S.prototype;if(!h&&o(_,"cause")&&delete _.cause,!t)return S;var w=r("Error"),j=e((function(n,e){var t=u(v?e:n,void 0),r=v?new S(n):new S;return void 0!==t&&i(r,"message",t),g&&i(r,"stack",f(r.stack,2)),this&&a(_,this)&&p(r,this,j),arguments.length>b&&d(r,arguments[b]),r}));if(j.prototype=_,"Error"!==x?s?s(j,w):c(j,w,{name:!0}):m&&"stackTraceLimit"in S&&(l(j,S,"stackTraceLimit"),l(j,S,"prepareStackTrace")),c(j,S),!h)try{_.name!==x&&i(_,"name",x),_.constructor=j}catch(n){}return j}}},function(n,e,t){var r=t(11),o=t(36);n.exports=function(n,e){r(e)&&"cause"in e&&o(n,"cause",e.cause)}},function(n,e,t){var r=t(2),o=Error,i=r("".replace),a=String(o("zxcasd").stack),s=/\n\s*at [^:]*:[^\n]*/,c=s.test(a);n.exports=function(n,e){if(c&&"string"==typeof n&&!o.prepareStackTrace)for(;e--;)n=i(n,s,"");return n}},function(n,e,t){var r=t(1),o=t(51);n.exports=!r((function(){var n=Error("a");return!("stack"in n)||(Object.defineProperty(n,"stack",o(1,7)),7!==n.stack)}))},function(n,e,t){"use strict";var r=t(7),o=t(1),i=t(10),a=t(34),s=t(192),c=Error.prototype.toString,l=o((function(){if(r){var n=a(Object.defineProperty({},"name",{get:function(){return this===n}}));if("true"!==c.call(n))return!0}return"2: 1"!==c.call({message:1,name:2})||"Error"!==c.call({})}));n.exports=l?function(){var n=i(this),e=s(n.name,"Error"),t=s(n.message);return e?t?e+": "+t:e:t}:c},function(n,e,t){"use strict";var r=t(0),o=t(2),i=t(52),a=o([].reverse),s=[1,2];r({target:"Array",proto:!0,forced:String(s)===String(s.reverse())},{reverse:function(){return i(this)&&(this.length=this.length),a(this)}})},function(n,e,t){"use strict";var r=t(0),o=t(290).left,i=t(49),a=t(57),s=t(100);r({target:"Array",proto:!0,forced:!i("reduce")||!s&&a>79&&a<83},{reduce:function(n){var e=arguments.length;return o(this,n,e,e>1?arguments[1]:void 0)}})},function(n,e,t){var r=t(28),o=t(16),i=t(68),a=t(25),s=TypeError,c=function(n){return function(e,t,c,l){r(t);var p=o(e),u=i(p),d=a(p),f=n?d-1:0,g=n?-1:1;if(c<2)for(;;){if(f in u){l=u[f],f+=g;break}if(f+=g,n?f<0:d<=f)throw s("Reduce of empty array with no initial value")}for(;n?f>=0:d>f;f+=g)f in u&&(l=t(l,u[f],f,p));return l}};n.exports={left:c(!1),right:c(!0)}},function(n,e,t){var r=t(0),o=t(198),i=t(1),a=t(11),s=t(292).onFreeze,c=Object.freeze;r({target:"Object",stat:!0,forced:i((function(){c(1)})),sham:!o},{freeze:function(n){return c&&a(n)?c(s(n)):n}})},function(n,e,t){var r=t(0),o=t(2),i=t(74),a=t(11),s=t(9),c=t(12).f,l=t(69),p=t(186),u=t(293),d=t(92),f=t(198),g=!1,m=d("meta"),h=0,v=function(n){c(n,m,{value:{objectID:"O"+h++,weakData:{}}})},b=n.exports={enable:function(){b.enable=function(){},g=!0;var n=l.f,e=o([].splice),t={};t[m]=1,n(t).length&&(l.f=function(t){for(var r=n(t),o=0,i=r.length;o<i;o++)if(r[o]===m){e(r,o,1);break}return r},r({target:"Object",stat:!0,forced:!0},{getOwnPropertyNames:p.f}))},fastKey:function(n,e){if(!a(n))return"symbol"==typeof n?n:("string"==typeof n?"S":"P")+n;if(!s(n,m)){if(!u(n))return"F";if(!e)return"E";v(n)}return n[m].objectID},getWeakData:function(n,e){if(!s(n,m)){if(!u(n))return!0;if(!e)return!1;v(n)}return n[m].weakData},onFreeze:function(n){return f&&g&&u(n)&&!s(n,m)&&v(n),n}};i[m]=!0},function(n,e,t){var r=t(1),o=t(11),i=t(30),a=t(294),s=Object.isExtensible,c=r((function(){s(1)}));n.exports=c||a?function(n){return!!o(n)&&((!a||"ArrayBuffer"!=i(n))&&(!s||s(n)))}:s},function(n,e,t){var r=t(1);n.exports=r((function(){if("function"==typeof ArrayBuffer){var n=new ArrayBuffer(8);Object.isExtensible(n)&&Object.defineProperty(n,"a",{value:8})}}))},function(n,e,t){"use strict";var r=t(66),o=t(8),i=t(16),a=t(296),s=t(181),c=t(101),l=t(25),p=t(62),u=t(158),d=t(115),f=Array;n.exports=function(n){var e=i(n),t=c(this),g=arguments.length,m=g>1?arguments[1]:void 0,h=void 0!==m;h&&(m=r(m,g>2?arguments[2]:void 0));var v,b,y,x,S,_,w=d(e),j=0;if(!w||this===f&&s(w))for(v=l(e),b=t?new this(v):f(v);v>j;j++)_=h?m(e[j],j):e[j],p(b,j,_);else for(S=(x=u(e,w)).next,b=t?new this:[];!(y=o(S,x)).done;j++)_=h?a(x,m,[y.value,j],!0):y.value,p(b,j,_);return b.length=j,b}},function(n,e,t){var r=t(10),o=t(182);n.exports=function(n,e,t,i){try{return i?e(r(t)[0],t[1]):e(t)}catch(e){o(n,"throw",e)}}},function(n,e,t){var r=t(2),o=t(16),i=Math.floor,a=r("".charAt),s=r("".replace),c=r("".slice),l=/\$([$&'`]|\d{1,2}|<[^>]*>)/g,p=/\$([$&'`]|\d{1,2})/g;n.exports=function(n,e,t,r,u,d){var f=t+n.length,g=r.length,m=p;return void 0!==u&&(u=o(u),m=l),s(d,m,(function(o,s){var l;switch(a(s,0)){case"$":return"$";case"&":return n;case"`":return c(e,0,t);case"'":return c(e,f);case"<":l=u[c(s,1,-1)];break;default:var p=+s;if(0===p)return o;if(p>g){var d=i(p/10);return 0===d?o:d<=g?void 0===r[d-1]?a(s,1):r[d-1]+a(s,1):o}l=r[p-1]}return void 0===l?"":l}))}},function(n,e,t){var r=t(201),o=t(299);n.exports=function n(e,t,i,a,s){var c=-1,l=e.length;for(i||(i=o),s||(s=[]);++c<l;){var p=e[c];t>0&&i(p)?t>1?n(p,t-1,i,a,s):r(s,p):a||(s[s.length]=p)}return s}},function(n,e,t){var r=t(84),o=t(139),i=t(31),a=r?r.isConcatSpreadable:void 0;n.exports=function(n){return i(n)||o(n)||!!(a&&n&&n[a])}},function(n,e,t){var r=t(71),o=t(53);n.exports=function(n){return o(n)&&"[object Arguments]"==r(n)}},function(n,e,t){var r=t(84),o=Object.prototype,i=o.hasOwnProperty,a=o.toString,s=r?r.toStringTag:void 0;n.exports=function(n){var e=i.call(n,s),t=n[s];try{n[s]=void 0;var r=!0}catch(n){}var o=a.call(n);return r&&(e?n[s]=t:delete n[s]),o}},function(n,e){var t=Object.prototype.toString;n.exports=function(n){return t.call(n)}},function(n,e,t){var r=t(304),o=t(360),i=t(147),a=t(31),s=t(371);n.exports=function(n){return"function"==typeof n?n:null==n?i:"object"==typeof n?a(n)?o(n[0],n[1]):r(n):s(n)}},function(n,e,t){var r=t(305),o=t(359),i=t(218);n.exports=function(n){var e=o(n);return 1==e.length&&e[0][2]?i(e[0][0],e[0][1]):function(t){return t===n||r(t,n,e)}}},function(n,e,t){var r=t(203),o=t(207);n.exports=function(n,e,t,i){var a=t.length,s=a,c=!i;if(null==n)return!s;for(n=Object(n);a--;){var l=t[a];if(c&&l[2]?l[1]!==n[l[0]]:!(l[0]in n))return!1}for(;++a<s;){var p=(l=t[a])[0],u=n[p],d=l[1];if(c&&l[2]){if(void 0===u&&!(p in n))return!1}else{var f=new r;if(i)var g=i(u,d,p,n,e,f);if(!(void 0===g?o(d,u,3,i,f):g))return!1}}return!0}},function(n,e){n.exports=function(){this.__data__=[],this.size=0}},function(n,e,t){var r=t(107),o=Array.prototype.splice;n.exports=function(n){var e=this.__data__,t=r(e,n);return!(t<0)&&(t==e.length-1?e.pop():o.call(e,t,1),--this.size,!0)}},function(n,e,t){var r=t(107);n.exports=function(n){var e=this.__data__,t=r(e,n);return t<0?void 0:e[t][1]}},function(n,e,t){var r=t(107);n.exports=function(n){return r(this.__data__,n)>-1}},function(n,e,t){var r=t(107);n.exports=function(n,e){var t=this.__data__,o=r(t,n);return o<0?(++this.size,t.push([n,e])):t[o][1]=e,this}},function(n,e,t){var r=t(106);n.exports=function(){this.__data__=new r,this.size=0}},function(n,e){n.exports=function(n){var e=this.__data__,t=e.delete(n);return this.size=e.size,t}},function(n,e){n.exports=function(n){return this.__data__.get(n)}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e,t){var r=t(106),o=t(140),i=t(142);n.exports=function(n,e){var t=this.__data__;if(t instanceof r){var a=t.__data__;if(!o||a.length<199)return a.push([n,e]),this.size=++t.size,this;t=this.__data__=new i(a)}return t.set(n,e),this.size=t.size,this}},function(n,e,t){var r=t(205),o=t(317),i=t(141),a=t(206),s=/^\[object .+?Constructor\]$/,c=Function.prototype,l=Object.prototype,p=c.toString,u=l.hasOwnProperty,d=RegExp("^"+p.call(u).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");n.exports=function(n){return!(!i(n)||o(n))&&(r(n)?d:s).test(a(n))}},function(n,e,t){var r,o=t(318),i=(r=/[^.]+$/.exec(o&&o.keys&&o.keys.IE_PROTO||""))?"Symbol(src)_1."+r:"";n.exports=function(n){return!!i&&i in n}},function(n,e,t){var r=t(33)["__core-js_shared__"];n.exports=r},function(n,e){n.exports=function(n,e){return null==n?void 0:n[e]}},function(n,e,t){var r=t(321),o=t(106),i=t(140);n.exports=function(){this.size=0,this.__data__={hash:new r,map:new(i||o),string:new r}}},function(n,e,t){var r=t(322),o=t(323),i=t(324),a=t(325),s=t(326);function c(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}c.prototype.clear=r,c.prototype.delete=o,c.prototype.get=i,c.prototype.has=a,c.prototype.set=s,n.exports=c},function(n,e,t){var r=t(108);n.exports=function(){this.__data__=r?r(null):{},this.size=0}},function(n,e){n.exports=function(n){var e=this.has(n)&&delete this.__data__[n];return this.size-=e?1:0,e}},function(n,e,t){var r=t(108),o=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;if(r){var t=e[n];return"__lodash_hash_undefined__"===t?void 0:t}return o.call(e,n)?e[n]:void 0}},function(n,e,t){var r=t(108),o=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;return r?void 0!==e[n]:o.call(e,n)}},function(n,e,t){var r=t(108);n.exports=function(n,e){var t=this.__data__;return this.size+=this.has(n)?0:1,t[n]=r&&void 0===e?"__lodash_hash_undefined__":e,this}},function(n,e,t){var r=t(109);n.exports=function(n){var e=r(this,n).delete(n);return this.size-=e?1:0,e}},function(n,e){n.exports=function(n){var e=typeof n;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==n:null===n}},function(n,e,t){var r=t(109);n.exports=function(n){return r(this,n).get(n)}},function(n,e,t){var r=t(109);n.exports=function(n){return r(this,n).has(n)}},function(n,e,t){var r=t(109);n.exports=function(n,e){var t=r(this,n),o=t.size;return t.set(n,e),this.size+=t.size==o?0:1,this}},function(n,e,t){var r=t(203),o=t(208),i=t(336),a=t(339),s=t(355),c=t(31),l=t(212),p=t(214),u="[object Object]",d=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,f,g,m){var h=c(n),v=c(e),b=h?"[object Array]":s(n),y=v?"[object Array]":s(e),x=(b="[object Arguments]"==b?u:b)==u,S=(y="[object Arguments]"==y?u:y)==u,_=b==y;if(_&&l(n)){if(!l(e))return!1;h=!0,x=!1}if(_&&!x)return m||(m=new r),h||p(n)?o(n,e,t,f,g,m):i(n,e,b,t,f,g,m);if(!(1&t)){var w=x&&d.call(n,"__wrapped__"),j=S&&d.call(e,"__wrapped__");if(w||j){var C=w?n.value():n,k=j?e.value():e;return m||(m=new r),g(C,k,t,f,m)}}return!!_&&(m||(m=new r),a(n,e,t,f,g,m))}},function(n,e){n.exports=function(n){return this.__data__.set(n,"__lodash_hash_undefined__"),this}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length;++t<r;)if(e(n[t],t,n))return!0;return!1}},function(n,e,t){var r=t(84),o=t(337),i=t(204),a=t(208),s=t(338),c=t(143),l=r?r.prototype:void 0,p=l?l.valueOf:void 0;n.exports=function(n,e,t,r,l,u,d){switch(t){case"[object DataView]":if(n.byteLength!=e.byteLength||n.byteOffset!=e.byteOffset)return!1;n=n.buffer,e=e.buffer;case"[object ArrayBuffer]":return!(n.byteLength!=e.byteLength||!u(new o(n),new o(e)));case"[object Boolean]":case"[object Date]":case"[object Number]":return i(+n,+e);case"[object Error]":return n.name==e.name&&n.message==e.message;case"[object RegExp]":case"[object String]":return n==e+"";case"[object Map]":var f=s;case"[object Set]":var g=1&r;if(f||(f=c),n.size!=e.size&&!g)return!1;var m=d.get(n);if(m)return m==e;r|=2,d.set(n,e);var h=a(f(n),f(e),r,l,u,d);return d.delete(n),h;case"[object Symbol]":if(p)return p.call(n)==p.call(e)}return!1}},function(n,e,t){var r=t(33).Uint8Array;n.exports=r},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n,r){t[++e]=[r,n]})),t}},function(n,e,t){var r=t(340),o=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,i,a,s){var c=1&t,l=r(n),p=l.length;if(p!=r(e).length&&!c)return!1;for(var u=p;u--;){var d=l[u];if(!(c?d in e:o.call(e,d)))return!1}var f=s.get(n),g=s.get(e);if(f&&g)return f==e&&g==n;var m=!0;s.set(n,e),s.set(e,n);for(var h=c;++u<p;){var v=n[d=l[u]],b=e[d];if(i)var y=c?i(b,v,d,e,n,s):i(v,b,d,n,e,s);if(!(void 0===y?v===b||a(v,b,t,i,s):y)){m=!1;break}h||(h="constructor"==d)}if(m&&!h){var x=n.constructor,S=e.constructor;x==S||!("constructor"in n)||!("constructor"in e)||"function"==typeof x&&x instanceof x&&"function"==typeof S&&S instanceof S||(m=!1)}return s.delete(n),s.delete(e),m}},function(n,e,t){var r=t(341),o=t(342),i=t(211);n.exports=function(n){return r(n,i,o)}},function(n,e,t){var r=t(201),o=t(31);n.exports=function(n,e,t){var i=e(n);return o(n)?i:r(i,t(n))}},function(n,e,t){var r=t(343),o=t(344),i=Object.prototype.propertyIsEnumerable,a=Object.getOwnPropertySymbols,s=a?function(n){return null==n?[]:(n=Object(n),r(a(n),(function(e){return i.call(n,e)})))}:o;n.exports=s},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length,o=0,i=[];++t<r;){var a=n[t];e(a,t,n)&&(i[o++]=a)}return i}},function(n,e){n.exports=function(){return[]}},function(n,e,t){var r=t(346),o=t(139),i=t(31),a=t(212),s=t(213),c=t(214),l=Object.prototype.hasOwnProperty;n.exports=function(n,e){var t=i(n),p=!t&&o(n),u=!t&&!p&&a(n),d=!t&&!p&&!u&&c(n),f=t||p||u||d,g=f?r(n.length,String):[],m=g.length;for(var h in n)!e&&!l.call(n,h)||f&&("length"==h||u&&("offset"==h||"parent"==h)||d&&("buffer"==h||"byteLength"==h||"byteOffset"==h)||s(h,m))||g.push(h);return g}},function(n,e){n.exports=function(n,e){for(var t=-1,r=Array(n);++t<n;)r[t]=e(t);return r}},function(n,e){n.exports=function(){return!1}},function(n,e,t){var r=t(71),o=t(144),i=t(53),a={};a["[object Float32Array]"]=a["[object Float64Array]"]=a["[object Int8Array]"]=a["[object Int16Array]"]=a["[object Int32Array]"]=a["[object Uint8Array]"]=a["[object Uint8ClampedArray]"]=a["[object Uint16Array]"]=a["[object Uint32Array]"]=!0,a["[object Arguments]"]=a["[object Array]"]=a["[object ArrayBuffer]"]=a["[object Boolean]"]=a["[object DataView]"]=a["[object Date]"]=a["[object Error]"]=a["[object Function]"]=a["[object Map]"]=a["[object Number]"]=a["[object Object]"]=a["[object RegExp]"]=a["[object Set]"]=a["[object String]"]=a["[object WeakMap]"]=!1,n.exports=function(n){return i(n)&&o(n.length)&&!!a[r(n)]}},function(n,e){n.exports=function(n){return function(e){return n(e)}}},function(n,e,t){(function(n){var r=t(202),o=e&&!e.nodeType&&e,i=o&&"object"==typeof n&&n&&!n.nodeType&&n,a=i&&i.exports===o&&r.process,s=function(){try{var n=i&&i.require&&i.require("util").types;return n||a&&a.binding&&a.binding("util")}catch(n){}}();n.exports=s}).call(this,t(162)(n))},function(n,e,t){var r=t(352),o=t(353),i=Object.prototype.hasOwnProperty;n.exports=function(n){if(!r(n))return o(n);var e=[];for(var t in Object(n))i.call(n,t)&&"constructor"!=t&&e.push(t);return e}},function(n,e){var t=Object.prototype;n.exports=function(n){var e=n&&n.constructor;return n===("function"==typeof e&&e.prototype||t)}},function(n,e,t){var r=t(354)(Object.keys,Object);n.exports=r},function(n,e){n.exports=function(n,e){return function(t){return n(e(t))}}},function(n,e,t){var r=t(356),o=t(140),i=t(357),a=t(216),s=t(358),c=t(71),l=t(206),p=l(r),u=l(o),d=l(i),f=l(a),g=l(s),m=c;(r&&"[object DataView]"!=m(new r(new ArrayBuffer(1)))||o&&"[object Map]"!=m(new o)||i&&"[object Promise]"!=m(i.resolve())||a&&"[object Set]"!=m(new a)||s&&"[object WeakMap]"!=m(new s))&&(m=function(n){var e=c(n),t="[object Object]"==e?n.constructor:void 0,r=t?l(t):"";if(r)switch(r){case p:return"[object DataView]";case u:return"[object Map]";case d:return"[object Promise]";case f:return"[object Set]";case g:return"[object WeakMap]"}return e}),n.exports=m},function(n,e,t){var r=t(43)(t(33),"DataView");n.exports=r},function(n,e,t){var r=t(43)(t(33),"Promise");n.exports=r},function(n,e,t){var r=t(43)(t(33),"WeakMap");n.exports=r},function(n,e,t){var r=t(217),o=t(211);n.exports=function(n){for(var e=o(n),t=e.length;t--;){var i=e[t],a=n[i];e[t]=[i,a,r(a)]}return e}},function(n,e,t){var r=t(207),o=t(361),i=t(368),a=t(145),s=t(217),c=t(218),l=t(110);n.exports=function(n,e){return a(n)&&s(e)?c(l(n),e):function(t){var a=o(t,n);return void 0===a&&a===e?i(t,n):r(e,a,3)}}},function(n,e,t){var r=t(219);n.exports=function(n,e,t){var o=null==n?void 0:r(n,e);return void 0===o?t:o}},function(n,e,t){var r=t(363),o=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,i=/\\(\\)?/g,a=r((function(n){var e=[];return 46===n.charCodeAt(0)&&e.push(""),n.replace(o,(function(n,t,r,o){e.push(r?o.replace(i,"$1"):t||n)})),e}));n.exports=a},function(n,e,t){var r=t(364);n.exports=function(n){var e=r(n,(function(n){return 500===t.size&&t.clear(),n})),t=e.cache;return e}},function(n,e,t){var r=t(142);function o(n,e){if("function"!=typeof n||null!=e&&"function"!=typeof e)throw new TypeError("Expected a function");var t=function(){var r=arguments,o=e?e.apply(this,r):r[0],i=t.cache;if(i.has(o))return i.get(o);var a=n.apply(this,r);return t.cache=i.set(o,a)||i,a};return t.cache=new(o.Cache||r),t}o.Cache=r,n.exports=o},function(n,e,t){var r=t(366);n.exports=function(n){return null==n?"":r(n)}},function(n,e,t){var r=t(84),o=t(367),i=t(31),a=t(146),s=r?r.prototype:void 0,c=s?s.toString:void 0;n.exports=function n(e){if("string"==typeof e)return e;if(i(e))return o(e,n)+"";if(a(e))return c?c.call(e):"";var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length,o=Array(r);++t<r;)o[t]=e(n[t],t,n);return o}},function(n,e,t){var r=t(369),o=t(370);n.exports=function(n,e){return null!=n&&o(n,e,r)}},function(n,e){n.exports=function(n,e){return null!=n&&e in Object(n)}},function(n,e,t){var r=t(220),o=t(139),i=t(31),a=t(213),s=t(144),c=t(110);n.exports=function(n,e,t){for(var l=-1,p=(e=r(e,n)).length,u=!1;++l<p;){var d=c(e[l]);if(!(u=null!=n&&t(n,d)))break;n=n[d]}return u||++l!=p?u:!!(p=null==n?0:n.length)&&s(p)&&a(d,p)&&(i(n)||o(n))}},function(n,e,t){var r=t(372),o=t(373),i=t(145),a=t(110);n.exports=function(n){return i(n)?r(a(n)):o(n)}},function(n,e){n.exports=function(n){return function(e){return null==e?void 0:e[n]}}},function(n,e,t){var r=t(219);n.exports=function(n){return function(e){return r(e,n)}}},function(n,e,t){var r=t(147),o=t(375),i=t(377);n.exports=function(n,e){return i(o(n,e,r),n+"")}},function(n,e,t){var r=t(376),o=Math.max;n.exports=function(n,e,t){return e=o(void 0===e?n.length-1:e,0),function(){for(var i=arguments,a=-1,s=o(i.length-e,0),c=Array(s);++a<s;)c[a]=i[e+a];a=-1;for(var l=Array(e+1);++a<e;)l[a]=i[a];return l[e]=t(c),r(n,this,l)}}},function(n,e){n.exports=function(n,e,t){switch(t.length){case 0:return n.call(e);case 1:return n.call(e,t[0]);case 2:return n.call(e,t[0],t[1]);case 3:return n.call(e,t[0],t[1],t[2])}return n.apply(e,t)}},function(n,e,t){var r=t(378),o=t(381)(r);n.exports=o},function(n,e,t){var r=t(379),o=t(380),i=t(147),a=o?function(n,e){return o(n,"toString",{configurable:!0,enumerable:!1,value:r(e),writable:!0})}:i;n.exports=a},function(n,e){n.exports=function(n){return function(){return n}}},function(n,e,t){var r=t(43),o=function(){try{var n=r(Object,"defineProperty");return n({},"",{}),n}catch(n){}}();n.exports=o},function(n,e){var t=Date.now;n.exports=function(n){var e=0,r=0;return function(){var o=t(),i=16-(o-r);if(r=o,i>0){if(++e>=800)return arguments[0]}else e=0;return n.apply(void 0,arguments)}}},function(n,e,t){var r=t(209),o=t(383),i=t(388),a=t(210),s=t(389),c=t(143);n.exports=function(n,e,t){var l=-1,p=o,u=n.length,d=!0,f=[],g=f;if(t)d=!1,p=i;else if(u>=200){var m=e?null:s(n);if(m)return c(m);d=!1,p=a,g=new r}else g=e?[]:f;n:for(;++l<u;){var h=n[l],v=e?e(h):h;if(h=t||0!==h?h:0,d&&v==v){for(var b=g.length;b--;)if(g[b]===v)continue n;e&&g.push(v),f.push(h)}else p(g,v,t)||(g!==f&&g.push(v),f.push(h))}return f}},function(n,e,t){var r=t(384);n.exports=function(n,e){return!!(null==n?0:n.length)&&r(n,e,0)>-1}},function(n,e,t){var r=t(385),o=t(386),i=t(387);n.exports=function(n,e,t){return e==e?i(n,e,t):r(n,o,t)}},function(n,e){n.exports=function(n,e,t,r){for(var o=n.length,i=t+(r?1:-1);r?i--:++i<o;)if(e(n[i],i,n))return i;return-1}},function(n,e){n.exports=function(n){return n!=n}},function(n,e){n.exports=function(n,e,t){for(var r=t-1,o=n.length;++r<o;)if(n[r]===e)return r;return-1}},function(n,e){n.exports=function(n,e,t){for(var r=-1,o=null==n?0:n.length;++r<o;)if(t(e,n[r]))return!0;return!1}},function(n,e,t){var r=t(216),o=t(390),i=t(143),a=r&&1/i(new r([,-0]))[1]==1/0?function(n){return new r(n)}:o;n.exports=a},function(n,e){n.exports=function(){}},function(n,e,t){var r=t(215),o=t(53);n.exports=function(n){return o(n)&&r(n)}},function(n,e,t){var r=t(0),o=t(3),i=t(221).setInterval;r({global:!0,bind:!0,forced:o.setInterval!==i},{setInterval:i})},function(n,e,t){var r=t(0),o=t(3),i=t(221).setTimeout;r({global:!0,bind:!0,forced:o.setTimeout!==i},{setTimeout:i})},function(n,e,t){},function(n,e,t){},function(n,e,t){var r=t(76).PROPER,o=t(1),i=t(165);n.exports=function(n){return o((function(){return!!i[n]()||"​᠎"!=="​᠎"[n]()||r&&i[n].name!==n}))}},function(n,e,t){var r=t(2);n.exports=r(1..valueOf)},function(n,e,t){var r=t(2),o=t(59),i=t(13),a=t(399),s=t(18),c=r(a),l=r("".slice),p=Math.ceil,u=function(n){return function(e,t,r){var a,u,d=i(s(e)),f=o(t),g=d.length,m=void 0===r?" ":i(r);return f<=g||""==m?d:((u=c(m,p((a=f-g)/m.length))).length>a&&(u=l(u,0,a)),n?d+u:u+d)}};n.exports={start:u(!1),end:u(!0)}},function(n,e,t){"use strict";var r=t(48),o=t(13),i=t(18),a=RangeError;n.exports=function(n){var e=o(i(this)),t="",s=r(n);if(s<0||s==1/0)throw a("Wrong number of repetitions");for(;s>0;(s>>>=1)&&(e+=e))1&s&&(t+=e);return t}},function(n,e,t){var r=t(32);n.exports=/Version\/10(?:\.\d+){1,2}(?: [\w./]+)?(?: Mobile\/\w+)? Safari\//.test(r)},function(n,e,t){"use strict";t(224)},function(n,e,t){"use strict";t(225)},function(n,e,t){"use strict";var r=t(0),o=t(2),i=t(28),a=t(16),s=t(25),c=t(226),l=t(13),p=t(1),u=t(247),d=t(49),f=t(404),g=t(405),m=t(57),h=t(406),v=[],b=o(v.sort),y=o(v.push),x=p((function(){v.sort(void 0)})),S=p((function(){v.sort(null)})),_=d("sort"),w=!p((function(){if(m)return m<70;if(!(f&&f>3)){if(g)return!0;if(h)return h<603;var n,e,t,r,o="";for(n=65;n<76;n++){switch(e=String.fromCharCode(n),n){case 66:case 69:case 70:case 72:t=3;break;case 68:case 71:t=4;break;default:t=2}for(r=0;r<47;r++)v.push({k:e+r,v:t})}for(v.sort((function(n,e){return e.v-n.v})),r=0;r<v.length;r++)e=v[r].k.charAt(0),o.charAt(o.length-1)!==e&&(o+=e);return"DGBEFHACIJK"!==o}}));r({target:"Array",proto:!0,forced:x||!S||!_||!w},{sort:function(n){void 0!==n&&i(n);var e=a(this);if(w)return void 0===n?b(e):b(e,n);var t,r,o=[],p=s(e);for(r=0;r<p;r++)r in e&&y(o,e[r]);for(u(o,function(n){return function(e,t){return void 0===t?-1:void 0===e?1:void 0!==n?+n(e,t)||0:l(e)>l(t)?1:-1}}(n)),t=o.length,r=0;r<t;)e[r]=o[r++];for(;r<p;)c(e,r++);return e}})},function(n,e,t){var r=t(32).match(/firefox\/(\d+)/i);n.exports=!!r&&+r[1]},function(n,e,t){var r=t(32);n.exports=/MSIE|Trident/.test(r)},function(n,e,t){var r=t(32).match(/AppleWebKit\/(\d+)\./);n.exports=!!r&&+r[1]},function(n,e,t){},function(n,e,t){},function(n,e,t){"use strict";var r=t(0),o=t(16),i=t(96),a=t(48),s=t(25),c=t(161),l=t(116),p=t(62),u=t(226),d=t(83)("splice"),f=Math.max,g=Math.min;r({target:"Array",proto:!0,forced:!d},{splice:function(n,e){var t,r,d,m,h,v,b=o(this),y=s(b),x=i(n,y),S=arguments.length;for(0===S?t=r=0:1===S?(t=0,r=y-x):(t=S-2,r=g(f(a(e),0),y-x)),c(y+t-r),d=l(b,r),m=0;m<r;m++)(h=x+m)in b&&p(d,m,b[h]);if(d.length=r,t<r){for(m=x;m<y-r;m++)v=m+t,(h=m+r)in b?b[v]=b[h]:u(b,v);for(m=y;m>y-r+t;m--)u(b,m-1)}else if(t>r)for(m=y-r;m>x;m--)v=m+t-1,(h=m+r-1)in b?b[v]=b[h]:u(b,v);for(m=0;m<t;m++)b[m+x]=arguments[m+2];return b.length=y-r+t,d}})},function(n,e,t){var r=t(0),o=t(1),i=t(19),a=t(38).f,s=t(7),c=o((function(){a(1)}));r({target:"Object",stat:!0,forced:!s||c,sham:!s},{getOwnPropertyDescriptor:function(n,e){return a(i(n),e)}})},function(n,e,t){var r=t(0),o=t(7),i=t(123).f;r({target:"Object",stat:!0,forced:Object.defineProperties!==i,sham:!o},{defineProperties:i})},function(n,e,t){t(0)({target:"Reflect",stat:!0},{ownKeys:t(128)})},function(n,e){},function(n,e){function t(n,e){for(var t=0,r=n.length-1;r>=0;r--){var o=n[r];"."===o?n.splice(r,1):".."===o?(n.splice(r,1),t++):t&&(n.splice(r,1),t--)}if(e)for(;t--;t)n.unshift("..");return n}function r(n,e){if(n.filter)return n.filter(e);for(var t=[],r=0;r<n.length;r++)e(n[r],r,n)&&t.push(n[r]);return t}e.resolve=function(){for(var n="",e=!1,o=arguments.length-1;o>=-1&&!e;o--){var i=o>=0?arguments[o]:process.cwd();if("string"!=typeof i)throw new TypeError("Arguments to path.resolve must be strings");i&&(n=i+"/"+n,e="/"===i.charAt(0))}return(e?"/":"")+(n=t(r(n.split("/"),(function(n){return!!n})),!e).join("/"))||"."},e.normalize=function(n){var i=e.isAbsolute(n),a="/"===o(n,-1);return(n=t(r(n.split("/"),(function(n){return!!n})),!i).join("/"))||i||(n="."),n&&a&&(n+="/"),(i?"/":"")+n},e.isAbsolute=function(n){return"/"===n.charAt(0)},e.join=function(){var n=Array.prototype.slice.call(arguments,0);return e.normalize(r(n,(function(n,e){if("string"!=typeof n)throw new TypeError("Arguments to path.join must be strings");return n})).join("/"))},e.relative=function(n,t){function r(n){for(var e=0;e<n.length&&""===n[e];e++);for(var t=n.length-1;t>=0&&""===n[t];t--);return e>t?[]:n.slice(e,t-e+1)}n=e.resolve(n).substr(1),t=e.resolve(t).substr(1);for(var o=r(n.split("/")),i=r(t.split("/")),a=Math.min(o.length,i.length),s=a,c=0;c<a;c++)if(o[c]!==i[c]){s=c;break}var l=[];for(c=s;c<o.length;c++)l.push("..");return(l=l.concat(i.slice(s))).join("/")},e.sep="/",e.delimiter=":",e.dirname=function(n){if("string"!=typeof n&&(n+=""),0===n.length)return".";for(var e=n.charCodeAt(0),t=47===e,r=-1,o=!0,i=n.length-1;i>=1;--i)if(47===(e=n.charCodeAt(i))){if(!o){r=i;break}}else o=!1;return-1===r?t?"/":".":t&&1===r?"/":n.slice(0,r)},e.basename=function(n,e){var t=function(n){"string"!=typeof n&&(n+="");var e,t=0,r=-1,o=!0;for(e=n.length-1;e>=0;--e)if(47===n.charCodeAt(e)){if(!o){t=e+1;break}}else-1===r&&(o=!1,r=e+1);return-1===r?"":n.slice(t,r)}(n);return e&&t.substr(-1*e.length)===e&&(t=t.substr(0,t.length-e.length)),t},e.extname=function(n){"string"!=typeof n&&(n+="");for(var e=-1,t=0,r=-1,o=!0,i=0,a=n.length-1;a>=0;--a){var s=n.charCodeAt(a);if(47!==s)-1===r&&(o=!1,r=a+1),46===s?-1===e?e=a:1!==i&&(i=1):-1!==e&&(i=-1);else if(!o){t=a+1;break}}return-1===e||-1===r||0===i||1===i&&e===r-1&&e===t+1?"":n.slice(e,r)};var o="b"==="ab".substr(-1)?function(n,e,t){return n.substr(e,t)}:function(n,e,t){return e<0&&(e=n.length+e),n.substr(e,t)}},function(n,e,t){"use strict";var r=/[|\\{}()[\]^$+*?.]/g;e.escapeRegExpChars=function(n){return n?String(n).replace(r,"\\$&"):""};var o={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&#34;","'":"&#39;"},i=/[&<>'"]/g;function a(n){return o[n]||n}e.escapeXML=function(n){return null==n?"":String(n).replace(i,a)},e.escapeXML.toString=function(){return Function.prototype.toString.call(this)+';\nvar _ENCODE_HTML_RULES = {\n      "&": "&amp;"\n    , "<": "&lt;"\n    , ">": "&gt;"\n    , \'"\': "&#34;"\n    , "\'": "&#39;"\n    }\n  , _MATCH_HTML = /[&<>\'"]/g;\nfunction encode_char(c) {\n  return _ENCODE_HTML_RULES[c] || c;\n};\n'},e.shallowCopy=function(n,e){for(var t in e=e||{})n[t]=e[t];return n},e.shallowCopyFromList=function(n,e,t){for(var r=0;r<t.length;r++){var o=t[r];void 0!==e[o]&&(n[o]=e[o])}return n},e.cache={_data:{},set:function(n,e){this._data[n]=e},get:function(n){return this._data[n]},remove:function(n){delete this._data[n]},reset:function(){this._data={}}}},function(n){n.exports=JSON.parse('{"_from":"ejs@^2.6.1","_id":"ejs@2.7.4","_inBundle":false,"_integrity":"sha512-7vmuyh5+kuUyJKePhQfRQBhXV5Ce+RnaeeQArKu1EAMpL3WbgMt5WG6uQZpEVvYSSsxMXRKOewtDk9RaTKXRlA==","_location":"/ejs","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"ejs@^2.6.1","name":"ejs","escapedName":"ejs","rawSpec":"^2.6.1","saveSpec":null,"fetchSpec":"^2.6.1"},"_requiredBy":["/vuepress-plugin-comment"],"_resolved":"https://registry.npmjs.org/ejs/-/ejs-2.7.4.tgz","_shasum":"48661287573dcc53e366c7a1ae52c3a120eec9ba","_spec":"ejs@^2.6.1","_where":"/home/runner/work/spring-boot-tutorial/spring-boot-tutorial/node_modules/vuepress-plugin-comment","author":{"name":"Matthew Eernisse","email":"mde@fleegix.org","url":"http://fleegix.org"},"bugs":{"url":"https://github.com/mde/ejs/issues"},"bundleDependencies":false,"dependencies":{},"deprecated":false,"description":"Embedded JavaScript templates","devDependencies":{"browserify":"^13.1.1","eslint":"^4.14.0","git-directory-deploy":"^1.5.1","jake":"^10.3.1","jsdoc":"^3.4.0","lru-cache":"^4.0.1","mocha":"^5.0.5","uglify-js":"^3.3.16"},"engines":{"node":">=0.10.0"},"homepage":"https://github.com/mde/ejs","keywords":["template","engine","ejs"],"license":"Apache-2.0","main":"./lib/ejs.js","name":"ejs","repository":{"type":"git","url":"git://github.com/mde/ejs.git"},"scripts":{"postinstall":"node ./postinstall.js","test":"mocha"},"version":"2.7.4"}')},function(n,e,t){"use strict";t(228)},function(n,e,t){"use strict";t(229)},function(n,e,t){"use strict";t.r(e);t(156),t(255),t(268),t(270);var r=t(63),o=t(104),i=(t(40),t(5),t(20),t(26),t(46),t(29),Object.freeze({}));function a(n){return null==n}function s(n){return null!=n}function c(n){return!0===n}function l(n){return"string"==typeof n||"number"==typeof n||"symbol"==typeof n||"boolean"==typeof n}function p(n){return null!==n&&"object"==typeof n}var u=Object.prototype.toString;function d(n){return"[object Object]"===u.call(n)}function f(n){return"[object RegExp]"===u.call(n)}function g(n){var e=parseFloat(String(n));return e>=0&&Math.floor(e)===e&&isFinite(n)}function m(n){return s(n)&&"function"==typeof n.then&&"function"==typeof n.catch}function h(n){return null==n?"":Array.isArray(n)||d(n)&&n.toString===u?JSON.stringify(n,null,2):String(n)}function v(n){var e=parseFloat(n);return isNaN(e)?n:e}function b(n,e){for(var t=Object.create(null),r=n.split(","),o=0;o<r.length;o++)t[r[o]]=!0;return e?function(n){return t[n.toLowerCase()]}:function(n){return t[n]}}b("slot,component",!0);var y=b("key,ref,slot,slot-scope,is");function x(n,e){if(n.length){var t=n.indexOf(e);if(t>-1)return n.splice(t,1)}}var S=Object.prototype.hasOwnProperty;function _(n,e){return S.call(n,e)}function w(n){var e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}var j=/-(\w)/g,C=w((function(n){return n.replace(j,(function(n,e){return e?e.toUpperCase():""}))})),k=w((function(n){return n.charAt(0).toUpperCase()+n.slice(1)})),E=/\B([A-Z])/g,B=w((function(n){return n.replace(E,"-$1").toLowerCase()}));var A=Function.prototype.bind?function(n,e){return n.bind(e)}:function(n,e){function t(t){var r=arguments.length;return r?r>1?n.apply(e,arguments):n.call(e,t):n.call(e)}return t._length=n.length,t};function T(n,e){e=e||0;for(var t=n.length-e,r=new Array(t);t--;)r[t]=n[t+e];return r}function I(n,e){for(var t in e)n[t]=e[t];return n}function O(n){for(var e={},t=0;t<n.length;t++)n[t]&&I(e,n[t]);return e}function P(n,e,t){}var M=function(n,e,t){return!1},L=function(n){return n};function z(n,e){if(n===e)return!0;var t=p(n),r=p(e);if(!t||!r)return!t&&!r&&String(n)===String(e);try{var o=Array.isArray(n),i=Array.isArray(e);if(o&&i)return n.length===e.length&&n.every((function(n,t){return z(n,e[t])}));if(n instanceof Date&&e instanceof Date)return n.getTime()===e.getTime();if(o||i)return!1;var a=Object.keys(n),s=Object.keys(e);return a.length===s.length&&a.every((function(t){return z(n[t],e[t])}))}catch(n){return!1}}function R(n,e){for(var t=0;t<n.length;t++)if(z(n[t],e))return t;return-1}function D(n){var e=!1;return function(){e||(e=!0,n.apply(this,arguments))}}var $=["component","directive","filter"],N=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],F={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:M,isReservedAttr:M,isUnknownElement:M,getTagNamespace:P,parsePlatformTagName:L,mustUseProp:M,async:!0,_lifecycleHooks:N},J=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function U(n,e,t,r){Object.defineProperty(n,e,{value:t,enumerable:!!r,writable:!0,configurable:!0})}var q=new RegExp("[^"+J.source+".$_\\d]");var H,W="__proto__"in{},V="undefined"!=typeof window,G="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,X=G&&WXEnvironment.platform.toLowerCase(),Y=V&&window.navigator.userAgent.toLowerCase(),K=Y&&/msie|trident/.test(Y),Z=Y&&Y.indexOf("msie 9.0")>0,Q=Y&&Y.indexOf("edge/")>0,nn=(Y&&Y.indexOf("android"),Y&&/iphone|ipad|ipod|ios/.test(Y)||"ios"===X),en=(Y&&/chrome\/\d+/.test(Y),Y&&/phantomjs/.test(Y),Y&&Y.match(/firefox\/(\d+)/)),tn={}.watch,rn=!1;if(V)try{var on={};Object.defineProperty(on,"passive",{get:function(){rn=!0}}),window.addEventListener("test-passive",null,on)}catch(n){}var an=function(){return void 0===H&&(H=!V&&!G&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),H},sn=V&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function cn(n){return"function"==typeof n&&/native code/.test(n.toString())}var ln,pn="undefined"!=typeof Symbol&&cn(Symbol)&&"undefined"!=typeof Reflect&&cn(Reflect.ownKeys);ln="undefined"!=typeof Set&&cn(Set)?Set:function(){function n(){this.set=Object.create(null)}return n.prototype.has=function(n){return!0===this.set[n]},n.prototype.add=function(n){this.set[n]=!0},n.prototype.clear=function(){this.set=Object.create(null)},n}();var un=P,dn=0,fn=function(){this.id=dn++,this.subs=[]};fn.prototype.addSub=function(n){this.subs.push(n)},fn.prototype.removeSub=function(n){x(this.subs,n)},fn.prototype.depend=function(){fn.target&&fn.target.addDep(this)},fn.prototype.notify=function(){var n=this.subs.slice();for(var e=0,t=n.length;e<t;e++)n[e].update()},fn.target=null;var gn=[];function mn(n){gn.push(n),fn.target=n}function hn(){gn.pop(),fn.target=gn[gn.length-1]}var vn=function(n,e,t,r,o,i,a,s){this.tag=n,this.data=e,this.children=t,this.text=r,this.elm=o,this.ns=void 0,this.context=i,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=e&&e.key,this.componentOptions=a,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},bn={child:{configurable:!0}};bn.child.get=function(){return this.componentInstance},Object.defineProperties(vn.prototype,bn);var yn=function(n){void 0===n&&(n="");var e=new vn;return e.text=n,e.isComment=!0,e};function xn(n){return new vn(void 0,void 0,void 0,String(n))}function Sn(n){var e=new vn(n.tag,n.data,n.children&&n.children.slice(),n.text,n.elm,n.context,n.componentOptions,n.asyncFactory);return e.ns=n.ns,e.isStatic=n.isStatic,e.key=n.key,e.isComment=n.isComment,e.fnContext=n.fnContext,e.fnOptions=n.fnOptions,e.fnScopeId=n.fnScopeId,e.asyncMeta=n.asyncMeta,e.isCloned=!0,e}var _n=Array.prototype,wn=Object.create(_n);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(n){var e=_n[n];U(wn,n,(function(){for(var t=[],r=arguments.length;r--;)t[r]=arguments[r];var o,i=e.apply(this,t),a=this.__ob__;switch(n){case"push":case"unshift":o=t;break;case"splice":o=t.slice(2)}return o&&a.observeArray(o),a.dep.notify(),i}))}));var jn=Object.getOwnPropertyNames(wn),Cn=!0;function kn(n){Cn=n}var En=function(n){this.value=n,this.dep=new fn,this.vmCount=0,U(n,"__ob__",this),Array.isArray(n)?(W?function(n,e){n.__proto__=e}(n,wn):function(n,e,t){for(var r=0,o=t.length;r<o;r++){var i=t[r];U(n,i,e[i])}}(n,wn,jn),this.observeArray(n)):this.walk(n)};function Bn(n,e){var t;if(p(n)&&!(n instanceof vn))return _(n,"__ob__")&&n.__ob__ instanceof En?t=n.__ob__:Cn&&!an()&&(Array.isArray(n)||d(n))&&Object.isExtensible(n)&&!n._isVue&&(t=new En(n)),e&&t&&t.vmCount++,t}function An(n,e,t,r,o){var i=new fn,a=Object.getOwnPropertyDescriptor(n,e);if(!a||!1!==a.configurable){var s=a&&a.get,c=a&&a.set;s&&!c||2!==arguments.length||(t=n[e]);var l=!o&&Bn(t);Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){var e=s?s.call(n):t;return fn.target&&(i.depend(),l&&(l.dep.depend(),Array.isArray(e)&&On(e))),e},set:function(e){var r=s?s.call(n):t;e===r||e!=e&&r!=r||s&&!c||(c?c.call(n,e):t=e,l=!o&&Bn(e),i.notify())}})}}function Tn(n,e,t){if(Array.isArray(n)&&g(e))return n.length=Math.max(n.length,e),n.splice(e,1,t),t;if(e in n&&!(e in Object.prototype))return n[e]=t,t;var r=n.__ob__;return n._isVue||r&&r.vmCount?t:r?(An(r.value,e,t),r.dep.notify(),t):(n[e]=t,t)}function In(n,e){if(Array.isArray(n)&&g(e))n.splice(e,1);else{var t=n.__ob__;n._isVue||t&&t.vmCount||_(n,e)&&(delete n[e],t&&t.dep.notify())}}function On(n){for(var e=void 0,t=0,r=n.length;t<r;t++)(e=n[t])&&e.__ob__&&e.__ob__.dep.depend(),Array.isArray(e)&&On(e)}En.prototype.walk=function(n){for(var e=Object.keys(n),t=0;t<e.length;t++)An(n,e[t])},En.prototype.observeArray=function(n){for(var e=0,t=n.length;e<t;e++)Bn(n[e])};var Pn=F.optionMergeStrategies;function Mn(n,e){if(!e)return n;for(var t,r,o,i=pn?Reflect.ownKeys(e):Object.keys(e),a=0;a<i.length;a++)"__ob__"!==(t=i[a])&&(r=n[t],o=e[t],_(n,t)?r!==o&&d(r)&&d(o)&&Mn(r,o):Tn(n,t,o));return n}function Ln(n,e,t){return t?function(){var r="function"==typeof e?e.call(t,t):e,o="function"==typeof n?n.call(t,t):n;return r?Mn(r,o):o}:e?n?function(){return Mn("function"==typeof e?e.call(this,this):e,"function"==typeof n?n.call(this,this):n)}:e:n}function zn(n,e){var t=e?n?n.concat(e):Array.isArray(e)?e:[e]:n;return t?function(n){for(var e=[],t=0;t<n.length;t++)-1===e.indexOf(n[t])&&e.push(n[t]);return e}(t):t}function Rn(n,e,t,r){var o=Object.create(n||null);return e?I(o,e):o}Pn.data=function(n,e,t){return t?Ln(n,e,t):e&&"function"!=typeof e?n:Ln(n,e)},N.forEach((function(n){Pn[n]=zn})),$.forEach((function(n){Pn[n+"s"]=Rn})),Pn.watch=function(n,e,t,r){if(n===tn&&(n=void 0),e===tn&&(e=void 0),!e)return Object.create(n||null);if(!n)return e;var o={};for(var i in I(o,n),e){var a=o[i],s=e[i];a&&!Array.isArray(a)&&(a=[a]),o[i]=a?a.concat(s):Array.isArray(s)?s:[s]}return o},Pn.props=Pn.methods=Pn.inject=Pn.computed=function(n,e,t,r){if(!n)return e;var o=Object.create(null);return I(o,n),e&&I(o,e),o},Pn.provide=Ln;var Dn=function(n,e){return void 0===e?n:e};function $n(n,e,t){if("function"==typeof e&&(e=e.options),function(n,e){var t=n.props;if(t){var r,o,i={};if(Array.isArray(t))for(r=t.length;r--;)"string"==typeof(o=t[r])&&(i[C(o)]={type:null});else if(d(t))for(var a in t)o=t[a],i[C(a)]=d(o)?o:{type:o};else 0;n.props=i}}(e),function(n,e){var t=n.inject;if(t){var r=n.inject={};if(Array.isArray(t))for(var o=0;o<t.length;o++)r[t[o]]={from:t[o]};else if(d(t))for(var i in t){var a=t[i];r[i]=d(a)?I({from:i},a):{from:a}}else 0}}(e),function(n){var e=n.directives;if(e)for(var t in e){var r=e[t];"function"==typeof r&&(e[t]={bind:r,update:r})}}(e),!e._base&&(e.extends&&(n=$n(n,e.extends,t)),e.mixins))for(var r=0,o=e.mixins.length;r<o;r++)n=$n(n,e.mixins[r],t);var i,a={};for(i in n)s(i);for(i in e)_(n,i)||s(i);function s(r){var o=Pn[r]||Dn;a[r]=o(n[r],e[r],t,r)}return a}function Nn(n,e,t,r){if("string"==typeof t){var o=n[e];if(_(o,t))return o[t];var i=C(t);if(_(o,i))return o[i];var a=k(i);return _(o,a)?o[a]:o[t]||o[i]||o[a]}}function Fn(n,e,t,r){var o=e[n],i=!_(t,n),a=t[n],s=Hn(Boolean,o.type);if(s>-1)if(i&&!_(o,"default"))a=!1;else if(""===a||a===B(n)){var c=Hn(String,o.type);(c<0||s<c)&&(a=!0)}if(void 0===a){a=function(n,e,t){if(!_(e,"default"))return;var r=e.default;0;if(n&&n.$options.propsData&&void 0===n.$options.propsData[t]&&void 0!==n._props[t])return n._props[t];return"function"==typeof r&&"Function"!==Un(e.type)?r.call(n):r}(r,o,n);var l=Cn;kn(!0),Bn(a),kn(l)}return a}var Jn=/^\s*function (\w+)/;function Un(n){var e=n&&n.toString().match(Jn);return e?e[1]:""}function qn(n,e){return Un(n)===Un(e)}function Hn(n,e){if(!Array.isArray(e))return qn(e,n)?0:-1;for(var t=0,r=e.length;t<r;t++)if(qn(e[t],n))return t;return-1}function Wn(n,e,t){mn();try{if(e)for(var r=e;r=r.$parent;){var o=r.$options.errorCaptured;if(o)for(var i=0;i<o.length;i++)try{if(!1===o[i].call(r,n,e,t))return}catch(n){Gn(n,r,"errorCaptured hook")}}Gn(n,e,t)}finally{hn()}}function Vn(n,e,t,r,o){var i;try{(i=t?n.apply(e,t):n.call(e))&&!i._isVue&&m(i)&&!i._handled&&(i.catch((function(n){return Wn(n,r,o+" (Promise/async)")})),i._handled=!0)}catch(n){Wn(n,r,o)}return i}function Gn(n,e,t){if(F.errorHandler)try{return F.errorHandler.call(null,n,e,t)}catch(e){e!==n&&Xn(e,null,"config.errorHandler")}Xn(n,e,t)}function Xn(n,e,t){if(!V&&!G||"undefined"==typeof console)throw n;console.error(n)}var Yn,Kn=!1,Zn=[],Qn=!1;function ne(){Qn=!1;var n=Zn.slice(0);Zn.length=0;for(var e=0;e<n.length;e++)n[e]()}if("undefined"!=typeof Promise&&cn(Promise)){var ee=Promise.resolve();Yn=function(){ee.then(ne),nn&&setTimeout(P)},Kn=!0}else if(K||"undefined"==typeof MutationObserver||!cn(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Yn="undefined"!=typeof setImmediate&&cn(setImmediate)?function(){setImmediate(ne)}:function(){setTimeout(ne,0)};else{var te=1,re=new MutationObserver(ne),oe=document.createTextNode(String(te));re.observe(oe,{characterData:!0}),Yn=function(){te=(te+1)%2,oe.data=String(te)},Kn=!0}function ie(n,e){var t;if(Zn.push((function(){if(n)try{n.call(e)}catch(n){Wn(n,e,"nextTick")}else t&&t(e)})),Qn||(Qn=!0,Yn()),!n&&"undefined"!=typeof Promise)return new Promise((function(n){t=n}))}var ae=new ln;function se(n){!function n(e,t){var r,o,i=Array.isArray(e);if(!i&&!p(e)||Object.isFrozen(e)||e instanceof vn)return;if(e.__ob__){var a=e.__ob__.dep.id;if(t.has(a))return;t.add(a)}if(i)for(r=e.length;r--;)n(e[r],t);else for(o=Object.keys(e),r=o.length;r--;)n(e[o[r]],t)}(n,ae),ae.clear()}var ce=w((function(n){var e="&"===n.charAt(0),t="~"===(n=e?n.slice(1):n).charAt(0),r="!"===(n=t?n.slice(1):n).charAt(0);return{name:n=r?n.slice(1):n,once:t,capture:r,passive:e}}));function le(n,e){function t(){var n=arguments,r=t.fns;if(!Array.isArray(r))return Vn(r,null,arguments,e,"v-on handler");for(var o=r.slice(),i=0;i<o.length;i++)Vn(o[i],null,n,e,"v-on handler")}return t.fns=n,t}function pe(n,e,t,r,o,i){var s,l,p,u;for(s in n)l=n[s],p=e[s],u=ce(s),a(l)||(a(p)?(a(l.fns)&&(l=n[s]=le(l,i)),c(u.once)&&(l=n[s]=o(u.name,l,u.capture)),t(u.name,l,u.capture,u.passive,u.params)):l!==p&&(p.fns=l,n[s]=p));for(s in e)a(n[s])&&r((u=ce(s)).name,e[s],u.capture)}function ue(n,e,t){var r;n instanceof vn&&(n=n.data.hook||(n.data.hook={}));var o=n[e];function i(){t.apply(this,arguments),x(r.fns,i)}a(o)?r=le([i]):s(o.fns)&&c(o.merged)?(r=o).fns.push(i):r=le([o,i]),r.merged=!0,n[e]=r}function de(n,e,t,r,o){if(s(e)){if(_(e,t))return n[t]=e[t],o||delete e[t],!0;if(_(e,r))return n[t]=e[r],o||delete e[r],!0}return!1}function fe(n){return l(n)?[xn(n)]:Array.isArray(n)?function n(e,t){var r,o,i,p,u=[];for(r=0;r<e.length;r++)a(o=e[r])||"boolean"==typeof o||(i=u.length-1,p=u[i],Array.isArray(o)?o.length>0&&(ge((o=n(o,(t||"")+"_"+r))[0])&&ge(p)&&(u[i]=xn(p.text+o[0].text),o.shift()),u.push.apply(u,o)):l(o)?ge(p)?u[i]=xn(p.text+o):""!==o&&u.push(xn(o)):ge(o)&&ge(p)?u[i]=xn(p.text+o.text):(c(e._isVList)&&s(o.tag)&&a(o.key)&&s(t)&&(o.key="__vlist"+t+"_"+r+"__"),u.push(o)));return u}(n):void 0}function ge(n){return s(n)&&s(n.text)&&!1===n.isComment}function me(n,e){if(n){for(var t=Object.create(null),r=pn?Reflect.ownKeys(n):Object.keys(n),o=0;o<r.length;o++){var i=r[o];if("__ob__"!==i){for(var a=n[i].from,s=e;s;){if(s._provided&&_(s._provided,a)){t[i]=s._provided[a];break}s=s.$parent}if(!s)if("default"in n[i]){var c=n[i].default;t[i]="function"==typeof c?c.call(e):c}else 0}}return t}}function he(n,e){if(!n||!n.length)return{};for(var t={},r=0,o=n.length;r<o;r++){var i=n[r],a=i.data;if(a&&a.attrs&&a.attrs.slot&&delete a.attrs.slot,i.context!==e&&i.fnContext!==e||!a||null==a.slot)(t.default||(t.default=[])).push(i);else{var s=a.slot,c=t[s]||(t[s]=[]);"template"===i.tag?c.push.apply(c,i.children||[]):c.push(i)}}for(var l in t)t[l].every(ve)&&delete t[l];return t}function ve(n){return n.isComment&&!n.asyncFactory||" "===n.text}function be(n){return n.isComment&&n.asyncFactory}function ye(n,e,t){var r,o=Object.keys(e).length>0,a=n?!!n.$stable:!o,s=n&&n.$key;if(n){if(n._normalized)return n._normalized;if(a&&t&&t!==i&&s===t.$key&&!o&&!t.$hasNormal)return t;for(var c in r={},n)n[c]&&"$"!==c[0]&&(r[c]=xe(e,c,n[c]))}else r={};for(var l in e)l in r||(r[l]=Se(e,l));return n&&Object.isExtensible(n)&&(n._normalized=r),U(r,"$stable",a),U(r,"$key",s),U(r,"$hasNormal",o),r}function xe(n,e,t){var r=function(){var n=arguments.length?t.apply(null,arguments):t({}),e=(n=n&&"object"==typeof n&&!Array.isArray(n)?[n]:fe(n))&&n[0];return n&&(!e||1===n.length&&e.isComment&&!be(e))?void 0:n};return t.proxy&&Object.defineProperty(n,e,{get:r,enumerable:!0,configurable:!0}),r}function Se(n,e){return function(){return n[e]}}function _e(n,e){var t,r,o,i,a;if(Array.isArray(n)||"string"==typeof n)for(t=new Array(n.length),r=0,o=n.length;r<o;r++)t[r]=e(n[r],r);else if("number"==typeof n)for(t=new Array(n),r=0;r<n;r++)t[r]=e(r+1,r);else if(p(n))if(pn&&n[Symbol.iterator]){t=[];for(var c=n[Symbol.iterator](),l=c.next();!l.done;)t.push(e(l.value,t.length)),l=c.next()}else for(i=Object.keys(n),t=new Array(i.length),r=0,o=i.length;r<o;r++)a=i[r],t[r]=e(n[a],a,r);return s(t)||(t=[]),t._isVList=!0,t}function we(n,e,t,r){var o,i=this.$scopedSlots[n];i?(t=t||{},r&&(t=I(I({},r),t)),o=i(t)||("function"==typeof e?e():e)):o=this.$slots[n]||("function"==typeof e?e():e);var a=t&&t.slot;return a?this.$createElement("template",{slot:a},o):o}function je(n){return Nn(this.$options,"filters",n)||L}function Ce(n,e){return Array.isArray(n)?-1===n.indexOf(e):n!==e}function ke(n,e,t,r,o){var i=F.keyCodes[e]||t;return o&&r&&!F.keyCodes[e]?Ce(o,r):i?Ce(i,n):r?B(r)!==e:void 0===n}function Ee(n,e,t,r,o){if(t)if(p(t)){var i;Array.isArray(t)&&(t=O(t));var a=function(a){if("class"===a||"style"===a||y(a))i=n;else{var s=n.attrs&&n.attrs.type;i=r||F.mustUseProp(e,s,a)?n.domProps||(n.domProps={}):n.attrs||(n.attrs={})}var c=C(a),l=B(a);c in i||l in i||(i[a]=t[a],o&&((n.on||(n.on={}))["update:"+a]=function(n){t[a]=n}))};for(var s in t)a(s)}else;return n}function Be(n,e){var t=this._staticTrees||(this._staticTrees=[]),r=t[n];return r&&!e||Te(r=t[n]=this.$options.staticRenderFns[n].call(this._renderProxy,null,this),"__static__"+n,!1),r}function Ae(n,e,t){return Te(n,"__once__"+e+(t?"_"+t:""),!0),n}function Te(n,e,t){if(Array.isArray(n))for(var r=0;r<n.length;r++)n[r]&&"string"!=typeof n[r]&&Ie(n[r],e+"_"+r,t);else Ie(n,e,t)}function Ie(n,e,t){n.isStatic=!0,n.key=e,n.isOnce=t}function Oe(n,e){if(e)if(d(e)){var t=n.on=n.on?I({},n.on):{};for(var r in e){var o=t[r],i=e[r];t[r]=o?[].concat(o,i):i}}else;return n}function Pe(n,e,t,r){e=e||{$stable:!t};for(var o=0;o<n.length;o++){var i=n[o];Array.isArray(i)?Pe(i,e,t):i&&(i.proxy&&(i.fn.proxy=!0),e[i.key]=i.fn)}return r&&(e.$key=r),e}function Me(n,e){for(var t=0;t<e.length;t+=2){var r=e[t];"string"==typeof r&&r&&(n[e[t]]=e[t+1])}return n}function Le(n,e){return"string"==typeof n?e+n:n}function ze(n){n._o=Ae,n._n=v,n._s=h,n._l=_e,n._t=we,n._q=z,n._i=R,n._m=Be,n._f=je,n._k=ke,n._b=Ee,n._v=xn,n._e=yn,n._u=Pe,n._g=Oe,n._d=Me,n._p=Le}function Re(n,e,t,r,o){var a,s=this,l=o.options;_(r,"_uid")?(a=Object.create(r))._original=r:(a=r,r=r._original);var p=c(l._compiled),u=!p;this.data=n,this.props=e,this.children=t,this.parent=r,this.listeners=n.on||i,this.injections=me(l.inject,r),this.slots=function(){return s.$slots||ye(n.scopedSlots,s.$slots=he(t,r)),s.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return ye(n.scopedSlots,this.slots())}}),p&&(this.$options=l,this.$slots=this.slots(),this.$scopedSlots=ye(n.scopedSlots,this.$slots)),l._scopeId?this._c=function(n,e,t,o){var i=qe(a,n,e,t,o,u);return i&&!Array.isArray(i)&&(i.fnScopeId=l._scopeId,i.fnContext=r),i}:this._c=function(n,e,t,r){return qe(a,n,e,t,r,u)}}function De(n,e,t,r,o){var i=Sn(n);return i.fnContext=t,i.fnOptions=r,e.slot&&((i.data||(i.data={})).slot=e.slot),i}function $e(n,e){for(var t in e)n[C(t)]=e[t]}ze(Re.prototype);var Ne={init:function(n,e){if(n.componentInstance&&!n.componentInstance._isDestroyed&&n.data.keepAlive){var t=n;Ne.prepatch(t,t)}else{(n.componentInstance=function(n,e){var t={_isComponent:!0,_parentVnode:n,parent:e},r=n.data.inlineTemplate;s(r)&&(t.render=r.render,t.staticRenderFns=r.staticRenderFns);return new n.componentOptions.Ctor(t)}(n,Qe)).$mount(e?n.elm:void 0,e)}},prepatch:function(n,e){var t=e.componentOptions;!function(n,e,t,r,o){0;var a=r.data.scopedSlots,s=n.$scopedSlots,c=!!(a&&!a.$stable||s!==i&&!s.$stable||a&&n.$scopedSlots.$key!==a.$key||!a&&n.$scopedSlots.$key),l=!!(o||n.$options._renderChildren||c);n.$options._parentVnode=r,n.$vnode=r,n._vnode&&(n._vnode.parent=r);if(n.$options._renderChildren=o,n.$attrs=r.data.attrs||i,n.$listeners=t||i,e&&n.$options.props){kn(!1);for(var p=n._props,u=n.$options._propKeys||[],d=0;d<u.length;d++){var f=u[d],g=n.$options.props;p[f]=Fn(f,g,e,n)}kn(!0),n.$options.propsData=e}t=t||i;var m=n.$options._parentListeners;n.$options._parentListeners=t,Ze(n,t,m),l&&(n.$slots=he(o,r.context),n.$forceUpdate());0}(e.componentInstance=n.componentInstance,t.propsData,t.listeners,e,t.children)},insert:function(n){var e,t=n.context,r=n.componentInstance;r._isMounted||(r._isMounted=!0,rt(r,"mounted")),n.data.keepAlive&&(t._isMounted?((e=r)._inactive=!1,it.push(e)):tt(r,!0))},destroy:function(n){var e=n.componentInstance;e._isDestroyed||(n.data.keepAlive?function n(e,t){if(t&&(e._directInactive=!0,et(e)))return;if(!e._inactive){e._inactive=!0;for(var r=0;r<e.$children.length;r++)n(e.$children[r]);rt(e,"deactivated")}}(e,!0):e.$destroy())}},Fe=Object.keys(Ne);function Je(n,e,t,r,o){if(!a(n)){var l=t.$options._base;if(p(n)&&(n=l.extend(n)),"function"==typeof n){var u;if(a(n.cid)&&void 0===(n=function(n,e){if(c(n.error)&&s(n.errorComp))return n.errorComp;if(s(n.resolved))return n.resolved;var t=We;t&&s(n.owners)&&-1===n.owners.indexOf(t)&&n.owners.push(t);if(c(n.loading)&&s(n.loadingComp))return n.loadingComp;if(t&&!s(n.owners)){var r=n.owners=[t],o=!0,i=null,l=null;t.$on("hook:destroyed",(function(){return x(r,t)}));var u=function(n){for(var e=0,t=r.length;e<t;e++)r[e].$forceUpdate();n&&(r.length=0,null!==i&&(clearTimeout(i),i=null),null!==l&&(clearTimeout(l),l=null))},d=D((function(t){n.resolved=Ve(t,e),o?r.length=0:u(!0)})),f=D((function(e){s(n.errorComp)&&(n.error=!0,u(!0))})),g=n(d,f);return p(g)&&(m(g)?a(n.resolved)&&g.then(d,f):m(g.component)&&(g.component.then(d,f),s(g.error)&&(n.errorComp=Ve(g.error,e)),s(g.loading)&&(n.loadingComp=Ve(g.loading,e),0===g.delay?n.loading=!0:i=setTimeout((function(){i=null,a(n.resolved)&&a(n.error)&&(n.loading=!0,u(!1))}),g.delay||200)),s(g.timeout)&&(l=setTimeout((function(){l=null,a(n.resolved)&&f(null)}),g.timeout)))),o=!1,n.loading?n.loadingComp:n.resolved}}(u=n,l)))return function(n,e,t,r,o){var i=yn();return i.asyncFactory=n,i.asyncMeta={data:e,context:t,children:r,tag:o},i}(u,e,t,r,o);e=e||{},Ct(n),s(e.model)&&function(n,e){var t=n.model&&n.model.prop||"value",r=n.model&&n.model.event||"input";(e.attrs||(e.attrs={}))[t]=e.model.value;var o=e.on||(e.on={}),i=o[r],a=e.model.callback;s(i)?(Array.isArray(i)?-1===i.indexOf(a):i!==a)&&(o[r]=[a].concat(i)):o[r]=a}(n.options,e);var d=function(n,e,t){var r=e.options.props;if(!a(r)){var o={},i=n.attrs,c=n.props;if(s(i)||s(c))for(var l in r){var p=B(l);de(o,c,l,p,!0)||de(o,i,l,p,!1)}return o}}(e,n);if(c(n.options.functional))return function(n,e,t,r,o){var a=n.options,c={},l=a.props;if(s(l))for(var p in l)c[p]=Fn(p,l,e||i);else s(t.attrs)&&$e(c,t.attrs),s(t.props)&&$e(c,t.props);var u=new Re(t,c,o,r,n),d=a.render.call(null,u._c,u);if(d instanceof vn)return De(d,t,u.parent,a,u);if(Array.isArray(d)){for(var f=fe(d)||[],g=new Array(f.length),m=0;m<f.length;m++)g[m]=De(f[m],t,u.parent,a,u);return g}}(n,d,e,t,r);var f=e.on;if(e.on=e.nativeOn,c(n.options.abstract)){var g=e.slot;e={},g&&(e.slot=g)}!function(n){for(var e=n.hook||(n.hook={}),t=0;t<Fe.length;t++){var r=Fe[t],o=e[r],i=Ne[r];o===i||o&&o._merged||(e[r]=o?Ue(i,o):i)}}(e);var h=n.options.name||o;return new vn("vue-component-"+n.cid+(h?"-"+h:""),e,void 0,void 0,void 0,t,{Ctor:n,propsData:d,listeners:f,tag:o,children:r},u)}}}function Ue(n,e){var t=function(t,r){n(t,r),e(t,r)};return t._merged=!0,t}function qe(n,e,t,r,o,i){return(Array.isArray(t)||l(t))&&(o=r,r=t,t=void 0),c(i)&&(o=2),function(n,e,t,r,o){if(s(t)&&s(t.__ob__))return yn();s(t)&&s(t.is)&&(e=t.is);if(!e)return yn();0;Array.isArray(r)&&"function"==typeof r[0]&&((t=t||{}).scopedSlots={default:r[0]},r.length=0);2===o?r=fe(r):1===o&&(r=function(n){for(var e=0;e<n.length;e++)if(Array.isArray(n[e]))return Array.prototype.concat.apply([],n);return n}(r));var i,l;if("string"==typeof e){var u;l=n.$vnode&&n.$vnode.ns||F.getTagNamespace(e),i=F.isReservedTag(e)?new vn(F.parsePlatformTagName(e),t,r,void 0,void 0,n):t&&t.pre||!s(u=Nn(n.$options,"components",e))?new vn(e,t,r,void 0,void 0,n):Je(u,t,n,r,e)}else i=Je(e,t,n,r);return Array.isArray(i)?i:s(i)?(s(l)&&function n(e,t,r){e.ns=t,"foreignObject"===e.tag&&(t=void 0,r=!0);if(s(e.children))for(var o=0,i=e.children.length;o<i;o++){var l=e.children[o];s(l.tag)&&(a(l.ns)||c(r)&&"svg"!==l.tag)&&n(l,t,r)}}(i,l),s(t)&&function(n){p(n.style)&&se(n.style);p(n.class)&&se(n.class)}(t),i):yn()}(n,e,t,r,o)}var He,We=null;function Ve(n,e){return(n.__esModule||pn&&"Module"===n[Symbol.toStringTag])&&(n=n.default),p(n)?e.extend(n):n}function Ge(n){if(Array.isArray(n))for(var e=0;e<n.length;e++){var t=n[e];if(s(t)&&(s(t.componentOptions)||be(t)))return t}}function Xe(n,e){He.$on(n,e)}function Ye(n,e){He.$off(n,e)}function Ke(n,e){var t=He;return function r(){var o=e.apply(null,arguments);null!==o&&t.$off(n,r)}}function Ze(n,e,t){He=n,pe(e,t||{},Xe,Ye,Ke,n),He=void 0}var Qe=null;function nt(n){var e=Qe;return Qe=n,function(){Qe=e}}function et(n){for(;n&&(n=n.$parent);)if(n._inactive)return!0;return!1}function tt(n,e){if(e){if(n._directInactive=!1,et(n))return}else if(n._directInactive)return;if(n._inactive||null===n._inactive){n._inactive=!1;for(var t=0;t<n.$children.length;t++)tt(n.$children[t]);rt(n,"activated")}}function rt(n,e){mn();var t=n.$options[e],r=e+" hook";if(t)for(var o=0,i=t.length;o<i;o++)Vn(t[o],n,null,n,r);n._hasHookEvent&&n.$emit("hook:"+e),hn()}var ot=[],it=[],at={},st=!1,ct=!1,lt=0;var pt=0,ut=Date.now;if(V&&!K){var dt=window.performance;dt&&"function"==typeof dt.now&&ut()>document.createEvent("Event").timeStamp&&(ut=function(){return dt.now()})}function ft(){var n,e;for(pt=ut(),ct=!0,ot.sort((function(n,e){return n.id-e.id})),lt=0;lt<ot.length;lt++)(n=ot[lt]).before&&n.before(),e=n.id,at[e]=null,n.run();var t=it.slice(),r=ot.slice();lt=ot.length=it.length=0,at={},st=ct=!1,function(n){for(var e=0;e<n.length;e++)n[e]._inactive=!0,tt(n[e],!0)}(t),function(n){var e=n.length;for(;e--;){var t=n[e],r=t.vm;r._watcher===t&&r._isMounted&&!r._isDestroyed&&rt(r,"updated")}}(r),sn&&F.devtools&&sn.emit("flush")}var gt=0,mt=function(n,e,t,r,o){this.vm=n,o&&(n._watcher=this),n._watchers.push(this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync,this.before=r.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=t,this.id=++gt,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new ln,this.newDepIds=new ln,this.expression="","function"==typeof e?this.getter=e:(this.getter=function(n){if(!q.test(n)){var e=n.split(".");return function(n){for(var t=0;t<e.length;t++){if(!n)return;n=n[e[t]]}return n}}}(e),this.getter||(this.getter=P)),this.value=this.lazy?void 0:this.get()};mt.prototype.get=function(){var n;mn(this);var e=this.vm;try{n=this.getter.call(e,e)}catch(n){if(!this.user)throw n;Wn(n,e,'getter for watcher "'+this.expression+'"')}finally{this.deep&&se(n),hn(),this.cleanupDeps()}return n},mt.prototype.addDep=function(n){var e=n.id;this.newDepIds.has(e)||(this.newDepIds.add(e),this.newDeps.push(n),this.depIds.has(e)||n.addSub(this))},mt.prototype.cleanupDeps=function(){for(var n=this.deps.length;n--;){var e=this.deps[n];this.newDepIds.has(e.id)||e.removeSub(this)}var t=this.depIds;this.depIds=this.newDepIds,this.newDepIds=t,this.newDepIds.clear(),t=this.deps,this.deps=this.newDeps,this.newDeps=t,this.newDeps.length=0},mt.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(n){var e=n.id;if(null==at[e]){if(at[e]=!0,ct){for(var t=ot.length-1;t>lt&&ot[t].id>n.id;)t--;ot.splice(t+1,0,n)}else ot.push(n);st||(st=!0,ie(ft))}}(this)},mt.prototype.run=function(){if(this.active){var n=this.get();if(n!==this.value||p(n)||this.deep){var e=this.value;if(this.value=n,this.user){var t='callback for watcher "'+this.expression+'"';Vn(this.cb,this.vm,[n,e],this.vm,t)}else this.cb.call(this.vm,n,e)}}},mt.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},mt.prototype.depend=function(){for(var n=this.deps.length;n--;)this.deps[n].depend()},mt.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||x(this.vm._watchers,this);for(var n=this.deps.length;n--;)this.deps[n].removeSub(this);this.active=!1}};var ht={enumerable:!0,configurable:!0,get:P,set:P};function vt(n,e,t){ht.get=function(){return this[e][t]},ht.set=function(n){this[e][t]=n},Object.defineProperty(n,t,ht)}function bt(n){n._watchers=[];var e=n.$options;e.props&&function(n,e){var t=n.$options.propsData||{},r=n._props={},o=n.$options._propKeys=[];n.$parent&&kn(!1);var i=function(i){o.push(i);var a=Fn(i,e,t,n);An(r,i,a),i in n||vt(n,"_props",i)};for(var a in e)i(a);kn(!0)}(n,e.props),e.methods&&function(n,e){n.$options.props;for(var t in e)n[t]="function"!=typeof e[t]?P:A(e[t],n)}(n,e.methods),e.data?function(n){var e=n.$options.data;d(e=n._data="function"==typeof e?function(n,e){mn();try{return n.call(e,e)}catch(n){return Wn(n,e,"data()"),{}}finally{hn()}}(e,n):e||{})||(e={});var t=Object.keys(e),r=n.$options.props,o=(n.$options.methods,t.length);for(;o--;){var i=t[o];0,r&&_(r,i)||(a=void 0,36!==(a=(i+"").charCodeAt(0))&&95!==a&&vt(n,"_data",i))}var a;Bn(e,!0)}(n):Bn(n._data={},!0),e.computed&&function(n,e){var t=n._computedWatchers=Object.create(null),r=an();for(var o in e){var i=e[o],a="function"==typeof i?i:i.get;0,r||(t[o]=new mt(n,a||P,P,yt)),o in n||xt(n,o,i)}}(n,e.computed),e.watch&&e.watch!==tn&&function(n,e){for(var t in e){var r=e[t];if(Array.isArray(r))for(var o=0;o<r.length;o++)wt(n,t,r[o]);else wt(n,t,r)}}(n,e.watch)}var yt={lazy:!0};function xt(n,e,t){var r=!an();"function"==typeof t?(ht.get=r?St(e):_t(t),ht.set=P):(ht.get=t.get?r&&!1!==t.cache?St(e):_t(t.get):P,ht.set=t.set||P),Object.defineProperty(n,e,ht)}function St(n){return function(){var e=this._computedWatchers&&this._computedWatchers[n];if(e)return e.dirty&&e.evaluate(),fn.target&&e.depend(),e.value}}function _t(n){return function(){return n.call(this,this)}}function wt(n,e,t,r){return d(t)&&(r=t,t=t.handler),"string"==typeof t&&(t=n[t]),n.$watch(e,t,r)}var jt=0;function Ct(n){var e=n.options;if(n.super){var t=Ct(n.super);if(t!==n.superOptions){n.superOptions=t;var r=function(n){var e,t=n.options,r=n.sealedOptions;for(var o in t)t[o]!==r[o]&&(e||(e={}),e[o]=t[o]);return e}(n);r&&I(n.extendOptions,r),(e=n.options=$n(t,n.extendOptions)).name&&(e.components[e.name]=n)}}return e}function kt(n){this._init(n)}function Et(n){n.cid=0;var e=1;n.extend=function(n){n=n||{};var t=this,r=t.cid,o=n._Ctor||(n._Ctor={});if(o[r])return o[r];var i=n.name||t.options.name;var a=function(n){this._init(n)};return(a.prototype=Object.create(t.prototype)).constructor=a,a.cid=e++,a.options=$n(t.options,n),a.super=t,a.options.props&&function(n){var e=n.options.props;for(var t in e)vt(n.prototype,"_props",t)}(a),a.options.computed&&function(n){var e=n.options.computed;for(var t in e)xt(n.prototype,t,e[t])}(a),a.extend=t.extend,a.mixin=t.mixin,a.use=t.use,$.forEach((function(n){a[n]=t[n]})),i&&(a.options.components[i]=a),a.superOptions=t.options,a.extendOptions=n,a.sealedOptions=I({},a.options),o[r]=a,a}}function Bt(n){return n&&(n.Ctor.options.name||n.tag)}function At(n,e){return Array.isArray(n)?n.indexOf(e)>-1:"string"==typeof n?n.split(",").indexOf(e)>-1:!!f(n)&&n.test(e)}function Tt(n,e){var t=n.cache,r=n.keys,o=n._vnode;for(var i in t){var a=t[i];if(a){var s=a.name;s&&!e(s)&&It(t,i,r,o)}}}function It(n,e,t,r){var o=n[e];!o||r&&o.tag===r.tag||o.componentInstance.$destroy(),n[e]=null,x(t,e)}!function(n){n.prototype._init=function(n){var e=this;e._uid=jt++,e._isVue=!0,n&&n._isComponent?function(n,e){var t=n.$options=Object.create(n.constructor.options),r=e._parentVnode;t.parent=e.parent,t._parentVnode=r;var o=r.componentOptions;t.propsData=o.propsData,t._parentListeners=o.listeners,t._renderChildren=o.children,t._componentTag=o.tag,e.render&&(t.render=e.render,t.staticRenderFns=e.staticRenderFns)}(e,n):e.$options=$n(Ct(e.constructor),n||{},e),e._renderProxy=e,e._self=e,function(n){var e=n.$options,t=e.parent;if(t&&!e.abstract){for(;t.$options.abstract&&t.$parent;)t=t.$parent;t.$children.push(n)}n.$parent=t,n.$root=t?t.$root:n,n.$children=[],n.$refs={},n._watcher=null,n._inactive=null,n._directInactive=!1,n._isMounted=!1,n._isDestroyed=!1,n._isBeingDestroyed=!1}(e),function(n){n._events=Object.create(null),n._hasHookEvent=!1;var e=n.$options._parentListeners;e&&Ze(n,e)}(e),function(n){n._vnode=null,n._staticTrees=null;var e=n.$options,t=n.$vnode=e._parentVnode,r=t&&t.context;n.$slots=he(e._renderChildren,r),n.$scopedSlots=i,n._c=function(e,t,r,o){return qe(n,e,t,r,o,!1)},n.$createElement=function(e,t,r,o){return qe(n,e,t,r,o,!0)};var o=t&&t.data;An(n,"$attrs",o&&o.attrs||i,null,!0),An(n,"$listeners",e._parentListeners||i,null,!0)}(e),rt(e,"beforeCreate"),function(n){var e=me(n.$options.inject,n);e&&(kn(!1),Object.keys(e).forEach((function(t){An(n,t,e[t])})),kn(!0))}(e),bt(e),function(n){var e=n.$options.provide;e&&(n._provided="function"==typeof e?e.call(n):e)}(e),rt(e,"created"),e.$options.el&&e.$mount(e.$options.el)}}(kt),function(n){var e={get:function(){return this._data}},t={get:function(){return this._props}};Object.defineProperty(n.prototype,"$data",e),Object.defineProperty(n.prototype,"$props",t),n.prototype.$set=Tn,n.prototype.$delete=In,n.prototype.$watch=function(n,e,t){if(d(e))return wt(this,n,e,t);(t=t||{}).user=!0;var r=new mt(this,n,e,t);if(t.immediate){var o='callback for immediate watcher "'+r.expression+'"';mn(),Vn(e,this,[r.value],this,o),hn()}return function(){r.teardown()}}}(kt),function(n){var e=/^hook:/;n.prototype.$on=function(n,t){var r=this;if(Array.isArray(n))for(var o=0,i=n.length;o<i;o++)r.$on(n[o],t);else(r._events[n]||(r._events[n]=[])).push(t),e.test(n)&&(r._hasHookEvent=!0);return r},n.prototype.$once=function(n,e){var t=this;function r(){t.$off(n,r),e.apply(t,arguments)}return r.fn=e,t.$on(n,r),t},n.prototype.$off=function(n,e){var t=this;if(!arguments.length)return t._events=Object.create(null),t;if(Array.isArray(n)){for(var r=0,o=n.length;r<o;r++)t.$off(n[r],e);return t}var i,a=t._events[n];if(!a)return t;if(!e)return t._events[n]=null,t;for(var s=a.length;s--;)if((i=a[s])===e||i.fn===e){a.splice(s,1);break}return t},n.prototype.$emit=function(n){var e=this,t=e._events[n];if(t){t=t.length>1?T(t):t;for(var r=T(arguments,1),o='event handler for "'+n+'"',i=0,a=t.length;i<a;i++)Vn(t[i],e,r,e,o)}return e}}(kt),function(n){n.prototype._update=function(n,e){var t=this,r=t.$el,o=t._vnode,i=nt(t);t._vnode=n,t.$el=o?t.__patch__(o,n):t.__patch__(t.$el,n,e,!1),i(),r&&(r.__vue__=null),t.$el&&(t.$el.__vue__=t),t.$vnode&&t.$parent&&t.$vnode===t.$parent._vnode&&(t.$parent.$el=t.$el)},n.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},n.prototype.$destroy=function(){var n=this;if(!n._isBeingDestroyed){rt(n,"beforeDestroy"),n._isBeingDestroyed=!0;var e=n.$parent;!e||e._isBeingDestroyed||n.$options.abstract||x(e.$children,n),n._watcher&&n._watcher.teardown();for(var t=n._watchers.length;t--;)n._watchers[t].teardown();n._data.__ob__&&n._data.__ob__.vmCount--,n._isDestroyed=!0,n.__patch__(n._vnode,null),rt(n,"destroyed"),n.$off(),n.$el&&(n.$el.__vue__=null),n.$vnode&&(n.$vnode.parent=null)}}}(kt),function(n){ze(n.prototype),n.prototype.$nextTick=function(n){return ie(n,this)},n.prototype._render=function(){var n,e=this,t=e.$options,r=t.render,o=t._parentVnode;o&&(e.$scopedSlots=ye(o.data.scopedSlots,e.$slots,e.$scopedSlots)),e.$vnode=o;try{We=e,n=r.call(e._renderProxy,e.$createElement)}catch(t){Wn(t,e,"render"),n=e._vnode}finally{We=null}return Array.isArray(n)&&1===n.length&&(n=n[0]),n instanceof vn||(n=yn()),n.parent=o,n}}(kt);var Ot=[String,RegExp,Array],Pt={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:Ot,exclude:Ot,max:[String,Number]},methods:{cacheVNode:function(){var n=this.cache,e=this.keys,t=this.vnodeToCache,r=this.keyToCache;if(t){var o=t.tag,i=t.componentInstance,a=t.componentOptions;n[r]={name:Bt(a),tag:o,componentInstance:i},e.push(r),this.max&&e.length>parseInt(this.max)&&It(n,e[0],e,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var n in this.cache)It(this.cache,n,this.keys)},mounted:function(){var n=this;this.cacheVNode(),this.$watch("include",(function(e){Tt(n,(function(n){return At(e,n)}))})),this.$watch("exclude",(function(e){Tt(n,(function(n){return!At(e,n)}))}))},updated:function(){this.cacheVNode()},render:function(){var n=this.$slots.default,e=Ge(n),t=e&&e.componentOptions;if(t){var r=Bt(t),o=this.include,i=this.exclude;if(o&&(!r||!At(o,r))||i&&r&&At(i,r))return e;var a=this.cache,s=this.keys,c=null==e.key?t.Ctor.cid+(t.tag?"::"+t.tag:""):e.key;a[c]?(e.componentInstance=a[c].componentInstance,x(s,c),s.push(c)):(this.vnodeToCache=e,this.keyToCache=c),e.data.keepAlive=!0}return e||n&&n[0]}}};!function(n){var e={get:function(){return F}};Object.defineProperty(n,"config",e),n.util={warn:un,extend:I,mergeOptions:$n,defineReactive:An},n.set=Tn,n.delete=In,n.nextTick=ie,n.observable=function(n){return Bn(n),n},n.options=Object.create(null),$.forEach((function(e){n.options[e+"s"]=Object.create(null)})),n.options._base=n,I(n.options.components,Pt),function(n){n.use=function(n){var e=this._installedPlugins||(this._installedPlugins=[]);if(e.indexOf(n)>-1)return this;var t=T(arguments,1);return t.unshift(this),"function"==typeof n.install?n.install.apply(n,t):"function"==typeof n&&n.apply(null,t),e.push(n),this}}(n),function(n){n.mixin=function(n){return this.options=$n(this.options,n),this}}(n),Et(n),function(n){$.forEach((function(e){n[e]=function(n,t){return t?("component"===e&&d(t)&&(t.name=t.name||n,t=this.options._base.extend(t)),"directive"===e&&"function"==typeof t&&(t={bind:t,update:t}),this.options[e+"s"][n]=t,t):this.options[e+"s"][n]}}))}(n)}(kt),Object.defineProperty(kt.prototype,"$isServer",{get:an}),Object.defineProperty(kt.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(kt,"FunctionalRenderContext",{value:Re}),kt.version="2.6.14";var Mt=b("style,class"),Lt=b("input,textarea,option,select,progress"),zt=b("contenteditable,draggable,spellcheck"),Rt=b("events,caret,typing,plaintext-only"),Dt=b("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),$t="http://www.w3.org/1999/xlink",Nt=function(n){return":"===n.charAt(5)&&"xlink"===n.slice(0,5)},Ft=function(n){return Nt(n)?n.slice(6,n.length):""},Jt=function(n){return null==n||!1===n};function Ut(n){for(var e=n.data,t=n,r=n;s(r.componentInstance);)(r=r.componentInstance._vnode)&&r.data&&(e=qt(r.data,e));for(;s(t=t.parent);)t&&t.data&&(e=qt(e,t.data));return function(n,e){if(s(n)||s(e))return Ht(n,Wt(e));return""}(e.staticClass,e.class)}function qt(n,e){return{staticClass:Ht(n.staticClass,e.staticClass),class:s(n.class)?[n.class,e.class]:e.class}}function Ht(n,e){return n?e?n+" "+e:n:e||""}function Wt(n){return Array.isArray(n)?function(n){for(var e,t="",r=0,o=n.length;r<o;r++)s(e=Wt(n[r]))&&""!==e&&(t&&(t+=" "),t+=e);return t}(n):p(n)?function(n){var e="";for(var t in n)n[t]&&(e&&(e+=" "),e+=t);return e}(n):"string"==typeof n?n:""}var Vt={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Gt=b("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Xt=b("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Yt=function(n){return Gt(n)||Xt(n)};var Kt=Object.create(null);var Zt=b("text,number,password,search,email,tel,url");var Qt=Object.freeze({createElement:function(n,e){var t=document.createElement(n);return"select"!==n||e.data&&e.data.attrs&&void 0!==e.data.attrs.multiple&&t.setAttribute("multiple","multiple"),t},createElementNS:function(n,e){return document.createElementNS(Vt[n],e)},createTextNode:function(n){return document.createTextNode(n)},createComment:function(n){return document.createComment(n)},insertBefore:function(n,e,t){n.insertBefore(e,t)},removeChild:function(n,e){n.removeChild(e)},appendChild:function(n,e){n.appendChild(e)},parentNode:function(n){return n.parentNode},nextSibling:function(n){return n.nextSibling},tagName:function(n){return n.tagName},setTextContent:function(n,e){n.textContent=e},setStyleScope:function(n,e){n.setAttribute(e,"")}}),nr={create:function(n,e){er(e)},update:function(n,e){n.data.ref!==e.data.ref&&(er(n,!0),er(e))},destroy:function(n){er(n,!0)}};function er(n,e){var t=n.data.ref;if(s(t)){var r=n.context,o=n.componentInstance||n.elm,i=r.$refs;e?Array.isArray(i[t])?x(i[t],o):i[t]===o&&(i[t]=void 0):n.data.refInFor?Array.isArray(i[t])?i[t].indexOf(o)<0&&i[t].push(o):i[t]=[o]:i[t]=o}}var tr=new vn("",{},[]),rr=["create","activate","update","remove","destroy"];function or(n,e){return n.key===e.key&&n.asyncFactory===e.asyncFactory&&(n.tag===e.tag&&n.isComment===e.isComment&&s(n.data)===s(e.data)&&function(n,e){if("input"!==n.tag)return!0;var t,r=s(t=n.data)&&s(t=t.attrs)&&t.type,o=s(t=e.data)&&s(t=t.attrs)&&t.type;return r===o||Zt(r)&&Zt(o)}(n,e)||c(n.isAsyncPlaceholder)&&a(e.asyncFactory.error))}function ir(n,e,t){var r,o,i={};for(r=e;r<=t;++r)s(o=n[r].key)&&(i[o]=r);return i}var ar={create:sr,update:sr,destroy:function(n){sr(n,tr)}};function sr(n,e){(n.data.directives||e.data.directives)&&function(n,e){var t,r,o,i=n===tr,a=e===tr,s=lr(n.data.directives,n.context),c=lr(e.data.directives,e.context),l=[],p=[];for(t in c)r=s[t],o=c[t],r?(o.oldValue=r.value,o.oldArg=r.arg,ur(o,"update",e,n),o.def&&o.def.componentUpdated&&p.push(o)):(ur(o,"bind",e,n),o.def&&o.def.inserted&&l.push(o));if(l.length){var u=function(){for(var t=0;t<l.length;t++)ur(l[t],"inserted",e,n)};i?ue(e,"insert",u):u()}p.length&&ue(e,"postpatch",(function(){for(var t=0;t<p.length;t++)ur(p[t],"componentUpdated",e,n)}));if(!i)for(t in s)c[t]||ur(s[t],"unbind",n,n,a)}(n,e)}var cr=Object.create(null);function lr(n,e){var t,r,o=Object.create(null);if(!n)return o;for(t=0;t<n.length;t++)(r=n[t]).modifiers||(r.modifiers=cr),o[pr(r)]=r,r.def=Nn(e.$options,"directives",r.name);return o}function pr(n){return n.rawName||n.name+"."+Object.keys(n.modifiers||{}).join(".")}function ur(n,e,t,r,o){var i=n.def&&n.def[e];if(i)try{i(t.elm,n,t,r,o)}catch(r){Wn(r,t.context,"directive "+n.name+" "+e+" hook")}}var dr=[nr,ar];function fr(n,e){var t=e.componentOptions;if(!(s(t)&&!1===t.Ctor.options.inheritAttrs||a(n.data.attrs)&&a(e.data.attrs))){var r,o,i=e.elm,c=n.data.attrs||{},l=e.data.attrs||{};for(r in s(l.__ob__)&&(l=e.data.attrs=I({},l)),l)o=l[r],c[r]!==o&&gr(i,r,o,e.data.pre);for(r in(K||Q)&&l.value!==c.value&&gr(i,"value",l.value),c)a(l[r])&&(Nt(r)?i.removeAttributeNS($t,Ft(r)):zt(r)||i.removeAttribute(r))}}function gr(n,e,t,r){r||n.tagName.indexOf("-")>-1?mr(n,e,t):Dt(e)?Jt(t)?n.removeAttribute(e):(t="allowfullscreen"===e&&"EMBED"===n.tagName?"true":e,n.setAttribute(e,t)):zt(e)?n.setAttribute(e,function(n,e){return Jt(e)||"false"===e?"false":"contenteditable"===n&&Rt(e)?e:"true"}(e,t)):Nt(e)?Jt(t)?n.removeAttributeNS($t,Ft(e)):n.setAttributeNS($t,e,t):mr(n,e,t)}function mr(n,e,t){if(Jt(t))n.removeAttribute(e);else{if(K&&!Z&&"TEXTAREA"===n.tagName&&"placeholder"===e&&""!==t&&!n.__ieph){var r=function(e){e.stopImmediatePropagation(),n.removeEventListener("input",r)};n.addEventListener("input",r),n.__ieph=!0}n.setAttribute(e,t)}}var hr={create:fr,update:fr};function vr(n,e){var t=e.elm,r=e.data,o=n.data;if(!(a(r.staticClass)&&a(r.class)&&(a(o)||a(o.staticClass)&&a(o.class)))){var i=Ut(e),c=t._transitionClasses;s(c)&&(i=Ht(i,Wt(c))),i!==t._prevClass&&(t.setAttribute("class",i),t._prevClass=i)}}var br,yr={create:vr,update:vr};function xr(n,e,t){var r=br;return function o(){var i=e.apply(null,arguments);null!==i&&wr(n,o,t,r)}}var Sr=Kn&&!(en&&Number(en[1])<=53);function _r(n,e,t,r){if(Sr){var o=pt,i=e;e=i._wrapper=function(n){if(n.target===n.currentTarget||n.timeStamp>=o||n.timeStamp<=0||n.target.ownerDocument!==document)return i.apply(this,arguments)}}br.addEventListener(n,e,rn?{capture:t,passive:r}:t)}function wr(n,e,t,r){(r||br).removeEventListener(n,e._wrapper||e,t)}function jr(n,e){if(!a(n.data.on)||!a(e.data.on)){var t=e.data.on||{},r=n.data.on||{};br=e.elm,function(n){if(s(n.__r)){var e=K?"change":"input";n[e]=[].concat(n.__r,n[e]||[]),delete n.__r}s(n.__c)&&(n.change=[].concat(n.__c,n.change||[]),delete n.__c)}(t),pe(t,r,_r,wr,xr,e.context),br=void 0}}var Cr,kr={create:jr,update:jr};function Er(n,e){if(!a(n.data.domProps)||!a(e.data.domProps)){var t,r,o=e.elm,i=n.data.domProps||{},c=e.data.domProps||{};for(t in s(c.__ob__)&&(c=e.data.domProps=I({},c)),i)t in c||(o[t]="");for(t in c){if(r=c[t],"textContent"===t||"innerHTML"===t){if(e.children&&(e.children.length=0),r===i[t])continue;1===o.childNodes.length&&o.removeChild(o.childNodes[0])}if("value"===t&&"PROGRESS"!==o.tagName){o._value=r;var l=a(r)?"":String(r);Br(o,l)&&(o.value=l)}else if("innerHTML"===t&&Xt(o.tagName)&&a(o.innerHTML)){(Cr=Cr||document.createElement("div")).innerHTML="<svg>"+r+"</svg>";for(var p=Cr.firstChild;o.firstChild;)o.removeChild(o.firstChild);for(;p.firstChild;)o.appendChild(p.firstChild)}else if(r!==i[t])try{o[t]=r}catch(n){}}}}function Br(n,e){return!n.composing&&("OPTION"===n.tagName||function(n,e){var t=!0;try{t=document.activeElement!==n}catch(n){}return t&&n.value!==e}(n,e)||function(n,e){var t=n.value,r=n._vModifiers;if(s(r)){if(r.number)return v(t)!==v(e);if(r.trim)return t.trim()!==e.trim()}return t!==e}(n,e))}var Ar={create:Er,update:Er},Tr=w((function(n){var e={},t=/:(.+)/;return n.split(/;(?![^(]*\))/g).forEach((function(n){if(n){var r=n.split(t);r.length>1&&(e[r[0].trim()]=r[1].trim())}})),e}));function Ir(n){var e=Or(n.style);return n.staticStyle?I(n.staticStyle,e):e}function Or(n){return Array.isArray(n)?O(n):"string"==typeof n?Tr(n):n}var Pr,Mr=/^--/,Lr=/\s*!important$/,zr=function(n,e,t){if(Mr.test(e))n.style.setProperty(e,t);else if(Lr.test(t))n.style.setProperty(B(e),t.replace(Lr,""),"important");else{var r=Dr(e);if(Array.isArray(t))for(var o=0,i=t.length;o<i;o++)n.style[r]=t[o];else n.style[r]=t}},Rr=["Webkit","Moz","ms"],Dr=w((function(n){if(Pr=Pr||document.createElement("div").style,"filter"!==(n=C(n))&&n in Pr)return n;for(var e=n.charAt(0).toUpperCase()+n.slice(1),t=0;t<Rr.length;t++){var r=Rr[t]+e;if(r in Pr)return r}}));function $r(n,e){var t=e.data,r=n.data;if(!(a(t.staticStyle)&&a(t.style)&&a(r.staticStyle)&&a(r.style))){var o,i,c=e.elm,l=r.staticStyle,p=r.normalizedStyle||r.style||{},u=l||p,d=Or(e.data.style)||{};e.data.normalizedStyle=s(d.__ob__)?I({},d):d;var f=function(n,e){var t,r={};if(e)for(var o=n;o.componentInstance;)(o=o.componentInstance._vnode)&&o.data&&(t=Ir(o.data))&&I(r,t);(t=Ir(n.data))&&I(r,t);for(var i=n;i=i.parent;)i.data&&(t=Ir(i.data))&&I(r,t);return r}(e,!0);for(i in u)a(f[i])&&zr(c,i,"");for(i in f)(o=f[i])!==u[i]&&zr(c,i,null==o?"":o)}}var Nr={create:$r,update:$r},Fr=/\s+/;function Jr(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(Fr).forEach((function(e){return n.classList.add(e)})):n.classList.add(e);else{var t=" "+(n.getAttribute("class")||"")+" ";t.indexOf(" "+e+" ")<0&&n.setAttribute("class",(t+e).trim())}}function Ur(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(Fr).forEach((function(e){return n.classList.remove(e)})):n.classList.remove(e),n.classList.length||n.removeAttribute("class");else{for(var t=" "+(n.getAttribute("class")||"")+" ",r=" "+e+" ";t.indexOf(r)>=0;)t=t.replace(r," ");(t=t.trim())?n.setAttribute("class",t):n.removeAttribute("class")}}function qr(n){if(n){if("object"==typeof n){var e={};return!1!==n.css&&I(e,Hr(n.name||"v")),I(e,n),e}return"string"==typeof n?Hr(n):void 0}}var Hr=w((function(n){return{enterClass:n+"-enter",enterToClass:n+"-enter-to",enterActiveClass:n+"-enter-active",leaveClass:n+"-leave",leaveToClass:n+"-leave-to",leaveActiveClass:n+"-leave-active"}})),Wr=V&&!Z,Vr="transition",Gr="transitionend",Xr="animation",Yr="animationend";Wr&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(Vr="WebkitTransition",Gr="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Xr="WebkitAnimation",Yr="webkitAnimationEnd"));var Kr=V?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(n){return n()};function Zr(n){Kr((function(){Kr(n)}))}function Qr(n,e){var t=n._transitionClasses||(n._transitionClasses=[]);t.indexOf(e)<0&&(t.push(e),Jr(n,e))}function no(n,e){n._transitionClasses&&x(n._transitionClasses,e),Ur(n,e)}function eo(n,e,t){var r=ro(n,e),o=r.type,i=r.timeout,a=r.propCount;if(!o)return t();var s="transition"===o?Gr:Yr,c=0,l=function(){n.removeEventListener(s,p),t()},p=function(e){e.target===n&&++c>=a&&l()};setTimeout((function(){c<a&&l()}),i+1),n.addEventListener(s,p)}var to=/\b(transform|all)(,|$)/;function ro(n,e){var t,r=window.getComputedStyle(n),o=(r[Vr+"Delay"]||"").split(", "),i=(r[Vr+"Duration"]||"").split(", "),a=oo(o,i),s=(r[Xr+"Delay"]||"").split(", "),c=(r[Xr+"Duration"]||"").split(", "),l=oo(s,c),p=0,u=0;return"transition"===e?a>0&&(t="transition",p=a,u=i.length):"animation"===e?l>0&&(t="animation",p=l,u=c.length):u=(t=(p=Math.max(a,l))>0?a>l?"transition":"animation":null)?"transition"===t?i.length:c.length:0,{type:t,timeout:p,propCount:u,hasTransform:"transition"===t&&to.test(r[Vr+"Property"])}}function oo(n,e){for(;n.length<e.length;)n=n.concat(n);return Math.max.apply(null,e.map((function(e,t){return io(e)+io(n[t])})))}function io(n){return 1e3*Number(n.slice(0,-1).replace(",","."))}function ao(n,e){var t=n.elm;s(t._leaveCb)&&(t._leaveCb.cancelled=!0,t._leaveCb());var r=qr(n.data.transition);if(!a(r)&&!s(t._enterCb)&&1===t.nodeType){for(var o=r.css,i=r.type,c=r.enterClass,l=r.enterToClass,u=r.enterActiveClass,d=r.appearClass,f=r.appearToClass,g=r.appearActiveClass,m=r.beforeEnter,h=r.enter,b=r.afterEnter,y=r.enterCancelled,x=r.beforeAppear,S=r.appear,_=r.afterAppear,w=r.appearCancelled,j=r.duration,C=Qe,k=Qe.$vnode;k&&k.parent;)C=k.context,k=k.parent;var E=!C._isMounted||!n.isRootInsert;if(!E||S||""===S){var B=E&&d?d:c,A=E&&g?g:u,T=E&&f?f:l,I=E&&x||m,O=E&&"function"==typeof S?S:h,P=E&&_||b,M=E&&w||y,L=v(p(j)?j.enter:j);0;var z=!1!==o&&!Z,R=lo(O),$=t._enterCb=D((function(){z&&(no(t,T),no(t,A)),$.cancelled?(z&&no(t,B),M&&M(t)):P&&P(t),t._enterCb=null}));n.data.show||ue(n,"insert",(function(){var e=t.parentNode,r=e&&e._pending&&e._pending[n.key];r&&r.tag===n.tag&&r.elm._leaveCb&&r.elm._leaveCb(),O&&O(t,$)})),I&&I(t),z&&(Qr(t,B),Qr(t,A),Zr((function(){no(t,B),$.cancelled||(Qr(t,T),R||(co(L)?setTimeout($,L):eo(t,i,$)))}))),n.data.show&&(e&&e(),O&&O(t,$)),z||R||$()}}}function so(n,e){var t=n.elm;s(t._enterCb)&&(t._enterCb.cancelled=!0,t._enterCb());var r=qr(n.data.transition);if(a(r)||1!==t.nodeType)return e();if(!s(t._leaveCb)){var o=r.css,i=r.type,c=r.leaveClass,l=r.leaveToClass,u=r.leaveActiveClass,d=r.beforeLeave,f=r.leave,g=r.afterLeave,m=r.leaveCancelled,h=r.delayLeave,b=r.duration,y=!1!==o&&!Z,x=lo(f),S=v(p(b)?b.leave:b);0;var _=t._leaveCb=D((function(){t.parentNode&&t.parentNode._pending&&(t.parentNode._pending[n.key]=null),y&&(no(t,l),no(t,u)),_.cancelled?(y&&no(t,c),m&&m(t)):(e(),g&&g(t)),t._leaveCb=null}));h?h(w):w()}function w(){_.cancelled||(!n.data.show&&t.parentNode&&((t.parentNode._pending||(t.parentNode._pending={}))[n.key]=n),d&&d(t),y&&(Qr(t,c),Qr(t,u),Zr((function(){no(t,c),_.cancelled||(Qr(t,l),x||(co(S)?setTimeout(_,S):eo(t,i,_)))}))),f&&f(t,_),y||x||_())}}function co(n){return"number"==typeof n&&!isNaN(n)}function lo(n){if(a(n))return!1;var e=n.fns;return s(e)?lo(Array.isArray(e)?e[0]:e):(n._length||n.length)>1}function po(n,e){!0!==e.data.show&&ao(e)}var uo=function(n){var e,t,r={},o=n.modules,i=n.nodeOps;for(e=0;e<rr.length;++e)for(r[rr[e]]=[],t=0;t<o.length;++t)s(o[t][rr[e]])&&r[rr[e]].push(o[t][rr[e]]);function p(n){var e=i.parentNode(n);s(e)&&i.removeChild(e,n)}function u(n,e,t,o,a,l,p){if(s(n.elm)&&s(l)&&(n=l[p]=Sn(n)),n.isRootInsert=!a,!function(n,e,t,o){var i=n.data;if(s(i)){var a=s(n.componentInstance)&&i.keepAlive;if(s(i=i.hook)&&s(i=i.init)&&i(n,!1),s(n.componentInstance))return d(n,e),f(t,n.elm,o),c(a)&&function(n,e,t,o){var i,a=n;for(;a.componentInstance;)if(a=a.componentInstance._vnode,s(i=a.data)&&s(i=i.transition)){for(i=0;i<r.activate.length;++i)r.activate[i](tr,a);e.push(a);break}f(t,n.elm,o)}(n,e,t,o),!0}}(n,e,t,o)){var u=n.data,m=n.children,b=n.tag;s(b)?(n.elm=n.ns?i.createElementNS(n.ns,b):i.createElement(b,n),v(n),g(n,m,e),s(u)&&h(n,e),f(t,n.elm,o)):c(n.isComment)?(n.elm=i.createComment(n.text),f(t,n.elm,o)):(n.elm=i.createTextNode(n.text),f(t,n.elm,o))}}function d(n,e){s(n.data.pendingInsert)&&(e.push.apply(e,n.data.pendingInsert),n.data.pendingInsert=null),n.elm=n.componentInstance.$el,m(n)?(h(n,e),v(n)):(er(n),e.push(n))}function f(n,e,t){s(n)&&(s(t)?i.parentNode(t)===n&&i.insertBefore(n,e,t):i.appendChild(n,e))}function g(n,e,t){if(Array.isArray(e)){0;for(var r=0;r<e.length;++r)u(e[r],t,n.elm,null,!0,e,r)}else l(n.text)&&i.appendChild(n.elm,i.createTextNode(String(n.text)))}function m(n){for(;n.componentInstance;)n=n.componentInstance._vnode;return s(n.tag)}function h(n,t){for(var o=0;o<r.create.length;++o)r.create[o](tr,n);s(e=n.data.hook)&&(s(e.create)&&e.create(tr,n),s(e.insert)&&t.push(n))}function v(n){var e;if(s(e=n.fnScopeId))i.setStyleScope(n.elm,e);else for(var t=n;t;)s(e=t.context)&&s(e=e.$options._scopeId)&&i.setStyleScope(n.elm,e),t=t.parent;s(e=Qe)&&e!==n.context&&e!==n.fnContext&&s(e=e.$options._scopeId)&&i.setStyleScope(n.elm,e)}function y(n,e,t,r,o,i){for(;r<=o;++r)u(t[r],i,n,e,!1,t,r)}function x(n){var e,t,o=n.data;if(s(o))for(s(e=o.hook)&&s(e=e.destroy)&&e(n),e=0;e<r.destroy.length;++e)r.destroy[e](n);if(s(e=n.children))for(t=0;t<n.children.length;++t)x(n.children[t])}function S(n,e,t){for(;e<=t;++e){var r=n[e];s(r)&&(s(r.tag)?(_(r),x(r)):p(r.elm))}}function _(n,e){if(s(e)||s(n.data)){var t,o=r.remove.length+1;for(s(e)?e.listeners+=o:e=function(n,e){function t(){0==--t.listeners&&p(n)}return t.listeners=e,t}(n.elm,o),s(t=n.componentInstance)&&s(t=t._vnode)&&s(t.data)&&_(t,e),t=0;t<r.remove.length;++t)r.remove[t](n,e);s(t=n.data.hook)&&s(t=t.remove)?t(n,e):e()}else p(n.elm)}function w(n,e,t,r){for(var o=t;o<r;o++){var i=e[o];if(s(i)&&or(n,i))return o}}function j(n,e,t,o,l,p){if(n!==e){s(e.elm)&&s(o)&&(e=o[l]=Sn(e));var d=e.elm=n.elm;if(c(n.isAsyncPlaceholder))s(e.asyncFactory.resolved)?E(n.elm,e,t):e.isAsyncPlaceholder=!0;else if(c(e.isStatic)&&c(n.isStatic)&&e.key===n.key&&(c(e.isCloned)||c(e.isOnce)))e.componentInstance=n.componentInstance;else{var f,g=e.data;s(g)&&s(f=g.hook)&&s(f=f.prepatch)&&f(n,e);var h=n.children,v=e.children;if(s(g)&&m(e)){for(f=0;f<r.update.length;++f)r.update[f](n,e);s(f=g.hook)&&s(f=f.update)&&f(n,e)}a(e.text)?s(h)&&s(v)?h!==v&&function(n,e,t,r,o){var c,l,p,d=0,f=0,g=e.length-1,m=e[0],h=e[g],v=t.length-1,b=t[0],x=t[v],_=!o;for(0;d<=g&&f<=v;)a(m)?m=e[++d]:a(h)?h=e[--g]:or(m,b)?(j(m,b,r,t,f),m=e[++d],b=t[++f]):or(h,x)?(j(h,x,r,t,v),h=e[--g],x=t[--v]):or(m,x)?(j(m,x,r,t,v),_&&i.insertBefore(n,m.elm,i.nextSibling(h.elm)),m=e[++d],x=t[--v]):or(h,b)?(j(h,b,r,t,f),_&&i.insertBefore(n,h.elm,m.elm),h=e[--g],b=t[++f]):(a(c)&&(c=ir(e,d,g)),a(l=s(b.key)?c[b.key]:w(b,e,d,g))?u(b,r,n,m.elm,!1,t,f):or(p=e[l],b)?(j(p,b,r,t,f),e[l]=void 0,_&&i.insertBefore(n,p.elm,m.elm)):u(b,r,n,m.elm,!1,t,f),b=t[++f]);d>g?y(n,a(t[v+1])?null:t[v+1].elm,t,f,v,r):f>v&&S(e,d,g)}(d,h,v,t,p):s(v)?(s(n.text)&&i.setTextContent(d,""),y(d,null,v,0,v.length-1,t)):s(h)?S(h,0,h.length-1):s(n.text)&&i.setTextContent(d,""):n.text!==e.text&&i.setTextContent(d,e.text),s(g)&&s(f=g.hook)&&s(f=f.postpatch)&&f(n,e)}}}function C(n,e,t){if(c(t)&&s(n.parent))n.parent.data.pendingInsert=e;else for(var r=0;r<e.length;++r)e[r].data.hook.insert(e[r])}var k=b("attrs,class,staticClass,staticStyle,key");function E(n,e,t,r){var o,i=e.tag,a=e.data,l=e.children;if(r=r||a&&a.pre,e.elm=n,c(e.isComment)&&s(e.asyncFactory))return e.isAsyncPlaceholder=!0,!0;if(s(a)&&(s(o=a.hook)&&s(o=o.init)&&o(e,!0),s(o=e.componentInstance)))return d(e,t),!0;if(s(i)){if(s(l))if(n.hasChildNodes())if(s(o=a)&&s(o=o.domProps)&&s(o=o.innerHTML)){if(o!==n.innerHTML)return!1}else{for(var p=!0,u=n.firstChild,f=0;f<l.length;f++){if(!u||!E(u,l[f],t,r)){p=!1;break}u=u.nextSibling}if(!p||u)return!1}else g(e,l,t);if(s(a)){var m=!1;for(var v in a)if(!k(v)){m=!0,h(e,t);break}!m&&a.class&&se(a.class)}}else n.data!==e.text&&(n.data=e.text);return!0}return function(n,e,t,o){if(!a(e)){var l,p=!1,d=[];if(a(n))p=!0,u(e,d);else{var f=s(n.nodeType);if(!f&&or(n,e))j(n,e,d,null,null,o);else{if(f){if(1===n.nodeType&&n.hasAttribute("data-server-rendered")&&(n.removeAttribute("data-server-rendered"),t=!0),c(t)&&E(n,e,d))return C(e,d,!0),n;l=n,n=new vn(i.tagName(l).toLowerCase(),{},[],void 0,l)}var g=n.elm,h=i.parentNode(g);if(u(e,d,g._leaveCb?null:h,i.nextSibling(g)),s(e.parent))for(var v=e.parent,b=m(e);v;){for(var y=0;y<r.destroy.length;++y)r.destroy[y](v);if(v.elm=e.elm,b){for(var _=0;_<r.create.length;++_)r.create[_](tr,v);var w=v.data.hook.insert;if(w.merged)for(var k=1;k<w.fns.length;k++)w.fns[k]()}else er(v);v=v.parent}s(h)?S([n],0,0):s(n.tag)&&x(n)}}return C(e,d,p),e.elm}s(n)&&x(n)}}({nodeOps:Qt,modules:[hr,yr,kr,Ar,Nr,V?{create:po,activate:po,remove:function(n,e){!0!==n.data.show?so(n,e):e()}}:{}].concat(dr)});Z&&document.addEventListener("selectionchange",(function(){var n=document.activeElement;n&&n.vmodel&&xo(n,"input")}));var fo={inserted:function(n,e,t,r){"select"===t.tag?(r.elm&&!r.elm._vOptions?ue(t,"postpatch",(function(){fo.componentUpdated(n,e,t)})):go(n,e,t.context),n._vOptions=[].map.call(n.options,vo)):("textarea"===t.tag||Zt(n.type))&&(n._vModifiers=e.modifiers,e.modifiers.lazy||(n.addEventListener("compositionstart",bo),n.addEventListener("compositionend",yo),n.addEventListener("change",yo),Z&&(n.vmodel=!0)))},componentUpdated:function(n,e,t){if("select"===t.tag){go(n,e,t.context);var r=n._vOptions,o=n._vOptions=[].map.call(n.options,vo);if(o.some((function(n,e){return!z(n,r[e])})))(n.multiple?e.value.some((function(n){return ho(n,o)})):e.value!==e.oldValue&&ho(e.value,o))&&xo(n,"change")}}};function go(n,e,t){mo(n,e,t),(K||Q)&&setTimeout((function(){mo(n,e,t)}),0)}function mo(n,e,t){var r=e.value,o=n.multiple;if(!o||Array.isArray(r)){for(var i,a,s=0,c=n.options.length;s<c;s++)if(a=n.options[s],o)i=R(r,vo(a))>-1,a.selected!==i&&(a.selected=i);else if(z(vo(a),r))return void(n.selectedIndex!==s&&(n.selectedIndex=s));o||(n.selectedIndex=-1)}}function ho(n,e){return e.every((function(e){return!z(e,n)}))}function vo(n){return"_value"in n?n._value:n.value}function bo(n){n.target.composing=!0}function yo(n){n.target.composing&&(n.target.composing=!1,xo(n.target,"input"))}function xo(n,e){var t=document.createEvent("HTMLEvents");t.initEvent(e,!0,!0),n.dispatchEvent(t)}function So(n){return!n.componentInstance||n.data&&n.data.transition?n:So(n.componentInstance._vnode)}var _o={model:fo,show:{bind:function(n,e,t){var r=e.value,o=(t=So(t)).data&&t.data.transition,i=n.__vOriginalDisplay="none"===n.style.display?"":n.style.display;r&&o?(t.data.show=!0,ao(t,(function(){n.style.display=i}))):n.style.display=r?i:"none"},update:function(n,e,t){var r=e.value;!r!=!e.oldValue&&((t=So(t)).data&&t.data.transition?(t.data.show=!0,r?ao(t,(function(){n.style.display=n.__vOriginalDisplay})):so(t,(function(){n.style.display="none"}))):n.style.display=r?n.__vOriginalDisplay:"none")},unbind:function(n,e,t,r,o){o||(n.style.display=n.__vOriginalDisplay)}}},wo={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function jo(n){var e=n&&n.componentOptions;return e&&e.Ctor.options.abstract?jo(Ge(e.children)):n}function Co(n){var e={},t=n.$options;for(var r in t.propsData)e[r]=n[r];var o=t._parentListeners;for(var i in o)e[C(i)]=o[i];return e}function ko(n,e){if(/\d-keep-alive$/.test(e.tag))return n("keep-alive",{props:e.componentOptions.propsData})}var Eo=function(n){return n.tag||be(n)},Bo=function(n){return"show"===n.name},Ao={name:"transition",props:wo,abstract:!0,render:function(n){var e=this,t=this.$slots.default;if(t&&(t=t.filter(Eo)).length){0;var r=this.mode;0;var o=t[0];if(function(n){for(;n=n.parent;)if(n.data.transition)return!0}(this.$vnode))return o;var i=jo(o);if(!i)return o;if(this._leaving)return ko(n,o);var a="__transition-"+this._uid+"-";i.key=null==i.key?i.isComment?a+"comment":a+i.tag:l(i.key)?0===String(i.key).indexOf(a)?i.key:a+i.key:i.key;var s=(i.data||(i.data={})).transition=Co(this),c=this._vnode,p=jo(c);if(i.data.directives&&i.data.directives.some(Bo)&&(i.data.show=!0),p&&p.data&&!function(n,e){return e.key===n.key&&e.tag===n.tag}(i,p)&&!be(p)&&(!p.componentInstance||!p.componentInstance._vnode.isComment)){var u=p.data.transition=I({},s);if("out-in"===r)return this._leaving=!0,ue(u,"afterLeave",(function(){e._leaving=!1,e.$forceUpdate()})),ko(n,o);if("in-out"===r){if(be(i))return c;var d,f=function(){d()};ue(s,"afterEnter",f),ue(s,"enterCancelled",f),ue(u,"delayLeave",(function(n){d=n}))}}return o}}},To=I({tag:String,moveClass:String},wo);function Io(n){n.elm._moveCb&&n.elm._moveCb(),n.elm._enterCb&&n.elm._enterCb()}function Oo(n){n.data.newPos=n.elm.getBoundingClientRect()}function Po(n){var e=n.data.pos,t=n.data.newPos,r=e.left-t.left,o=e.top-t.top;if(r||o){n.data.moved=!0;var i=n.elm.style;i.transform=i.WebkitTransform="translate("+r+"px,"+o+"px)",i.transitionDuration="0s"}}delete To.mode;var Mo={Transition:Ao,TransitionGroup:{props:To,beforeMount:function(){var n=this,e=this._update;this._update=function(t,r){var o=nt(n);n.__patch__(n._vnode,n.kept,!1,!0),n._vnode=n.kept,o(),e.call(n,t,r)}},render:function(n){for(var e=this.tag||this.$vnode.data.tag||"span",t=Object.create(null),r=this.prevChildren=this.children,o=this.$slots.default||[],i=this.children=[],a=Co(this),s=0;s<o.length;s++){var c=o[s];if(c.tag)if(null!=c.key&&0!==String(c.key).indexOf("__vlist"))i.push(c),t[c.key]=c,(c.data||(c.data={})).transition=a;else;}if(r){for(var l=[],p=[],u=0;u<r.length;u++){var d=r[u];d.data.transition=a,d.data.pos=d.elm.getBoundingClientRect(),t[d.key]?l.push(d):p.push(d)}this.kept=n(e,null,l),this.removed=p}return n(e,null,i)},updated:function(){var n=this.prevChildren,e=this.moveClass||(this.name||"v")+"-move";n.length&&this.hasMove(n[0].elm,e)&&(n.forEach(Io),n.forEach(Oo),n.forEach(Po),this._reflow=document.body.offsetHeight,n.forEach((function(n){if(n.data.moved){var t=n.elm,r=t.style;Qr(t,e),r.transform=r.WebkitTransform=r.transitionDuration="",t.addEventListener(Gr,t._moveCb=function n(r){r&&r.target!==t||r&&!/transform$/.test(r.propertyName)||(t.removeEventListener(Gr,n),t._moveCb=null,no(t,e))})}})))},methods:{hasMove:function(n,e){if(!Wr)return!1;if(this._hasMove)return this._hasMove;var t=n.cloneNode();n._transitionClasses&&n._transitionClasses.forEach((function(n){Ur(t,n)})),Jr(t,e),t.style.display="none",this.$el.appendChild(t);var r=ro(t);return this.$el.removeChild(t),this._hasMove=r.hasTransform}}}};kt.config.mustUseProp=function(n,e,t){return"value"===t&&Lt(n)&&"button"!==e||"selected"===t&&"option"===n||"checked"===t&&"input"===n||"muted"===t&&"video"===n},kt.config.isReservedTag=Yt,kt.config.isReservedAttr=Mt,kt.config.getTagNamespace=function(n){return Xt(n)?"svg":"math"===n?"math":void 0},kt.config.isUnknownElement=function(n){if(!V)return!0;if(Yt(n))return!1;if(n=n.toLowerCase(),null!=Kt[n])return Kt[n];var e=document.createElement(n);return n.indexOf("-")>-1?Kt[n]=e.constructor===window.HTMLUnknownElement||e.constructor===window.HTMLElement:Kt[n]=/HTMLUnknownElement/.test(e.toString())},I(kt.options.directives,_o),I(kt.options.components,Mo),kt.prototype.__patch__=V?uo:P,kt.prototype.$mount=function(n,e){return function(n,e,t){var r;return n.$el=e,n.$options.render||(n.$options.render=yn),rt(n,"beforeMount"),r=function(){n._update(n._render(),t)},new mt(n,r,P,{before:function(){n._isMounted&&!n._isDestroyed&&rt(n,"beforeUpdate")}},!0),t=!1,null==n.$vnode&&(n._isMounted=!0,rt(n,"mounted")),n}(this,n=n&&V?function(n){if("string"==typeof n){var e=document.querySelector(n);return e||document.createElement("div")}return n}(n):void 0,e)},V&&setTimeout((function(){F.devtools&&sn&&sn.emit("init",kt)}),0);var Lo=kt;
/*!
  * vue-router v3.5.4
  * (c) 2022 Evan You
  * @license MIT
  */function zo(n,e){for(var t in e)n[t]=e[t];return n}var Ro=/[!'()*]/g,Do=function(n){return"%"+n.charCodeAt(0).toString(16)},$o=/%2C/g,No=function(n){return encodeURIComponent(n).replace(Ro,Do).replace($o,",")};function Fo(n){try{return decodeURIComponent(n)}catch(n){0}return n}var Jo=function(n){return null==n||"object"==typeof n?n:String(n)};function Uo(n){var e={};return(n=n.trim().replace(/^(\?|#|&)/,""))?(n.split("&").forEach((function(n){var t=n.replace(/\+/g," ").split("="),r=Fo(t.shift()),o=t.length>0?Fo(t.join("=")):null;void 0===e[r]?e[r]=o:Array.isArray(e[r])?e[r].push(o):e[r]=[e[r],o]})),e):e}function qo(n){var e=n?Object.keys(n).map((function(e){var t=n[e];if(void 0===t)return"";if(null===t)return No(e);if(Array.isArray(t)){var r=[];return t.forEach((function(n){void 0!==n&&(null===n?r.push(No(e)):r.push(No(e)+"="+No(n)))})),r.join("&")}return No(e)+"="+No(t)})).filter((function(n){return n.length>0})).join("&"):null;return e?"?"+e:""}var Ho=/\/?$/;function Wo(n,e,t,r){var o=r&&r.options.stringifyQuery,i=e.query||{};try{i=Vo(i)}catch(n){}var a={name:e.name||n&&n.name,meta:n&&n.meta||{},path:e.path||"/",hash:e.hash||"",query:i,params:e.params||{},fullPath:Yo(e,o),matched:n?Xo(n):[]};return t&&(a.redirectedFrom=Yo(t,o)),Object.freeze(a)}function Vo(n){if(Array.isArray(n))return n.map(Vo);if(n&&"object"==typeof n){var e={};for(var t in n)e[t]=Vo(n[t]);return e}return n}var Go=Wo(null,{path:"/"});function Xo(n){for(var e=[];n;)e.unshift(n),n=n.parent;return e}function Yo(n,e){var t=n.path,r=n.query;void 0===r&&(r={});var o=n.hash;return void 0===o&&(o=""),(t||"/")+(e||qo)(r)+o}function Ko(n,e,t){return e===Go?n===e:!!e&&(n.path&&e.path?n.path.replace(Ho,"")===e.path.replace(Ho,"")&&(t||n.hash===e.hash&&Zo(n.query,e.query)):!(!n.name||!e.name)&&(n.name===e.name&&(t||n.hash===e.hash&&Zo(n.query,e.query)&&Zo(n.params,e.params))))}function Zo(n,e){if(void 0===n&&(n={}),void 0===e&&(e={}),!n||!e)return n===e;var t=Object.keys(n).sort(),r=Object.keys(e).sort();return t.length===r.length&&t.every((function(t,o){var i=n[t];if(r[o]!==t)return!1;var a=e[t];return null==i||null==a?i===a:"object"==typeof i&&"object"==typeof a?Zo(i,a):String(i)===String(a)}))}function Qo(n){for(var e=0;e<n.matched.length;e++){var t=n.matched[e];for(var r in t.instances){var o=t.instances[r],i=t.enteredCbs[r];if(o&&i){delete t.enteredCbs[r];for(var a=0;a<i.length;a++)o._isBeingDestroyed||i[a](o)}}}}var ni={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(n,e){var t=e.props,r=e.children,o=e.parent,i=e.data;i.routerView=!0;for(var a=o.$createElement,s=t.name,c=o.$route,l=o._routerViewCache||(o._routerViewCache={}),p=0,u=!1;o&&o._routerRoot!==o;){var d=o.$vnode?o.$vnode.data:{};d.routerView&&p++,d.keepAlive&&o._directInactive&&o._inactive&&(u=!0),o=o.$parent}if(i.routerViewDepth=p,u){var f=l[s],g=f&&f.component;return g?(f.configProps&&ei(g,i,f.route,f.configProps),a(g,i,r)):a()}var m=c.matched[p],h=m&&m.components[s];if(!m||!h)return l[s]=null,a();l[s]={component:h},i.registerRouteInstance=function(n,e){var t=m.instances[s];(e&&t!==n||!e&&t===n)&&(m.instances[s]=e)},(i.hook||(i.hook={})).prepatch=function(n,e){m.instances[s]=e.componentInstance},i.hook.init=function(n){n.data.keepAlive&&n.componentInstance&&n.componentInstance!==m.instances[s]&&(m.instances[s]=n.componentInstance),Qo(c)};var v=m.props&&m.props[s];return v&&(zo(l[s],{route:c,configProps:v}),ei(h,i,c,v)),a(h,i,r)}};function ei(n,e,t,r){var o=e.props=function(n,e){switch(typeof e){case"undefined":return;case"object":return e;case"function":return e(n);case"boolean":return e?n.params:void 0;default:0}}(t,r);if(o){o=e.props=zo({},o);var i=e.attrs=e.attrs||{};for(var a in o)n.props&&a in n.props||(i[a]=o[a],delete o[a])}}function ti(n,e,t){var r=n.charAt(0);if("/"===r)return n;if("?"===r||"#"===r)return e+n;var o=e.split("/");t&&o[o.length-1]||o.pop();for(var i=n.replace(/^\//,"").split("/"),a=0;a<i.length;a++){var s=i[a];".."===s?o.pop():"."!==s&&o.push(s)}return""!==o[0]&&o.unshift(""),o.join("/")}function ri(n){return n.replace(/\/(?:\s*\/)+/g,"/")}var oi=Array.isArray||function(n){return"[object Array]"==Object.prototype.toString.call(n)},ii=yi,ai=ui,si=function(n,e){return fi(ui(n,e),e)},ci=fi,li=bi,pi=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function ui(n,e){for(var t,r=[],o=0,i=0,a="",s=e&&e.delimiter||"/";null!=(t=pi.exec(n));){var c=t[0],l=t[1],p=t.index;if(a+=n.slice(i,p),i=p+c.length,l)a+=l[1];else{var u=n[i],d=t[2],f=t[3],g=t[4],m=t[5],h=t[6],v=t[7];a&&(r.push(a),a="");var b=null!=d&&null!=u&&u!==d,y="+"===h||"*"===h,x="?"===h||"*"===h,S=t[2]||s,_=g||m;r.push({name:f||o++,prefix:d||"",delimiter:S,optional:x,repeat:y,partial:b,asterisk:!!v,pattern:_?mi(_):v?".*":"[^"+gi(S)+"]+?"})}}return i<n.length&&(a+=n.substr(i)),a&&r.push(a),r}function di(n){return encodeURI(n).replace(/[\/?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()}))}function fi(n,e){for(var t=new Array(n.length),r=0;r<n.length;r++)"object"==typeof n[r]&&(t[r]=new RegExp("^(?:"+n[r].pattern+")$",vi(e)));return function(e,r){for(var o="",i=e||{},a=(r||{}).pretty?di:encodeURIComponent,s=0;s<n.length;s++){var c=n[s];if("string"!=typeof c){var l,p=i[c.name];if(null==p){if(c.optional){c.partial&&(o+=c.prefix);continue}throw new TypeError('Expected "'+c.name+'" to be defined')}if(oi(p)){if(!c.repeat)throw new TypeError('Expected "'+c.name+'" to not repeat, but received `'+JSON.stringify(p)+"`");if(0===p.length){if(c.optional)continue;throw new TypeError('Expected "'+c.name+'" to not be empty')}for(var u=0;u<p.length;u++){if(l=a(p[u]),!t[s].test(l))throw new TypeError('Expected all "'+c.name+'" to match "'+c.pattern+'", but received `'+JSON.stringify(l)+"`");o+=(0===u?c.prefix:c.delimiter)+l}}else{if(l=c.asterisk?encodeURI(p).replace(/[?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()})):a(p),!t[s].test(l))throw new TypeError('Expected "'+c.name+'" to match "'+c.pattern+'", but received "'+l+'"');o+=c.prefix+l}}else o+=c}return o}}function gi(n){return n.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function mi(n){return n.replace(/([=!:$\/()])/g,"\\$1")}function hi(n,e){return n.keys=e,n}function vi(n){return n&&n.sensitive?"":"i"}function bi(n,e,t){oi(e)||(t=e||t,e=[]);for(var r=(t=t||{}).strict,o=!1!==t.end,i="",a=0;a<n.length;a++){var s=n[a];if("string"==typeof s)i+=gi(s);else{var c=gi(s.prefix),l="(?:"+s.pattern+")";e.push(s),s.repeat&&(l+="(?:"+c+l+")*"),i+=l=s.optional?s.partial?c+"("+l+")?":"(?:"+c+"("+l+"))?":c+"("+l+")"}}var p=gi(t.delimiter||"/"),u=i.slice(-p.length)===p;return r||(i=(u?i.slice(0,-p.length):i)+"(?:"+p+"(?=$))?"),i+=o?"$":r&&u?"":"(?="+p+"|$)",hi(new RegExp("^"+i,vi(t)),e)}function yi(n,e,t){return oi(e)||(t=e||t,e=[]),t=t||{},n instanceof RegExp?function(n,e){var t=n.source.match(/\((?!\?)/g);if(t)for(var r=0;r<t.length;r++)e.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return hi(n,e)}(n,e):oi(n)?function(n,e,t){for(var r=[],o=0;o<n.length;o++)r.push(yi(n[o],e,t).source);return hi(new RegExp("(?:"+r.join("|")+")",vi(t)),e)}(n,e,t):function(n,e,t){return bi(ui(n,t),e,t)}(n,e,t)}ii.parse=ai,ii.compile=si,ii.tokensToFunction=ci,ii.tokensToRegExp=li;var xi=Object.create(null);function Si(n,e,t){e=e||{};try{var r=xi[n]||(xi[n]=ii.compile(n));return"string"==typeof e.pathMatch&&(e[0]=e.pathMatch),r(e,{pretty:!0})}catch(n){return""}finally{delete e[0]}}function _i(n,e,t,r){var o="string"==typeof n?{path:n}:n;if(o._normalized)return o;if(o.name){var i=(o=zo({},n)).params;return i&&"object"==typeof i&&(o.params=zo({},i)),o}if(!o.path&&o.params&&e){(o=zo({},o))._normalized=!0;var a=zo(zo({},e.params),o.params);if(e.name)o.name=e.name,o.params=a;else if(e.matched.length){var s=e.matched[e.matched.length-1].path;o.path=Si(s,a,e.path)}else 0;return o}var c=function(n){var e="",t="",r=n.indexOf("#");r>=0&&(e=n.slice(r),n=n.slice(0,r));var o=n.indexOf("?");return o>=0&&(t=n.slice(o+1),n=n.slice(0,o)),{path:n,query:t,hash:e}}(o.path||""),l=e&&e.path||"/",p=c.path?ti(c.path,l,t||o.append):l,u=function(n,e,t){void 0===e&&(e={});var r,o=t||Uo;try{r=o(n||"")}catch(n){r={}}for(var i in e){var a=e[i];r[i]=Array.isArray(a)?a.map(Jo):Jo(a)}return r}(c.query,o.query,r&&r.options.parseQuery),d=o.hash||c.hash;return d&&"#"!==d.charAt(0)&&(d="#"+d),{_normalized:!0,path:p,query:u,hash:d}}var wi,ji=function(){},Ci={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(n){var e=this,t=this.$router,r=this.$route,o=t.resolve(this.to,r,this.append),i=o.location,a=o.route,s=o.href,c={},l=t.options.linkActiveClass,p=t.options.linkExactActiveClass,u=null==l?"router-link-active":l,d=null==p?"router-link-exact-active":p,f=null==this.activeClass?u:this.activeClass,g=null==this.exactActiveClass?d:this.exactActiveClass,m=a.redirectedFrom?Wo(null,_i(a.redirectedFrom),null,t):a;c[g]=Ko(r,m,this.exactPath),c[f]=this.exact||this.exactPath?c[g]:function(n,e){return 0===n.path.replace(Ho,"/").indexOf(e.path.replace(Ho,"/"))&&(!e.hash||n.hash===e.hash)&&function(n,e){for(var t in e)if(!(t in n))return!1;return!0}(n.query,e.query)}(r,m);var h=c[g]?this.ariaCurrentValue:null,v=function(n){ki(n)&&(e.replace?t.replace(i,ji):t.push(i,ji))},b={click:ki};Array.isArray(this.event)?this.event.forEach((function(n){b[n]=v})):b[this.event]=v;var y={class:c},x=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:s,route:a,navigate:v,isActive:c[f],isExactActive:c[g]});if(x){if(1===x.length)return x[0];if(x.length>1||!x.length)return 0===x.length?n():n("span",{},x)}if("a"===this.tag)y.on=b,y.attrs={href:s,"aria-current":h};else{var S=function n(e){var t;if(e)for(var r=0;r<e.length;r++){if("a"===(t=e[r]).tag)return t;if(t.children&&(t=n(t.children)))return t}}(this.$slots.default);if(S){S.isStatic=!1;var _=S.data=zo({},S.data);for(var w in _.on=_.on||{},_.on){var j=_.on[w];w in b&&(_.on[w]=Array.isArray(j)?j:[j])}for(var C in b)C in _.on?_.on[C].push(b[C]):_.on[C]=v;var k=S.data.attrs=zo({},S.data.attrs);k.href=s,k["aria-current"]=h}else y.on=b}return n(this.tag,y,this.$slots.default)}};function ki(n){if(!(n.metaKey||n.altKey||n.ctrlKey||n.shiftKey||n.defaultPrevented||void 0!==n.button&&0!==n.button)){if(n.currentTarget&&n.currentTarget.getAttribute){var e=n.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(e))return}return n.preventDefault&&n.preventDefault(),!0}}var Ei="undefined"!=typeof window;function Bi(n,e,t,r,o){var i=e||[],a=t||Object.create(null),s=r||Object.create(null);n.forEach((function(n){!function n(e,t,r,o,i,a){var s=o.path,c=o.name;0;var l=o.pathToRegexpOptions||{},p=function(n,e,t){t||(n=n.replace(/\/$/,""));if("/"===n[0])return n;if(null==e)return n;return ri(e.path+"/"+n)}(s,i,l.strict);"boolean"==typeof o.caseSensitive&&(l.sensitive=o.caseSensitive);var u={path:p,regex:Ai(p,l),components:o.components||{default:o.component},alias:o.alias?"string"==typeof o.alias?[o.alias]:o.alias:[],instances:{},enteredCbs:{},name:c,parent:i,matchAs:a,redirect:o.redirect,beforeEnter:o.beforeEnter,meta:o.meta||{},props:null==o.props?{}:o.components?o.props:{default:o.props}};o.children&&o.children.forEach((function(o){var i=a?ri(a+"/"+o.path):void 0;n(e,t,r,o,u,i)}));t[u.path]||(e.push(u.path),t[u.path]=u);if(void 0!==o.alias)for(var d=Array.isArray(o.alias)?o.alias:[o.alias],f=0;f<d.length;++f){0;var g={path:d[f],children:o.children};n(e,t,r,g,i,u.path||"/")}c&&(r[c]||(r[c]=u))}(i,a,s,n,o)}));for(var c=0,l=i.length;c<l;c++)"*"===i[c]&&(i.push(i.splice(c,1)[0]),l--,c--);return{pathList:i,pathMap:a,nameMap:s}}function Ai(n,e){return ii(n,[],e)}function Ti(n,e){var t=Bi(n),r=t.pathList,o=t.pathMap,i=t.nameMap;function a(n,t,a){var s=_i(n,t,!1,e),l=s.name;if(l){var p=i[l];if(!p)return c(null,s);var u=p.regex.keys.filter((function(n){return!n.optional})).map((function(n){return n.name}));if("object"!=typeof s.params&&(s.params={}),t&&"object"==typeof t.params)for(var d in t.params)!(d in s.params)&&u.indexOf(d)>-1&&(s.params[d]=t.params[d]);return s.path=Si(p.path,s.params),c(p,s,a)}if(s.path){s.params={};for(var f=0;f<r.length;f++){var g=r[f],m=o[g];if(Ii(m.regex,s.path,s.params))return c(m,s,a)}}return c(null,s)}function s(n,t){var r=n.redirect,o="function"==typeof r?r(Wo(n,t,null,e)):r;if("string"==typeof o&&(o={path:o}),!o||"object"!=typeof o)return c(null,t);var s=o,l=s.name,p=s.path,u=t.query,d=t.hash,f=t.params;if(u=s.hasOwnProperty("query")?s.query:u,d=s.hasOwnProperty("hash")?s.hash:d,f=s.hasOwnProperty("params")?s.params:f,l){i[l];return a({_normalized:!0,name:l,query:u,hash:d,params:f},void 0,t)}if(p){var g=function(n,e){return ti(n,e.parent?e.parent.path:"/",!0)}(p,n);return a({_normalized:!0,path:Si(g,f),query:u,hash:d},void 0,t)}return c(null,t)}function c(n,t,r){return n&&n.redirect?s(n,r||t):n&&n.matchAs?function(n,e,t){var r=a({_normalized:!0,path:Si(t,e.params)});if(r){var o=r.matched,i=o[o.length-1];return e.params=r.params,c(i,e)}return c(null,e)}(0,t,n.matchAs):Wo(n,t,r,e)}return{match:a,addRoute:function(n,e){var t="object"!=typeof n?i[n]:void 0;Bi([e||n],r,o,i,t),t&&t.alias.length&&Bi(t.alias.map((function(n){return{path:n,children:[e]}})),r,o,i,t)},getRoutes:function(){return r.map((function(n){return o[n]}))},addRoutes:function(n){Bi(n,r,o,i)}}}function Ii(n,e,t){var r=e.match(n);if(!r)return!1;if(!t)return!0;for(var o=1,i=r.length;o<i;++o){var a=n.keys[o-1];a&&(t[a.name||"pathMatch"]="string"==typeof r[o]?Fo(r[o]):r[o])}return!0}var Oi=Ei&&window.performance&&window.performance.now?window.performance:Date;function Pi(){return Oi.now().toFixed(3)}var Mi=Pi();function Li(){return Mi}function zi(n){return Mi=n}var Ri=Object.create(null);function Di(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var n=window.location.protocol+"//"+window.location.host,e=window.location.href.replace(n,""),t=zo({},window.history.state);return t.key=Li(),window.history.replaceState(t,"",e),window.addEventListener("popstate",Fi),function(){window.removeEventListener("popstate",Fi)}}function $i(n,e,t,r){if(n.app){var o=n.options.scrollBehavior;o&&n.app.$nextTick((function(){var i=function(){var n=Li();if(n)return Ri[n]}(),a=o.call(n,e,t,r?i:null);a&&("function"==typeof a.then?a.then((function(n){Wi(n,i)})).catch((function(n){0})):Wi(a,i))}))}}function Ni(){var n=Li();n&&(Ri[n]={x:window.pageXOffset,y:window.pageYOffset})}function Fi(n){Ni(),n.state&&n.state.key&&zi(n.state.key)}function Ji(n){return qi(n.x)||qi(n.y)}function Ui(n){return{x:qi(n.x)?n.x:window.pageXOffset,y:qi(n.y)?n.y:window.pageYOffset}}function qi(n){return"number"==typeof n}var Hi=/^#\d/;function Wi(n,e){var t,r="object"==typeof n;if(r&&"string"==typeof n.selector){var o=Hi.test(n.selector)?document.getElementById(n.selector.slice(1)):document.querySelector(n.selector);if(o){var i=n.offset&&"object"==typeof n.offset?n.offset:{};e=function(n,e){var t=document.documentElement.getBoundingClientRect(),r=n.getBoundingClientRect();return{x:r.left-t.left-e.x,y:r.top-t.top-e.y}}(o,i={x:qi((t=i).x)?t.x:0,y:qi(t.y)?t.y:0})}else Ji(n)&&(e=Ui(n))}else r&&Ji(n)&&(e=Ui(n));e&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:e.x,top:e.y,behavior:n.behavior}):window.scrollTo(e.x,e.y))}var Vi,Gi=Ei&&((-1===(Vi=window.navigator.userAgent).indexOf("Android 2.")&&-1===Vi.indexOf("Android 4.0")||-1===Vi.indexOf("Mobile Safari")||-1!==Vi.indexOf("Chrome")||-1!==Vi.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function Xi(n,e){Ni();var t=window.history;try{if(e){var r=zo({},t.state);r.key=Li(),t.replaceState(r,"",n)}else t.pushState({key:zi(Pi())},"",n)}catch(t){window.location[e?"replace":"assign"](n)}}function Yi(n){Xi(n,!0)}function Ki(n,e,t){var r=function(o){o>=n.length?t():n[o]?e(n[o],(function(){r(o+1)})):r(o+1)};r(0)}var Zi={redirected:2,aborted:4,cancelled:8,duplicated:16};function Qi(n,e){return ea(n,e,Zi.redirected,'Redirected when going from "'+n.fullPath+'" to "'+function(n){if("string"==typeof n)return n;if("path"in n)return n.path;var e={};return ta.forEach((function(t){t in n&&(e[t]=n[t])})),JSON.stringify(e,null,2)}(e)+'" via a navigation guard.')}function na(n,e){return ea(n,e,Zi.cancelled,'Navigation cancelled from "'+n.fullPath+'" to "'+e.fullPath+'" with a new navigation.')}function ea(n,e,t,r){var o=new Error(r);return o._isRouter=!0,o.from=n,o.to=e,o.type=t,o}var ta=["params","query","hash"];function ra(n){return Object.prototype.toString.call(n).indexOf("Error")>-1}function oa(n,e){return ra(n)&&n._isRouter&&(null==e||n.type===e)}function ia(n){return function(e,t,r){var o=!1,i=0,a=null;aa(n,(function(n,e,t,s){if("function"==typeof n&&void 0===n.cid){o=!0,i++;var c,l=la((function(e){var o;((o=e).__esModule||ca&&"Module"===o[Symbol.toStringTag])&&(e=e.default),n.resolved="function"==typeof e?e:wi.extend(e),t.components[s]=e,--i<=0&&r()})),p=la((function(n){var e="Failed to resolve async component "+s+": "+n;a||(a=ra(n)?n:new Error(e),r(a))}));try{c=n(l,p)}catch(n){p(n)}if(c)if("function"==typeof c.then)c.then(l,p);else{var u=c.component;u&&"function"==typeof u.then&&u.then(l,p)}}})),o||r()}}function aa(n,e){return sa(n.map((function(n){return Object.keys(n.components).map((function(t){return e(n.components[t],n.instances[t],n,t)}))})))}function sa(n){return Array.prototype.concat.apply([],n)}var ca="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function la(n){var e=!1;return function(){for(var t=[],r=arguments.length;r--;)t[r]=arguments[r];if(!e)return e=!0,n.apply(this,t)}}var pa=function(n,e){this.router=n,this.base=function(n){if(!n)if(Ei){var e=document.querySelector("base");n=(n=e&&e.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else n="/";"/"!==n.charAt(0)&&(n="/"+n);return n.replace(/\/$/,"")}(e),this.current=Go,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function ua(n,e,t,r){var o=aa(n,(function(n,r,o,i){var a=function(n,e){"function"!=typeof n&&(n=wi.extend(n));return n.options[e]}(n,e);if(a)return Array.isArray(a)?a.map((function(n){return t(n,r,o,i)})):t(a,r,o,i)}));return sa(r?o.reverse():o)}function da(n,e){if(e)return function(){return n.apply(e,arguments)}}pa.prototype.listen=function(n){this.cb=n},pa.prototype.onReady=function(n,e){this.ready?n():(this.readyCbs.push(n),e&&this.readyErrorCbs.push(e))},pa.prototype.onError=function(n){this.errorCbs.push(n)},pa.prototype.transitionTo=function(n,e,t){var r,o=this;try{r=this.router.match(n,this.current)}catch(n){throw this.errorCbs.forEach((function(e){e(n)})),n}var i=this.current;this.confirmTransition(r,(function(){o.updateRoute(r),e&&e(r),o.ensureURL(),o.router.afterHooks.forEach((function(n){n&&n(r,i)})),o.ready||(o.ready=!0,o.readyCbs.forEach((function(n){n(r)})))}),(function(n){t&&t(n),n&&!o.ready&&(oa(n,Zi.redirected)&&i===Go||(o.ready=!0,o.readyErrorCbs.forEach((function(e){e(n)}))))}))},pa.prototype.confirmTransition=function(n,e,t){var r=this,o=this.current;this.pending=n;var i,a,s=function(n){!oa(n)&&ra(n)&&(r.errorCbs.length?r.errorCbs.forEach((function(e){e(n)})):console.error(n)),t&&t(n)},c=n.matched.length-1,l=o.matched.length-1;if(Ko(n,o)&&c===l&&n.matched[c]===o.matched[l])return this.ensureURL(),n.hash&&$i(this.router,o,n,!1),s(((a=ea(i=o,n,Zi.duplicated,'Avoided redundant navigation to current location: "'+i.fullPath+'".')).name="NavigationDuplicated",a));var p=function(n,e){var t,r=Math.max(n.length,e.length);for(t=0;t<r&&n[t]===e[t];t++);return{updated:e.slice(0,t),activated:e.slice(t),deactivated:n.slice(t)}}(this.current.matched,n.matched),u=p.updated,d=p.deactivated,f=p.activated,g=[].concat(function(n){return ua(n,"beforeRouteLeave",da,!0)}(d),this.router.beforeHooks,function(n){return ua(n,"beforeRouteUpdate",da)}(u),f.map((function(n){return n.beforeEnter})),ia(f)),m=function(e,t){if(r.pending!==n)return s(na(o,n));try{e(n,o,(function(e){!1===e?(r.ensureURL(!0),s(function(n,e){return ea(n,e,Zi.aborted,'Navigation aborted from "'+n.fullPath+'" to "'+e.fullPath+'" via a navigation guard.')}(o,n))):ra(e)?(r.ensureURL(!0),s(e)):"string"==typeof e||"object"==typeof e&&("string"==typeof e.path||"string"==typeof e.name)?(s(Qi(o,n)),"object"==typeof e&&e.replace?r.replace(e):r.push(e)):t(e)}))}catch(n){s(n)}};Ki(g,m,(function(){Ki(function(n){return ua(n,"beforeRouteEnter",(function(n,e,t,r){return function(n,e,t){return function(r,o,i){return n(r,o,(function(n){"function"==typeof n&&(e.enteredCbs[t]||(e.enteredCbs[t]=[]),e.enteredCbs[t].push(n)),i(n)}))}}(n,t,r)}))}(f).concat(r.router.resolveHooks),m,(function(){if(r.pending!==n)return s(na(o,n));r.pending=null,e(n),r.router.app&&r.router.app.$nextTick((function(){Qo(n)}))}))}))},pa.prototype.updateRoute=function(n){this.current=n,this.cb&&this.cb(n)},pa.prototype.setupListeners=function(){},pa.prototype.teardown=function(){this.listeners.forEach((function(n){n()})),this.listeners=[],this.current=Go,this.pending=null};var fa=function(n){function e(e,t){n.call(this,e,t),this._startLocation=ga(this.base)}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router,t=e.options.scrollBehavior,r=Gi&&t;r&&this.listeners.push(Di());var o=function(){var t=n.current,o=ga(n.base);n.current===Go&&o===n._startLocation||n.transitionTo(o,(function(n){r&&$i(e,n,t,!0)}))};window.addEventListener("popstate",o),this.listeners.push((function(){window.removeEventListener("popstate",o)}))}},e.prototype.go=function(n){window.history.go(n)},e.prototype.push=function(n,e,t){var r=this,o=this.current;this.transitionTo(n,(function(n){Xi(ri(r.base+n.fullPath)),$i(r.router,n,o,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this,o=this.current;this.transitionTo(n,(function(n){Yi(ri(r.base+n.fullPath)),$i(r.router,n,o,!1),e&&e(n)}),t)},e.prototype.ensureURL=function(n){if(ga(this.base)!==this.current.fullPath){var e=ri(this.base+this.current.fullPath);n?Xi(e):Yi(e)}},e.prototype.getCurrentLocation=function(){return ga(this.base)},e}(pa);function ga(n){var e=window.location.pathname,t=e.toLowerCase(),r=n.toLowerCase();return!n||t!==r&&0!==t.indexOf(ri(r+"/"))||(e=e.slice(n.length)),(e||"/")+window.location.search+window.location.hash}var ma=function(n){function e(e,t,r){n.call(this,e,t),r&&function(n){var e=ga(n);if(!/^\/#/.test(e))return window.location.replace(ri(n+"/#"+e)),!0}(this.base)||ha()}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router.options.scrollBehavior,t=Gi&&e;t&&this.listeners.push(Di());var r=function(){var e=n.current;ha()&&n.transitionTo(va(),(function(r){t&&$i(n.router,r,e,!0),Gi||xa(r.fullPath)}))},o=Gi?"popstate":"hashchange";window.addEventListener(o,r),this.listeners.push((function(){window.removeEventListener(o,r)}))}},e.prototype.push=function(n,e,t){var r=this,o=this.current;this.transitionTo(n,(function(n){ya(n.fullPath),$i(r.router,n,o,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this,o=this.current;this.transitionTo(n,(function(n){xa(n.fullPath),$i(r.router,n,o,!1),e&&e(n)}),t)},e.prototype.go=function(n){window.history.go(n)},e.prototype.ensureURL=function(n){var e=this.current.fullPath;va()!==e&&(n?ya(e):xa(e))},e.prototype.getCurrentLocation=function(){return va()},e}(pa);function ha(){var n=va();return"/"===n.charAt(0)||(xa("/"+n),!1)}function va(){var n=window.location.href,e=n.indexOf("#");return e<0?"":n=n.slice(e+1)}function ba(n){var e=window.location.href,t=e.indexOf("#");return(t>=0?e.slice(0,t):e)+"#"+n}function ya(n){Gi?Xi(ba(n)):window.location.hash=n}function xa(n){Gi?Yi(ba(n)):window.location.replace(ba(n))}var Sa=function(n){function e(e,t){n.call(this,e,t),this.stack=[],this.index=-1}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.push=function(n,e,t){var r=this;this.transitionTo(n,(function(n){r.stack=r.stack.slice(0,r.index+1).concat(n),r.index++,e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this;this.transitionTo(n,(function(n){r.stack=r.stack.slice(0,r.index).concat(n),e&&e(n)}),t)},e.prototype.go=function(n){var e=this,t=this.index+n;if(!(t<0||t>=this.stack.length)){var r=this.stack[t];this.confirmTransition(r,(function(){var n=e.current;e.index=t,e.updateRoute(r),e.router.afterHooks.forEach((function(e){e&&e(r,n)}))}),(function(n){oa(n,Zi.duplicated)&&(e.index=t)}))}},e.prototype.getCurrentLocation=function(){var n=this.stack[this.stack.length-1];return n?n.fullPath:"/"},e.prototype.ensureURL=function(){},e}(pa),_a=function(n){void 0===n&&(n={}),this.app=null,this.apps=[],this.options=n,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Ti(n.routes||[],this);var e=n.mode||"hash";switch(this.fallback="history"===e&&!Gi&&!1!==n.fallback,this.fallback&&(e="hash"),Ei||(e="abstract"),this.mode=e,e){case"history":this.history=new fa(this,n.base);break;case"hash":this.history=new ma(this,n.base,this.fallback);break;case"abstract":this.history=new Sa(this,n.base);break;default:0}},wa={currentRoute:{configurable:!0}};function ja(n,e){return n.push(e),function(){var t=n.indexOf(e);t>-1&&n.splice(t,1)}}_a.prototype.match=function(n,e,t){return this.matcher.match(n,e,t)},wa.currentRoute.get=function(){return this.history&&this.history.current},_a.prototype.init=function(n){var e=this;if(this.apps.push(n),n.$once("hook:destroyed",(function(){var t=e.apps.indexOf(n);t>-1&&e.apps.splice(t,1),e.app===n&&(e.app=e.apps[0]||null),e.app||e.history.teardown()})),!this.app){this.app=n;var t=this.history;if(t instanceof fa||t instanceof ma){var r=function(n){t.setupListeners(),function(n){var r=t.current,o=e.options.scrollBehavior;Gi&&o&&"fullPath"in n&&$i(e,n,r,!1)}(n)};t.transitionTo(t.getCurrentLocation(),r,r)}t.listen((function(n){e.apps.forEach((function(e){e._route=n}))}))}},_a.prototype.beforeEach=function(n){return ja(this.beforeHooks,n)},_a.prototype.beforeResolve=function(n){return ja(this.resolveHooks,n)},_a.prototype.afterEach=function(n){return ja(this.afterHooks,n)},_a.prototype.onReady=function(n,e){this.history.onReady(n,e)},_a.prototype.onError=function(n){this.history.onError(n)},_a.prototype.push=function(n,e,t){var r=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){r.history.push(n,e,t)}));this.history.push(n,e,t)},_a.prototype.replace=function(n,e,t){var r=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){r.history.replace(n,e,t)}));this.history.replace(n,e,t)},_a.prototype.go=function(n){this.history.go(n)},_a.prototype.back=function(){this.go(-1)},_a.prototype.forward=function(){this.go(1)},_a.prototype.getMatchedComponents=function(n){var e=n?n.matched?n:this.resolve(n).route:this.currentRoute;return e?[].concat.apply([],e.matched.map((function(n){return Object.keys(n.components).map((function(e){return n.components[e]}))}))):[]},_a.prototype.resolve=function(n,e,t){var r=_i(n,e=e||this.history.current,t,this),o=this.match(r,e),i=o.redirectedFrom||o.fullPath;return{location:r,route:o,href:function(n,e,t){var r="hash"===t?"#"+e:e;return n?ri(n+"/"+r):r}(this.history.base,i,this.mode),normalizedTo:r,resolved:o}},_a.prototype.getRoutes=function(){return this.matcher.getRoutes()},_a.prototype.addRoute=function(n,e){this.matcher.addRoute(n,e),this.history.current!==Go&&this.history.transitionTo(this.history.getCurrentLocation())},_a.prototype.addRoutes=function(n){this.matcher.addRoutes(n),this.history.current!==Go&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(_a.prototype,wa),_a.install=function n(e){if(!n.installed||wi!==e){n.installed=!0,wi=e;var t=function(n){return void 0!==n},r=function(n,e){var r=n.$options._parentVnode;t(r)&&t(r=r.data)&&t(r=r.registerRouteInstance)&&r(n,e)};e.mixin({beforeCreate:function(){t(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),e.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,r(this,this)},destroyed:function(){r(this)}}),Object.defineProperty(e.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(e.prototype,"$route",{get:function(){return this._routerRoot._route}}),e.component("RouterView",ni),e.component("RouterLink",Ci);var o=e.config.optionMergeStrategies;o.beforeRouteEnter=o.beforeRouteLeave=o.beforeRouteUpdate=o.created}},_a.version="3.5.4",_a.isNavigationFailure=oa,_a.NavigationFailureType=Zi,_a.START_LOCATION=Go,Ei&&window.Vue&&window.Vue.use(_a);var Ca=_a;t(194),t(136),t(289),t(89),t(195),t(21),t(22),t(291);function ka(n){n.locales&&Object.keys(n.locales).forEach((function(e){n.locales[e].path=e})),Object.freeze(n)}var Ea=t(64),Ba=t(85),Aa=(t(135),t(24),t(47),t(242),t(243),t(39),t(27),{NotFound:function(){return Promise.all([t.e(0),t.e(4)]).then(t.bind(null,517))},Layout:function(){return Promise.all([t.e(0),t.e(2)]).then(t.bind(null,516))}}),Ta={"v-401b3378":function(){return t.e(5).then(t.bind(null,518))},"v-290adcec":function(){return t.e(6).then(t.bind(null,519))},"v-904aff54":function(){return t.e(7).then(t.bind(null,520))},"v-f5e234f0":function(){return t.e(8).then(t.bind(null,521))},"v-6f291376":function(){return t.e(9).then(t.bind(null,522))},"v-a545461e":function(){return t.e(10).then(t.bind(null,523))},"v-4cb6918a":function(){return t.e(11).then(t.bind(null,524))},"v-8358fd22":function(){return t.e(12).then(t.bind(null,525))},"v-6db498ef":function(){return t.e(13).then(t.bind(null,526))},"v-7c6d87af":function(){return t.e(14).then(t.bind(null,527))},"v-7d425d92":function(){return t.e(15).then(t.bind(null,528))},"v-2eb41fe5":function(){return t.e(16).then(t.bind(null,529))},"v-519134e6":function(){return t.e(17).then(t.bind(null,530))},"v-072218bc":function(){return t.e(18).then(t.bind(null,531))},"v-9d3d12d8":function(){return t.e(19).then(t.bind(null,532))},"v-7aea93b6":function(){return t.e(20).then(t.bind(null,533))},"v-3e6f3cf6":function(){return t.e(21).then(t.bind(null,534))},"v-f2d688b6":function(){return t.e(22).then(t.bind(null,535))},"v-ea4028d4":function(){return t.e(23).then(t.bind(null,536))}};function Ia(n){var e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}var Oa=/-(\w)/g,Pa=Ia((function(n){return n.replace(Oa,(function(n,e){return e?e.toUpperCase():""}))})),Ma=/\B([A-Z])/g,La=Ia((function(n){return n.replace(Ma,"-$1").toLowerCase()})),za=Ia((function(n){return n.charAt(0).toUpperCase()+n.slice(1)}));function Ra(n,e){if(e)return n(e)?n(e):e.includes("-")?n(za(Pa(e))):n(za(e))||n(La(e))}var Da=Object.assign({},Aa,Ta),$a=function(n){return Da[n]},Na=function(n){return Ta[n]},Fa=function(n){return Aa[n]},Ja=function(n){return Lo.component(n)};function Ua(n){return Ra(Na,n)}function qa(n){return Ra(Fa,n)}function Ha(n){return Ra($a,n)}function Wa(n){return Ra(Ja,n)}function Va(){for(var n=arguments.length,e=new Array(n),t=0;t<n;t++)e[t]=arguments[t];return Promise.all(e.filter((function(n){return n})).map(function(){var n=Object(o.a)(Object(r.a)().mark((function n(e){var t;return Object(r.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(Wa(e)||!Ha(e)){n.next=5;break}return n.next=3,Ha(e)();case 3:t=n.sent,Lo.component(e,t.default);case 5:case"end":return n.stop()}}),n)})));return function(e){return n.apply(this,arguments)}}()))}function Ga(n,e){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[n]=e)}var Xa=t(150),Ya=(t(134),t(120),t(65),t(230)),Ka=t.n(Ya),Za=t(231),Qa=t.n(Za),ns={created:function(){if(this.siteMeta=this.$site.headTags.filter((function(n){return"meta"===Object(Xa.a)(n,1)[0]})).map((function(n){var e=Object(Xa.a)(n,2);e[0];return e[1]})),this.$ssrContext){var n=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(e=n)?e.map((function(n){var e="<meta";return Object.keys(n).forEach((function(t){e+=" ".concat(t,'="').concat(Qa()(n[t]),'"')})),e+">"})).join("\n    "):"",this.$ssrContext.canonicalLink=ts(this.$canonicalUrl)}var e},mounted:function(){this.currentMetaTags=Object(Ba.a)(document.querySelectorAll("meta")),this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta:function(){document.title=this.$title,document.documentElement.lang=this.$lang;var n=this.getMergedMetaTags();this.currentMetaTags=rs(n,this.currentMetaTags)},getMergedMetaTags:function(){var n=this.$page.frontmatter.meta||[];return Ka()([{name:"description",content:this.$description}],n,this.siteMeta,os)},updateCanonicalLink:function(){es(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",ts(this.$canonicalUrl))}},watch:{$page:function(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy:function(){rs(null,this.currentMetaTags),es()}};function es(){var n=document.querySelector("link[rel='canonical']");n&&n.remove()}function ts(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return n?'<link href="'.concat(n,'" rel="canonical" />'):""}function rs(n,e){if(e&&Object(Ba.a)(e).filter((function(n){return n.parentNode===document.head})).forEach((function(n){return document.head.removeChild(n)})),n)return n.map((function(n){var e=document.createElement("meta");return Object.keys(n).forEach((function(t){e.setAttribute(t,n[t])})),document.head.appendChild(e),e}))}function os(n){for(var e=0,t=["name","property","itemprop"];e<t.length;e++){var r=t[e];if(n.hasOwnProperty(r))return n[r]+r}return JSON.stringify(n)}t(152);var is=t(163),as={mounted:function(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:t.n(is)()((function(){this.setActiveHash()}),300),setActiveHash:function(){for(var n=this,e=[].slice.call(document.querySelectorAll(".sidebar-link")),t=[].slice.call(document.querySelectorAll(".header-anchor")).filter((function(n){return e.some((function(e){return e.hash===n.hash}))})),r=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),o=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),i=window.innerHeight+r,a=0;a<t.length;a++){var s=t[a],c=t[a+1],l=0===a&&0===r||r>=s.parentElement.offsetTop+10&&(!c||r<c.parentElement.offsetTop-10),p=decodeURIComponent(this.$route.hash);if(l&&p!==decodeURIComponent(s.hash)){var u=s;if(i===o)for(var d=a+1;d<t.length;d++)if(p===decodeURIComponent(t[d].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(u.hash),(function(){n.$nextTick((function(){n.$vuepress.$set("disableScrollBehavior",!1)}))}))}}}},beforeDestroy:function(){window.removeEventListener("scroll",this.onScroll)}},ss=(t(70),t(112)),cs=t.n(ss),ls={mounted:function(){var n=this;cs.a.configure({showSpinner:!1}),this.$router.beforeEach((function(n,e,t){n.path===e.path||Lo.component(n.name)||cs.a.start(),t()})),this.$router.afterEach((function(){cs.a.done(),n.isSidebarOpen=!1}))}};t(88),t(44),t(91),t(394);function ps(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}t(82);function us(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}function ds(n,e,t){return e&&us(n.prototype,e),t&&us(n,t),Object.defineProperty(n,"prototype",{writable:!1}),n}t(395);var fs=function(){function n(){ps(this,n);this.containerEl=document.getElementById("message-container"),this.containerEl||(this.containerEl=document.createElement("div"),this.containerEl.id="message-container",document.body.appendChild(this.containerEl))}return ds(n,[{key:"show",value:function(n){var e=this,t=n.text,r=void 0===t?"":t,o=n.duration,i=void 0===o?3e3:o,a=document.createElement("div");a.className="message move-in",a.innerHTML='\n      <i style="fill: #06a35a;font-size: 14px;display:inline-flex;align-items: center;">\n        <svg style="fill: #06a35a;font-size: 14px;" t="1572421810237" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="2323" width="16" height="16"><path d="M822.811993 824.617989c-83.075838 81.99224-188.546032 124.613757-316.049383 127.86455-122.085362-3.250794-223.943563-45.87231-305.935802-127.86455s-124.613757-184.21164-127.86455-305.935802c3.250794-127.503351 45.87231-232.973545 127.86455-316.049383 81.99224-83.075838 184.21164-126.058554 305.935802-129.309347 127.503351 3.250794 232.973545 46.23351 316.049383 129.309347 83.075838 83.075838 126.058554 188.546032 129.309347 316.049383C949.231746 640.406349 905.887831 742.62575 822.811993 824.617989zM432.716755 684.111464c3.973192 3.973192 8.307584 5.779189 13.364374 6.140388 5.05679 0.361199 9.752381-1.444797 13.364374-5.417989l292.571429-287.514638c3.973192-3.973192 5.779189-8.307584 5.779189-13.364374 0-5.05679-1.805996-9.752381-5.779189-13.364374l1.805996 1.805996c-3.973192-3.973192-8.668783-5.779189-14.086772-6.140388-5.417989-0.361199-10.47478 1.444797-14.809171 5.417989l-264.397884 220.33157c-3.973192 3.250794-8.668783 4.695591-14.447972 4.695591-5.779189 0-10.835979-1.444797-15.53157-3.973192l-94.273016-72.962257c-4.334392-3.250794-9.391182-4.334392-14.447972-3.973192s-9.391182 3.250794-12.641975 7.585185l-2.889594 3.973192c-3.250794 4.334392-4.334392 9.391182-3.973192 14.809171 0.722399 5.417989 2.528395 10.11358 5.779189 14.086772L432.716755 684.111464z" p-id="2324"></path></svg>\n      </i>\n      <div class="text">'.concat(r,"</div>\n    "),this.containerEl.appendChild(a),i>0&&setTimeout((function(){e.close(a)}),i)}},{key:"close",value:function(n){n.className=n.className.replace("move-in",""),n.className+="move-out",n.addEventListener("animationend",(function(){n.remove()}))}}]),n}(),gs={mounted:function(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},updated:function(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},methods:{updateCopy:function(){var n=this;setTimeout((function(){(['div[class*="language-"] pre','div[class*="aside-code"] aside']instanceof Array||Array.isArray(['div[class*="language-"] pre','div[class*="aside-code"] aside']))&&['div[class*="language-"] pre','div[class*="aside-code"] aside'].forEach((function(e){document.querySelectorAll(e).forEach(n.generateCopyButton)}))}),1e3)},generateCopyButton:function(n){var e=this;if(!n.classList.contains("codecopy-enabled")){var t=document.createElement("i");t.className="code-copy",t.innerHTML='<svg  style="color:#aaa;font-size:14px" t="1572422231464" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3201" width="14" height="14"><path d="M866.461538 39.384615H354.461538c-43.323077 0-78.769231 35.446154-78.76923 78.769231v39.384616h472.615384c43.323077 0 78.769231 35.446154 78.769231 78.76923v551.384616h39.384615c43.323077 0 78.769231-35.446154 78.769231-78.769231V118.153846c0-43.323077-35.446154-78.769231-78.769231-78.769231z m-118.153846 275.692308c0-43.323077-35.446154-78.769231-78.76923-78.769231H157.538462c-43.323077 0-78.769231 35.446154-78.769231 78.769231v590.769231c0 43.323077 35.446154 78.769231 78.769231 78.769231h512c43.323077 0 78.769231-35.446154 78.76923-78.769231V315.076923z m-354.461538 137.846154c0 11.815385-7.876923 19.692308-19.692308 19.692308h-157.538461c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h157.538461c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z m157.538461 315.076923c0 11.815385-7.876923 19.692308-19.692307 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h315.076923c11.815385 0 19.692308 7.876923 19.692307 19.692308v39.384615z m78.769231-157.538462c0 11.815385-7.876923 19.692308-19.692308 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h393.846153c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z" p-id="3202"></path></svg>',t.title="Copy to clipboard",t.addEventListener("click",(function(){e.copyToClipboard(n.innerText)})),n.appendChild(t),n.classList.add("codecopy-enabled")}},copyToClipboard:function(n){var e=document.createElement("textarea");e.value=n,e.setAttribute("readonly",""),e.style.position="absolute",e.style.left="-9999px",document.body.appendChild(e);var t=document.getSelection().rangeCount>0&&document.getSelection().getRangeAt(0);e.select(),document.execCommand("copy"),(new fs).show({text:"复制成功",duration:1e3}),document.body.removeChild(e),t&&(document.getSelection().removeAllRanges(),document.getSelection().addRange(t))}}};t(245),t(87),t(151),t(154),t(148);!function(n,e){void 0===e&&(e={});var t=e.insertAt;if(n&&"undefined"!=typeof document){var r=document.head||document.getElementsByTagName("head")[0],o=document.createElement("style");o.type="text/css","top"===t&&r.firstChild?r.insertBefore(o,r.firstChild):r.appendChild(o),o.styleSheet?o.styleSheet.cssText=n:o.appendChild(document.createTextNode(n))}}("@media (max-width: 1000px) {\n  .vuepress-plugin-demo-block__h_code {\n    display: none;\n  }\n  .vuepress-plugin-demo-block__app {\n    margin-left: auto !important;\n    margin-right: auto !important;\n  }\n}\n.vuepress-plugin-demo-block__wrapper {\n  margin-top: 10px;\n  border: 1px solid #ebebeb;\n  border-radius: 4px;\n  transition: all 0.2s;\n}\n.vuepress-plugin-demo-block__wrapper.vuepress-plugin-demo-block__horizontal .vuepress-plugin-demo-block__display {\n  height: 400px;\n  display: flex;\n}\n.vuepress-plugin-demo-block__wrapper.vuepress-plugin-demo-block__horizontal .vuepress-plugin-demo-block__display .vuepress-plugin-demo-block__app {\n  width: 300px;\n  border: 1px solid #ebebeb;\n  box-shadow: 1px 1px 3px #ebebeb;\n  margin-right: 5px;\n  overflow: auto;\n}\n.vuepress-plugin-demo-block__wrapper.vuepress-plugin-demo-block__horizontal .vuepress-plugin-demo-block__display .vuepress-plugin-demo-block__h_code {\n  flex: 1;\n  overflow: auto;\n  height: 100%;\n}\n.vuepress-plugin-demo-block__wrapper.vuepress-plugin-demo-block__horizontal .vuepress-plugin-demo-block__display .vuepress-plugin-demo-block__h_code > pre {\n  overflow: visible;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__display {\n  max-height: 400px;\n  overflow: auto;\n}\n.vuepress-plugin-demo-block__wrapper div {\n  box-sizing: border-box;\n}\n.vuepress-plugin-demo-block__wrapper:hover {\n  box-shadow: 0 0 11px rgba(33, 33, 33, 0.2);\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__code {\n  overflow: hidden;\n  height: 0;\n  padding: 0 !important;\n  background-color: #282c34;\n  border-radius: 0 !important;\n  transition: height 0.5s;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__code pre {\n  margin: 0 !important;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__display {\n  padding: 20px;\n  border-bottom: 1px solid #ebebeb;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer {\n  position: relative;\n  text-align: center;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer.vuepress-plugin-demo-block__show-link .vuepress-plugin-demo-block__jsfiddle,\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer.vuepress-plugin-demo-block__show-link .vuepress-plugin-demo-block__codepen {\n  opacity: 1;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer.vuepress-plugin-demo-block__show-link .vuepress-plugin-demo-block__expand::before {\n  border-top: none;\n  border-right: 6px solid transparent;\n  border-bottom: 6px solid #ccc;\n  border-left: 6px solid transparent;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover .vuepress-plugin-demo-block__jsfiddle,\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover .vuepress-plugin-demo-block__codepen,\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover .vuepress-plugin-demo-block__expand span,\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover .vuepress-plugin-demo-block__expand {\n  opacity: 1;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover .vuepress-plugin-demo-block__expand::before {\n  border-top-color: #3eaf7c !important;\n  border-bottom-color: #3eaf7c !important;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover svg {\n  fill: #3eaf7c !important;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__expand-text {\n  transition: all 0.5s;\n  opacity: 0;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer form:nth-last-child(2) {\n  right: 50px;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer form:last-child {\n  right: 10px;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__button {\n  border-color: transparent;\n  background-color: transparent;\n  font-size: 14px;\n  color: #3eaf7c;\n  cursor: pointer;\n  outline: none;\n  margin: 0;\n  width: 46px;\n  position: relative;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__button:hover::before {\n  content: attr(data-tip);\n  white-space: nowrap;\n  position: absolute;\n  top: -30px;\n  left: 50%;\n  color: #eee;\n  line-height: 1;\n  z-index: 1000;\n  border-radius: 4px;\n  padding: 6px;\n  -webkit-transform: translateX(-50%);\n          transform: translateX(-50%);\n  background-color: rgba(0, 0, 0, 0.8);\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__button:hover::after {\n  content: '' !important;\n  display: block;\n  position: absolute;\n  left: 50%;\n  top: -5px;\n  -webkit-transform: translateX(-50%);\n          transform: translateX(-50%);\n  border: 5px solid transparent;\n  border-top-color: rgba(0, 0, 0, 0.8);\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__button svg {\n  width: 34px;\n  height: 20px;\n  fill: #ccc;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__jsfiddle,\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__codepen {\n  position: absolute;\n  top: 10px;\n  transition: all 0.5s;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__expand {\n  position: relative;\n  width: 100px;\n  height: 40px;\n  margin: 0;\n  color: #3eaf7c;\n  font-size: 14px;\n  background-color: transparent;\n  border-color: transparent;\n  outline: none;\n  transition: all 0.5s;\n  cursor: pointer;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__expand::before {\n  content: \"\";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 0;\n  height: 0;\n  border-top: 6px solid #ccc;\n  border-right: 6px solid transparent;\n  border-left: 6px solid transparent;\n  -webkit-transform: translate(-50%, -50%);\n          transform: translate(-50%, -50%);\n}\n");var ms={jsLib:[],cssLib:[],jsfiddle:!0,codepen:!0,codepenLayout:"left",codepenJsProcessor:"babel",codepenEditors:"101",horizontal:!1,vue:"https://cdn.jsdelivr.net/npm/vue/dist/vue.min.js",react:"https://cdn.jsdelivr.net/npm/react/umd/react.production.min.js",reactDOM:"https://cdn.jsdelivr.net/npm/react-dom/umd/react-dom.production.min.js"},hs={},vs=function(n){return'<div id="app">\n'.concat(n,"\n</div>")},bs=function(n){return window.$VUEPRESS_DEMO_BLOCK&&void 0!==window.$VUEPRESS_DEMO_BLOCK[n]?window.$VUEPRESS_DEMO_BLOCK[n]:ms[n]},ys=function n(e,t,r){var o=document.createElement(e);return t&&Object.keys(t).forEach((function(n){if(n.indexOf("data"))o[n]=t[n];else{var e=n.replace("data","");o.dataset[e]=t[n]}})),r&&r.forEach((function(e){var t=e.tag,r=e.attrs,i=e.children;o.appendChild(n(t,r,i))})),o},xs=function(n,e,t){var r,o=(r=n.querySelectorAll(".".concat(e)),Array.prototype.slice.call(r));return 1!==o.length||t?o:o[0]},Ss=function(n,e){var t,r,o=n.match(/<style>([\s\S]+)<\/style>/),i=n.match(/<template>([\s\S]+)<\/template>/),a=n.match(/<script>([\s\S]+)<\/script>/),s={css:o&&o[1].replace(/^\n|\n$/g,""),html:i&&i[1].replace(/^\n|\n$/g,""),js:a&&a[1].replace(/^\n|\n$/g,""),jsLib:e.jsLib||[],cssLib:e.cssLib||[]};s.htmlTpl=vs(s.html),s.jsTpl=(t=s.js,r=t.replace(/export\s+default\s*?\{\n*/,"").replace(/\n*\}\s*$/,"").trim(),"new Vue({\n  el: '#app',\n  ".concat(r,"\n})")),s.script=function(n,e){var t=n.split(/export\s+default/),r="(function() {".concat(t[0]," ; return ").concat(t[1],"})()"),o=window.Babel?window.Babel.transform(r,{presets:["es2015"]}).code:r,i=[eval][0](o);return i.template=e,i}(s.js,s.html);var c=bs("vue");return s.jsLib.unshift(c),s},_s=function(n,e){var t,r=n.match(/<style>([\s\S]+)<\/style>/),o=n.match(/<html>([\s\S]+)<\/html>/),i=n.match(/<script>([\s\S]+)<\/script>/),a={css:r&&r[1].replace(/^\n|\n$/g,""),html:o&&o[1].replace(/^\n|\n$/g,""),js:i&&i[1].replace(/^\n|\n$/g,""),jsLib:e.jsLib||[],cssLib:e.cssLib||[]};return a.htmlTpl=a.html,a.jsTpl=a.js,a.script=(t=a.js,window.Babel?window.Babel.transform(t,{presets:["es2015"]}).code:t),a},ws=function(n){return n=n.replace("export default ","").replace(/App\.__style__(\s*)=(\s*)`([\s\S]*)?`/,""),n+='ReactDOM.render(React.createElement(App), document.getElementById("app"))'};function js(){var n=xs(document,"vuepress-plugin-demo-block__wrapper",!0);n.length?n.forEach((function(n){if("true"!==n.dataset.created){n.style.display="block";var e=xs(n,"vuepress-plugin-demo-block__code"),t=xs(n,"vuepress-plugin-demo-block__display"),r=xs(n,"vuepress-plugin-demo-block__footer"),o=xs(t,"vuepress-plugin-demo-block__app"),i=decodeURIComponent(n.dataset.code),a=decodeURIComponent(n.dataset.config),s=decodeURIComponent(n.dataset.type);a=a?JSON.parse(a):{};var c=e.querySelector("div").clientHeight,l="react"===s?function(n,e){var t=(0,window.Babel.transform)(n,{presets:["es2015","react"]}).code,r="(function(exports){var module={};module.exports=exports;".concat(t,";return module.exports.__esModule?module.exports.default:module.exports;})({})"),o=new Function("return ".concat(r))(),i={js:o,css:o.__style__||"",jsLib:e.jsLib||[],cssLib:e.cssLib||[],jsTpl:ws(n),htmlTpl:vs("")},a=bs("react"),s=bs("reactDOM");return i.jsLib.unshift(a,s),i}(i,a):"vanilla"===s?_s(i,a):Ss(i,a),p=ys("button",{className:"".concat("vuepress-plugin-demo-block__expand")});if(r.appendChild(p),p.addEventListener("click",Cs.bind(null,p,c,e,r)),bs("jsfiddle")&&r.appendChild(function(n){var e=n.css,t=n.htmlTpl,r=n.jsTpl,o=n.jsLib,i=n.cssLib,a=o.concat(i).concat(bs("cssLib")).concat(bs("jsLib")).join(",");return ys("form",{className:"vuepress-plugin-demo-block__jsfiddle",target:"_blank",action:"https://jsfiddle.net/api/post/library/pure/",method:"post"},[{tag:"input",attrs:{type:"hidden",name:"css",value:e}},{tag:"input",attrs:{type:"hidden",name:"html",value:t}},{tag:"input",attrs:{type:"hidden",name:"js",value:r}},{tag:"input",attrs:{type:"hidden",name:"panel_js",value:3}},{tag:"input",attrs:{type:"hidden",name:"wrap",value:1}},{tag:"input",attrs:{type:"hidden",name:"resources",value:a}},{tag:"button",attrs:{type:"submit",className:"vuepress-plugin-demo-block__button",innerHTML:'<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg t="1547088289967" class="icon" style="" viewBox="0 0 1170 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="1952" xmlns:xlink="http://www.w3.org/1999/xlink" width="228.515625" height="200"><defs><style type="text/css"></style></defs><path d="M1028.571429 441.142857q63.428571 26.285714 102.571428 83.142857T1170.285714 650.857143q0 93.714286-67.428571 160.285714T940 877.714286q-2.285714 0-6.571429-0.285715t-6-0.285714H232q-97.142857-5.714286-164.571429-71.714286T0 645.142857q0-62.857143 31.428571-116t84-84q-6.857143-22.285714-6.857142-46.857143 0-65.714286 46.857142-112t113.714286-46.285714q54.285714 0 98.285714 33.142857 42.857143-88 127.142858-141.714286t186.571428-53.714285q94.857143 0 174.857143 46T982.571429 248.571429t46.571428 172q0 3.428571-0.285714 10.285714t-0.285714 10.285714zM267.428571 593.142857q0 69.714286 48 110.285714t118.857143 40.571429q78.285714 0 137.142857-56.571429-9.142857-11.428571-27.142857-32.285714T519.428571 626.285714q-38.285714 37.142857-82.285714 37.142857-31.428571 0-53.428571-19.142857T361.714286 594.285714q0-30.285714 22-49.714285t52.285714-19.428572q25.142857 0 48.285714 12t41.714286 31.428572 37.142857 42.857142 39.428572 46.857143 44 42.857143 55.428571 31.428572 69.428571 12q69.142857 0 116.857143-40.857143T936 594.857143q0-69.142857-48-109.714286t-118.285714-40.571428q-81.714286 0-137.714286 55.428571l53.142857 61.714286q37.714286-36.571429 81.142857-36.571429 29.714286 0 52.571429 18.857143t22.857143 48q0 32.571429-21.142857 52.285714t-53.714286 19.714286q-24.571429 0-47.142857-12t-41.142857-31.428571-37.428572-42.857143-39.714286-46.857143-44.285714-42.857143-55.142857-31.428571T434.285714 444.571429q-69.714286 0-118.285714 40.285714T267.428571 593.142857z" p-id="1953"></path></svg>',datatip:"JSFiddle"}}])}(l)),bs("codepen")&&r.appendChild(function(n){var e=n.css,t=n.htmlTpl,r=n.jsTpl,o=n.jsLib,i=n.cssLib,a=JSON.stringify({css:e,html:t,js:r,js_external:o.concat(bs("jsLib")).join(";"),css_external:i.concat(bs("cssLib")).join(";"),layout:bs("codepenLayout"),js_pre_processor:bs("codepenJsProcessor"),editors:bs("codepenEditors")});return ys("form",{className:"vuepress-plugin-demo-block__codepen",target:"_blank",action:"https://codepen.io/pen/define",method:"post"},[{tag:"input",attrs:{type:"hidden",name:"data",value:a}},{tag:"button",attrs:{type:"submit",innerHTML:'<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg t="1547088271207" class="icon" style="" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="1737" xmlns:xlink="http://www.w3.org/1999/xlink" width="200" height="200"><defs><style type="text/css"></style></defs><path d="M123.428571 668l344.571429 229.714286v-205.142857L277.142857 565.142857z m-35.428571-82.285714l110.285714-73.714286-110.285714-73.714286v147.428572z m468 312l344.571429-229.714286-153.714286-102.857143-190.857143 127.428572v205.142857z m-44-281.714286l155.428571-104-155.428571-104-155.428571 104zM277.142857 458.857143l190.857143-127.428572V126.285714L123.428571 356z m548.571429 53.142857l110.285714 73.714286V438.285714z m-78.857143-53.142857l153.714286-102.857143-344.571429-229.714286v205.142857z m277.142857-102.857143v312q0 23.428571-19.428571 36.571429l-468 312q-12 7.428571-24.571429 7.428571t-24.571429-7.428571L19.428571 704.571429q-19.428571-13.142857-19.428571-36.571429V356q0-23.428571 19.428571-36.571429L487.428571 7.428571q12-7.428571 24.571429-7.428571t24.571429 7.428571l468 312q19.428571 13.142857 19.428571 36.571429z" p-id="1738"></path></svg>',className:"vuepress-plugin-demo-block__button",datatip:"Codepen"}}])}(l)),void 0!==a.horizontal?a.horizontal:bs("horizontal")){n.classList.add("vuepress-plugin-demo-block__horizontal");var u=e.firstChild.cloneNode(!0);u.classList.add("vuepress-plugin-demo-block__h_code"),t.appendChild(u)}if(l.css&&function(n){if(!hs[n]){var e=ys("style",{innerHTML:n});document.body.appendChild(e),hs[n]=!0}}(l.css),"react"===s)ReactDOM.render(React.createElement(l.js),o);else if("vue"===s){var d=(new(Vue.extend(l.script))).$mount();o.appendChild(d.$el)}else"vanilla"===s&&(o.innerHTML=l.html,new Function("return (function(){".concat(l.script,"})()"))());n.dataset.created="true"}})):setTimeout((function(n){js()}),300)}function Cs(n,e,t,r){var o="1"!==n.dataset.isExpand;t.style.height=o?"".concat(e,"px"):0,o?r.classList.add("vuepress-plugin-demo-block__show-link"):r.classList.remove("vuepress-plugin-demo-block__show-link"),n.dataset.isExpand=o?"1":"0"}var ks={mounted:function(){window.$VUEPRESS_DEMO_BLOCK={jsfiddle:!1,codepen:!0,horizontal:!1},js()},updated:function(){js()}},Es=(t(235),"auto"),Bs="zoom-in",As="zoom-out",Ts="grab",Is="move";function Os(n,e,t){var r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],o={passive:!1};r?n.addEventListener(e,t,o):n.removeEventListener(e,t,o)}function Ps(n,e){if(n){var t=new Image;t.onload=function(){e&&e(t)},t.src=n}}function Ms(n){return n.dataset.original?n.dataset.original:"A"===n.parentNode.tagName?n.parentNode.getAttribute("href"):null}function Ls(n,e,t){!function(n){var e=zs,t=Rs;if(n.transition){var r=n.transition;delete n.transition,n[e]=r}if(n.transform){var o=n.transform;delete n.transform,n[t]=o}}(e);var r=n.style,o={};for(var i in e)t&&(o[i]=r[i]||""),r[i]=e[i];return o}var zs="transition",Rs="transform",Ds="transform",$s="transitionend";var Ns=function(){},Fs={enableGrab:!0,preloadImage:!1,closeOnWindowResize:!0,transitionDuration:.4,transitionTimingFunction:"cubic-bezier(0.4, 0, 0, 1)",bgColor:"rgb(255, 255, 255)",bgOpacity:1,scaleBase:1,scaleExtra:.5,scrollThreshold:40,zIndex:998,customSize:null,onOpen:Ns,onClose:Ns,onGrab:Ns,onMove:Ns,onRelease:Ns,onBeforeOpen:Ns,onBeforeClose:Ns,onBeforeGrab:Ns,onBeforeRelease:Ns,onImageLoading:Ns,onImageLoaded:Ns},Js={init:function(n){var e,t;e=this,t=n,Object.getOwnPropertyNames(Object.getPrototypeOf(e)).forEach((function(n){e[n]=e[n].bind(t)}))},click:function(n){if(n.preventDefault(),qs(n))return window.open(this.target.srcOriginal||n.currentTarget.src,"_blank");this.shown?this.released?this.close():this.release():this.open(n.currentTarget)},scroll:function(){var n=document.documentElement||document.body.parentNode||document.body,e=window.pageXOffset||n.scrollLeft,t=window.pageYOffset||n.scrollTop;null===this.lastScrollPosition&&(this.lastScrollPosition={x:e,y:t});var r=this.lastScrollPosition.x-e,o=this.lastScrollPosition.y-t,i=this.options.scrollThreshold;(Math.abs(o)>=i||Math.abs(r)>=i)&&(this.lastScrollPosition=null,this.close())},keydown:function(n){(function(n){return"Escape"===(n.key||n.code)||27===n.keyCode})(n)&&(this.released?this.close():this.release(this.close))},mousedown:function(n){if(Us(n)&&!qs(n)){n.preventDefault();var e=n.clientX,t=n.clientY;this.pressTimer=setTimeout(function(){this.grab(e,t)}.bind(this),200)}},mousemove:function(n){this.released||this.move(n.clientX,n.clientY)},mouseup:function(n){Us(n)&&!qs(n)&&(clearTimeout(this.pressTimer),this.released?this.close():this.release())},touchstart:function(n){n.preventDefault();var e=n.touches[0],t=e.clientX,r=e.clientY;this.pressTimer=setTimeout(function(){this.grab(t,r)}.bind(this),200)},touchmove:function(n){if(!this.released){var e=n.touches[0],t=e.clientX,r=e.clientY;this.move(t,r)}},touchend:function(n){(function(n){n.targetTouches.length})(n)||(clearTimeout(this.pressTimer),this.released?this.close():this.release())},clickOverlay:function(){this.close()},resizeWindow:function(){this.close()}};function Us(n){return 0===n.button}function qs(n){return n.metaKey||n.ctrlKey}var Hs={init:function(n){this.el=document.createElement("div"),this.instance=n,this.parent=document.body,Ls(this.el,{position:"fixed",top:0,left:0,right:0,bottom:0,opacity:0}),this.updateStyle(n.options),Os(this.el,"click",n.handler.clickOverlay.bind(n))},updateStyle:function(n){Ls(this.el,{zIndex:n.zIndex,backgroundColor:n.bgColor,transition:"opacity\n        "+n.transitionDuration+"s\n        "+n.transitionTimingFunction})},insert:function(){this.parent.appendChild(this.el)},remove:function(){this.parent.removeChild(this.el)},fadeIn:function(){this.el.offsetWidth,this.el.style.opacity=this.instance.options.bgOpacity},fadeOut:function(){this.el.style.opacity=0}},Ws="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Vs=function(){function n(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}return function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}}(),Gs=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},Xs={init:function(n,e){this.el=n,this.instance=e,this.srcThumbnail=this.el.getAttribute("src"),this.srcset=this.el.getAttribute("srcset"),this.srcOriginal=Ms(this.el),this.rect=this.el.getBoundingClientRect(),this.translate=null,this.scale=null,this.styleOpen=null,this.styleClose=null},zoomIn:function(){var n=this.instance.options,e=n.zIndex,t=n.enableGrab,r=n.transitionDuration,o=n.transitionTimingFunction;this.translate=this.calculateTranslate(),this.scale=this.calculateScale(),this.styleOpen={position:"relative",zIndex:e+1,cursor:t?Ts:As,transition:Ds+"\n        "+r+"s\n        "+o,transform:"translate3d("+this.translate.x+"px, "+this.translate.y+"px, 0px)\n        scale("+this.scale.x+","+this.scale.y+")",height:this.rect.height+"px",width:this.rect.width+"px"},this.el.offsetWidth,this.styleClose=Ls(this.el,this.styleOpen,!0)},zoomOut:function(){this.el.offsetWidth,Ls(this.el,{transform:"none"})},grab:function(n,e,t){var r=Ys(),o=r.x-n,i=r.y-e;Ls(this.el,{cursor:Is,transform:"translate3d(\n        "+(this.translate.x+o)+"px, "+(this.translate.y+i)+"px, 0px)\n        scale("+(this.scale.x+t)+","+(this.scale.y+t)+")"})},move:function(n,e,t){var r=Ys(),o=r.x-n,i=r.y-e;Ls(this.el,{transition:Ds,transform:"translate3d(\n        "+(this.translate.x+o)+"px, "+(this.translate.y+i)+"px, 0px)\n        scale("+(this.scale.x+t)+","+(this.scale.y+t)+")"})},restoreCloseStyle:function(){Ls(this.el,this.styleClose)},restoreOpenStyle:function(){Ls(this.el,this.styleOpen)},upgradeSource:function(){if(this.srcOriginal){var n=this.el.parentNode;this.srcset&&this.el.removeAttribute("srcset");var e=this.el.cloneNode(!1);e.setAttribute("src",this.srcOriginal),e.style.position="fixed",e.style.visibility="hidden",n.appendChild(e),setTimeout(function(){this.el.setAttribute("src",this.srcOriginal),n.removeChild(e)}.bind(this),50)}},downgradeSource:function(){this.srcOriginal&&(this.srcset&&this.el.setAttribute("srcset",this.srcset),this.el.setAttribute("src",this.srcThumbnail))},calculateTranslate:function(){var n=Ys(),e=this.rect.left+this.rect.width/2,t=this.rect.top+this.rect.height/2;return{x:n.x-e,y:n.y-t}},calculateScale:function(){var n=this.el.dataset,e=n.zoomingHeight,t=n.zoomingWidth,r=this.instance.options,o=r.customSize,i=r.scaleBase;if(!o&&e&&t)return{x:t/this.rect.width,y:e/this.rect.height};if(o&&"object"===(void 0===o?"undefined":Ws(o)))return{x:o.width/this.rect.width,y:o.height/this.rect.height};var a=this.rect.width/2,s=this.rect.height/2,c=Ys(),l={x:c.x-a,y:c.y-s},p=l.x/a,u=l.y/s,d=i+Math.min(p,u);if(o&&"string"==typeof o){var f=t||this.el.naturalWidth,g=e||this.el.naturalHeight,m=parseFloat(o)*f/(100*this.rect.width),h=parseFloat(o)*g/(100*this.rect.height);if(d>m||d>h)return{x:m,y:h}}return{x:d,y:d}}};function Ys(){var n=document.documentElement;return{x:Math.min(n.clientWidth,window.innerWidth)/2,y:Math.min(n.clientHeight,window.innerHeight)/2}}function Ks(n,e,t){["mousedown","mousemove","mouseup","touchstart","touchmove","touchend"].forEach((function(r){Os(n,r,e[r],t)}))}var Zs=function(){function n(e){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.target=Object.create(Xs),this.overlay=Object.create(Hs),this.handler=Object.create(Js),this.body=document.body,this.shown=!1,this.lock=!1,this.released=!0,this.lastScrollPosition=null,this.pressTimer=null,this.options=Gs({},Fs,e),this.overlay.init(this),this.handler.init(this)}return Vs(n,[{key:"listen",value:function(n){if("string"==typeof n)for(var e=document.querySelectorAll(n),t=e.length;t--;)this.listen(e[t]);else"IMG"===n.tagName&&(n.style.cursor=Bs,Os(n,"click",this.handler.click),this.options.preloadImage&&Ps(Ms(n)));return this}},{key:"config",value:function(n){return n?(Gs(this.options,n),this.overlay.updateStyle(this.options),this):this.options}},{key:"open",value:function(n){var e=this,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.options.onOpen;if(!this.shown&&!this.lock){var r="string"==typeof n?document.querySelector(n):n;if("IMG"===r.tagName){if(this.options.onBeforeOpen(r),this.target.init(r,this),!this.options.preloadImage){var o=this.target.srcOriginal;null!=o&&(this.options.onImageLoading(r),Ps(o,this.options.onImageLoaded))}this.shown=!0,this.lock=!0,this.target.zoomIn(),this.overlay.insert(),this.overlay.fadeIn(),Os(document,"scroll",this.handler.scroll),Os(document,"keydown",this.handler.keydown),this.options.closeOnWindowResize&&Os(window,"resize",this.handler.resizeWindow);var i=function n(){Os(r,$s,n,!1),e.lock=!1,e.target.upgradeSource(),e.options.enableGrab&&Ks(document,e.handler,!0),t(r)};return Os(r,$s,i),this}}}},{key:"close",value:function(){var n=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.onClose;if(this.shown&&!this.lock){var t=this.target.el;this.options.onBeforeClose(t),this.lock=!0,this.body.style.cursor=Es,this.overlay.fadeOut(),this.target.zoomOut(),Os(document,"scroll",this.handler.scroll,!1),Os(document,"keydown",this.handler.keydown,!1),this.options.closeOnWindowResize&&Os(window,"resize",this.handler.resizeWindow,!1);var r=function r(){Os(t,$s,r,!1),n.shown=!1,n.lock=!1,n.target.downgradeSource(),n.options.enableGrab&&Ks(document,n.handler,!1),n.target.restoreCloseStyle(),n.overlay.remove(),e(t)};return Os(t,$s,r),this}}},{key:"grab",value:function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.options.scaleExtra,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.options.onGrab;if(this.shown&&!this.lock){var o=this.target.el;this.options.onBeforeGrab(o),this.released=!1,this.target.grab(n,e,t);var i=function n(){Os(o,$s,n,!1),r(o)};return Os(o,$s,i),this}}},{key:"move",value:function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.options.scaleExtra,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.options.onMove;if(this.shown&&!this.lock){this.released=!1,this.body.style.cursor=Is,this.target.move(n,e,t);var o=this.target.el,i=function n(){Os(o,$s,n,!1),r(o)};return Os(o,$s,i),this}}},{key:"release",value:function(){var n=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.onRelease;if(this.shown&&!this.lock){var t=this.target.el;this.options.onBeforeRelease(t),this.lock=!0,this.body.style.cursor=Es,this.target.restoreOpenStyle();var r=function r(){Os(t,$s,r,!1),n.lock=!1,n.released=!0,e(t)};return Os(t,$s,r),this}}}]),n}(),Qs=".theme-vdoing-content img:not(.no-zoom)",nc=JSON.parse('{"bgColor":"rgba(0,0,0,0.6)"}'),ec=Number("500"),tc=function(){function n(){ps(this,n),this.instance=new Zs(nc)}return ds(n,[{key:"update",value:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Qs;"undefined"!=typeof window&&this.instance.listen(n)}},{key:"updateDelay",value:function(){var n=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Qs,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:ec;setTimeout((function(){return n.update(e)}),t)}}]),n}(),rc=[ns,as,ls,gs,ks,{watch:{"$page.path":function(){void 0!==this.$vuepress.zooming&&this.$vuepress.zooming.updateDelay()}},mounted:function(){this.$vuepress.zooming=new tc,this.$vuepress.zooming.updateDelay()}}],oc={name:"GlobalLayout",computed:{layout:function(){var n=this.getLayout();return Ga("layout",n),Lo.component(n)}},methods:{getLayout:function(){if(this.$page.path){var n=this.$page.frontmatter.layout;return n&&(this.$vuepress.getLayoutAsyncComponent(n)||this.$vuepress.getVueComponent(n))?n:"Layout"}return"NotFound"}}},ic=t(23),ac=Object(ic.a)(oc,(function(){var n=this.$createElement;return(this._self._c||n)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(n,e,t){var r;switch(e){case"components":n[e]||(n[e]={}),Object.assign(n[e],t);break;case"mixins":n[e]||(n[e]=[]),(r=n[e]).push.apply(r,Object(Ba.a)(t));break;default:throw new Error("Unknown option name.")}}(ac,"mixins",rc);var sc=[{name:"v-401b3378",path:"/pages/430f53/",component:ac,beforeEnter:function(n,e,t){Va("Layout","v-401b3378").then(t)}},{path:"/pages/430f53/index.html",redirect:"/pages/430f53/"},{path:"/10.Java/13.框架/02.SpringBoot/00.SpringBoot综合/01.SpringBoot知识图谱.html",redirect:"/pages/430f53/"},{name:"v-290adcec",path:"/pages/dbf521/",component:ac,beforeEnter:function(n,e,t){Va("Layout","v-290adcec").then(t)}},{path:"/pages/dbf521/index.html",redirect:"/pages/dbf521/"},{path:"/10.Java/13.框架/02.SpringBoot/00.SpringBoot综合/02.SpringBoot基本原理.html",redirect:"/pages/dbf521/"},{name:"v-904aff54",path:"/pages/950e4d/",component:ac,beforeEnter:function(n,e,t){Va("Layout","v-904aff54").then(t)}},{path:"/pages/950e4d/index.html",redirect:"/pages/950e4d/"},{path:"/10.Java/13.框架/02.SpringBoot/01.SpringBoot基础/01.SpringBoot之快速入门.html",redirect:"/pages/950e4d/"},{name:"v-f5e234f0",path:"/pages/0fb992/",component:ac,beforeEnter:function(n,e,t){Va("Layout","v-f5e234f0").then(t)}},{path:"/pages/0fb992/index.html",redirect:"/pages/0fb992/"},{path:"/10.Java/13.框架/02.SpringBoot/01.SpringBoot基础/02.SpringBoot之属性加载.html",redirect:"/pages/0fb992/"},{name:"v-6f291376",path:"/pages/cb598e/",component:ac,beforeEnter:function(n,e,t){Va("Layout","v-6f291376").then(t)}},{path:"/pages/cb598e/index.html",redirect:"/pages/cb598e/"},{path:"/10.Java/13.框架/02.SpringBoot/01.SpringBoot基础/03.SpringBoot之Profile.html",redirect:"/pages/cb598e/"},{name:"v-a545461e",path:"/pages/ad0516/",component:ac,beforeEnter:function(n,e,t){Va("Layout","v-a545461e").then(t)}},{path:"/pages/ad0516/index.html",redirect:"/pages/ad0516/"},{path:"/10.Java/13.框架/02.SpringBoot/02.SpringBootWeb/01.SpringBoot之应用EasyUI.html",redirect:"/pages/ad0516/"},{name:"v-4cb6918a",path:"/pages/cf19fd/",component:ac,beforeEnter:function(n,e,t){Va("Layout","v-4cb6918a").then(t)}},{path:"/pages/cf19fd/index.html",redirect:"/pages/cf19fd/"},{path:"/10.Java/13.框架/02.SpringBoot/03.SpringBoot数据/01.SpringBoot之JDBC.html",redirect:"/pages/cf19fd/"},{name:"v-8358fd22",path:"/pages/88219e/",component:ac,beforeEnter:function(n,e,t){Va("Layout","v-8358fd22").then(t)}},{path:"/pages/88219e/index.html",redirect:"/pages/88219e/"},{path:"/10.Java/13.框架/02.SpringBoot/03.SpringBoot数据/11.SpringBoot之Mybatis.html",redirect:"/pages/88219e/"},{name:"v-6db498ef",path:"/pages/fac14c/",component:ac,beforeEnter:function(n,e,t){Va("Layout","v-6db498ef").then(t)}},{path:"/pages/fac14c/index.html",redirect:"/pages/fac14c/"},{path:"/10.Java/13.框架/02.SpringBoot/03.SpringBoot数据/22.SpringBoot之Elasticsearch.html",redirect:"/pages/fac14c/"},{name:"v-7c6d87af",path:"/pages/db2a41/",component:ac,beforeEnter:function(n,e,t){Va("Layout","v-7c6d87af").then(t)}},{path:"/pages/db2a41/index.html",redirect:"/pages/db2a41/"},{path:"/10.Java/13.框架/02.SpringBoot/03.SpringBoot数据/23.SpringBoot之MongoDB.html",redirect:"/pages/db2a41/"},{name:"v-7d425d92",path:"/pages/92add2/",component:ac,beforeEnter:function(n,e,t){Va("Layout","v-7d425d92").then(t)}},{path:"/pages/92add2/index.html",redirect:"/pages/92add2/"},{path:"/10.Java/13.框架/02.SpringBoot/04.SpringBootIO/01.SpringBoot之异步请求.html",redirect:"/pages/92add2/"},{name:"v-2eb41fe5",path:"/pages/676725/",component:ac,beforeEnter:function(n,e,t){Va("Layout","v-2eb41fe5").then(t)}},{path:"/pages/676725/index.html",redirect:"/pages/676725/"},{path:"/10.Java/13.框架/02.SpringBoot/04.SpringBootIO/02.SpringBoot之Json.html",redirect:"/pages/676725/"},{name:"v-519134e6",path:"/pages/2586f1/",component:ac,beforeEnter:function(n,e,t){Va("Layout","v-519134e6").then(t)}},{path:"/pages/2586f1/index.html",redirect:"/pages/2586f1/"},{path:"/10.Java/13.框架/02.SpringBoot/04.SpringBootIO/03.SpringBoot之邮件.html",redirect:"/pages/2586f1/"},{name:"v-072218bc",path:"/pages/568352/",component:ac,beforeEnter:function(n,e,t){Va("Layout","v-072218bc").then(t)}},{path:"/pages/568352/index.html",redirect:"/pages/568352/"},{path:"/10.Java/13.框架/02.SpringBoot/10.SpringBoot安全/01.SpringBoot之安全快速入门.html",redirect:"/pages/568352/"},{name:"v-9d3d12d8",path:"/pages/bac2ce/",component:ac,beforeEnter:function(n,e,t){Va("Layout","v-9d3d12d8").then(t)}},{path:"/pages/bac2ce/index.html",redirect:"/pages/bac2ce/"},{path:"/10.Java/13.框架/02.SpringBoot/99.SpringBoot其他/01.SpringBoot之banner定制.html",redirect:"/pages/bac2ce/"},{name:"v-7aea93b6",path:"/archives/",component:ac,beforeEnter:function(n,e,t){Va("Layout","v-7aea93b6").then(t)}},{path:"/archives/index.html",redirect:"/archives/"},{path:"/@pages/archivesPage.html",redirect:"/archives/"},{name:"v-3e6f3cf6",path:"/categories/",component:ac,beforeEnter:function(n,e,t){Va("Layout","v-3e6f3cf6").then(t)}},{path:"/categories/index.html",redirect:"/categories/"},{path:"/@pages/categoriesPage.html",redirect:"/categories/"},{name:"v-f2d688b6",path:"/tags/",component:ac,beforeEnter:function(n,e,t){Va("Layout","v-f2d688b6").then(t)}},{path:"/tags/index.html",redirect:"/tags/"},{path:"/@pages/tagsPage.html",redirect:"/tags/"},{name:"v-ea4028d4",path:"/",component:ac,beforeEnter:function(n,e,t){Va("Layout","v-ea4028d4").then(t)}},{path:"/index.html",redirect:"/"},{path:"*",component:ac}],cc={title:"SPRING BOOT TUTORIAL",description:"💧 spring-boot-tutorial 是个人的技术文档归档仓库。",base:"/spring-boot-tutorial/",headTags:[["link",{rel:"icon",href:"/spring-boot-tutorial/img/favicon.ico"}],["meta",{name:"keywords",content:"vuepress,theme,blog,vdoing"}],["meta",{name:"theme-color",content:"#11a8cd"}]],pages:[{title:"SpringBoot 知识图谱",frontmatter:{title:"SpringBoot 知识图谱",date:"2020-08-12T07:01:26.000Z",categories:["Java","框架","SpringBoot","SpringBoot综合"],tags:["Java","框架","Spring","SpringBoot"],permalink:"/pages/430f53/"},regularPath:"/10.Java/13.%E6%A1%86%E6%9E%B6/02.SpringBoot/00.SpringBoot%E7%BB%BC%E5%90%88/01.SpringBoot%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1.html",relativePath:"10.Java/13.框架/02.SpringBoot/00.SpringBoot综合/01.SpringBoot知识图谱.md",key:"v-401b3378",path:"/pages/430f53/",headers:[{level:2,title:"一、抛砖引玉：探索 Spring IoC 容器",slug:"一、抛砖引玉-探索-spring-ioc-容器",normalizedTitle:"一、抛砖引玉：探索 spring ioc 容器",charIndex:722},{level:3,title:"1.1、Spring IoC 容器",slug:"_1-1、spring-ioc-容器",normalizedTitle:"1.1、spring ioc 容器",charIndex:911},{level:3,title:"1.2、Spring 容器扩展机制",slug:"_1-2、spring-容器扩展机制",normalizedTitle:"1.2、spring 容器扩展机制",charIndex:4067},{level:2,title:"二、夯实基础：JavaConfig 与常见 Annotation",slug:"二、夯实基础-javaconfig-与常见-annotation",normalizedTitle:"二、夯实基础：javaconfig 与常见 annotation",charIndex:6917},{level:3,title:"2.1、JavaConfig",slug:"_2-1、javaconfig",normalizedTitle:"2.1、javaconfig",charIndex:6954},{level:3,title:"2.2、@ComponentScan",slug:"_2-2、-componentscan",normalizedTitle:"2.2、@componentscan",charIndex:8850},{level:3,title:"2.3、@Import",slug:"_2-3、-import",normalizedTitle:"2.3、@import",charIndex:9083},{level:3,title:"2.4、@Conditional",slug:"_2-4、-conditional",normalizedTitle:"2.4、@conditional",charIndex:9748},{level:3,title:"2.5、@ConfigurationProperties 与@EnableConfigurationProperties",slug:"_2-5、-configurationproperties-与-enableconfigurationproperties",normalizedTitle:"2.5、@configurationproperties 与@enableconfigurationproperties",charIndex:11488},{level:2,title:"三、削铁如泥：SpringFactoriesLoader 详解",slug:"三、削铁如泥-springfactoriesloader-详解",normalizedTitle:"三、削铁如泥：springfactoriesloader 详解",charIndex:14081},{level:2,title:"四、另一件武器：Spring 容器的事件监听机制",slug:"四、另一件武器-spring-容器的事件监听机制",normalizedTitle:"四、另一件武器：spring 容器的事件监听机制",charIndex:19913},{level:4,title:"Spring 容器内的事件监听机制",slug:"spring-容器内的事件监听机制",normalizedTitle:"spring 容器内的事件监听机制",charIndex:23112},{level:2,title:"五、出神入化：揭秘自动配置原理",slug:"五、出神入化-揭秘自动配置原理",normalizedTitle:"五、出神入化：揭秘自动配置原理",charIndex:24282},{level:2,title:"六、启动引导：Spring Boot 应用启动的秘密",slug:"六、启动引导-spring-boot-应用启动的秘密",normalizedTitle:"六、启动引导：spring boot 应用启动的秘密",charIndex:28652},{level:3,title:"6.1 SpringApplication 初始化",slug:"_6-1-springapplication-初始化",normalizedTitle:"6.1 springapplication 初始化",charIndex:28683},{level:3,title:"6.2 Spring Boot 启动流程",slug:"_6-2-spring-boot-启动流程",normalizedTitle:"6.2 spring boot 启动流程",charIndex:30449},{level:2,title:"参考资料",slug:"参考资料",normalizedTitle:"参考资料",charIndex:36555}],headersStr:"一、抛砖引玉：探索 Spring IoC 容器 1.1、Spring IoC 容器 1.2、Spring 容器扩展机制 二、夯实基础：JavaConfig 与常见 Annotation 2.1、JavaConfig 2.2、@ComponentScan 2.3、@Import 2.4、@Conditional 2.5、@ConfigurationProperties 与@EnableConfigurationProperties 三、削铁如泥：SpringFactoriesLoader 详解 四、另一件武器：Spring 容器的事件监听机制 Spring 容器内的事件监听机制 五、出神入化：揭秘自动配置原理 六、启动引导：Spring Boot 应用启动的秘密 6.1 SpringApplication 初始化 6.2 Spring Boot 启动流程 参考资料",content:'# SpringBoot 知识图谱\n\n>  1. 预警：本文非常长，建议先 mark 后看，也许是最后一次写这么长的文章\n>  2. 说明：前面有 4 个小节关于 Spring 的基础知识，分别是：IOC 容器、JavaConfig、事件监听、SpringFactoriesLoader 详解，它们占据了本文的大部分内容，虽然它们之间可能没有太多的联系，但这些知识对于理解 Spring Boot 的核心原理至关重要，如果你对 Spring 框架烂熟于心，完全可以跳过这 4 个小节。正是因为这个系列的文章是由这些看似不相关的知识点组成，因此取名知识清单。\n\n在过去两三年的 Spring 生态圈，最让人兴奋的莫过于 Spring Boot 框架。或许从命名上就能看出这个框架的设计初衷：快速的启动 Spring 应用。因而 Spring Boot 应用本质上就是一个基于 Spring 框架的应用，它是 Spring 对“约定优先于配置”理念的最佳实践产物，它能够帮助开发者更快速高效地构建基于 Spring 生态圈的应用。\n\n那 Spring Boot 有何魔法？自动配置、起步依赖、Actuator、命令行界面(CLI) 是 Spring Boot 最重要的 4 大核心特性，其中 CLI 是 Spring Boot 的可选特性，虽然它功能强大，但也引入了一套不太常规的开发模型，因而这个系列的文章仅关注其它 3 种特性。如文章标题，本文是这个系列的第一部分，将为你打开 Spring Boot 的大门，重点为你剖析其启动流程以及自动配置实现原理。要掌握这部分核心内容，理解一些 Spring 框架的基础知识，将会让你事半功倍。\n\n\n# 一、抛砖引玉：探索 Spring IoC 容器\n\n如果有看过SpringApplication.run()方法的源码，Spring Boot 冗长无比的启动流程一定会让你抓狂，透过现象看本质，SpringApplication 只是将一个典型的 Spring 应用的启动流程进行了扩展，因此，透彻理解 Spring 容器是打开 Spring Boot 大门的一把钥匙。\n\n\n# 1.1、Spring IoC 容器\n\n可以把 Spring IoC 容器比作一间餐馆，当你来到餐馆，通常会直接招呼服务员：点菜！至于菜的原料是什么？如何用原料把菜做出来？可能你根本就不关心。IoC 容器也是一样，你只需要告诉它需要某个 bean，它就把对应的实例（instance）扔给你，至于这个 bean 是否依赖其他组件，怎样完成它的初始化，根本就不需要你关心。\n\n作为餐馆，想要做出菜肴，得知道菜的原料和菜谱，同样地，IoC 容器想要管理各个业务对象以及它们之间的依赖关系，需要通过某种途径来记录和管理这些信息。BeanDefinition对象就承担了这个责任：容器中的每一个 bean 都会有一个对应的 BeanDefinition 实例，该实例负责保存 bean 对象的所有必要信息，包括 bean 对象的 class 类型、是否是抽象类、构造方法和参数、其它属性等等。当客户端向容器请求相应对象时，容器就会通过这些信息为客户端返回一个完整可用的 bean 实例。\n\n原材料已经准备好（把 BeanDefinition 看着原料），开始做菜吧，等等，你还需要一份菜谱，BeanDefinitionRegistry和BeanFactory就是这份菜谱，BeanDefinitionRegistry 抽象出 bean 的注册逻辑，而 BeanFactory 则抽象出了 bean 的管理逻辑，而各个 BeanFactory 的实现类就具体承担了 bean 的注册以及管理工作。它们之间的关系就如下图：\n\nBeanFactory、BeanDefinitionRegistry 关系图（来自：Spring 揭秘）\n\nDefaultListableBeanFactory作为一个比较通用的 BeanFactory 实现，它同时也实现了 BeanDefinitionRegistry 接口，因此它就承担了 Bean 的注册管理工作。从图中也可以看出，BeanFactory 接口中主要包含 getBean、containBean、getType、getAliases 等管理 bean 的方法，而 BeanDefinitionRegistry 接口则包含 registerBeanDefinition、removeBeanDefinition、getBeanDefinition 等注册管理 BeanDefinition 的方法。\n\n下面通过一段简单的代码来模拟 BeanFactory 底层是如何工作的：\n\n// 默认容器实现\nDefaultListableBeanFactory beanRegistry = new DefaultListableBeanFactory();\n// 根据业务对象构造相应的BeanDefinition\nAbstractBeanDefinition definition = new RootBeanDefinition(Business.class,true);\n// 将bean定义注册到容器中\nbeanRegistry.registerBeanDefinition("beanName",definition);\n// 如果有多个bean，还可以指定各个bean之间的依赖关系\n// ........\n\n// 然后可以从容器中获取这个bean的实例\n// 注意：这里的beanRegistry其实实现了BeanFactory接口，所以可以强转，\n// 单纯的BeanDefinitionRegistry是无法强制转换到BeanFactory类型的\nBeanFactory container = (BeanFactory)beanRegistry;\nBusiness business = (Business)container.getBean("beanName");\n\n\n这段代码仅为了说明 BeanFactory 底层的大致工作流程，实际情况会更加复杂，比如 bean 之间的依赖关系可能定义在外部配置文件(XML/Properties)中、也可能是注解方式。Spring IoC 容器的整个工作流程大致可以分为两个阶段：\n\n①、容器启动阶段\n\n容器启动时，会通过某种途径加载Configuration MetaData。除了代码方式比较直接外，在大部分情况下，容器需要依赖某些工具类，比如：BeanDefinitionReader，BeanDefinitionReader 会对加载的Configuration MetaData进行解析和分析，并将分析后的信息组装为相应的 BeanDefinition，最后把这些保存了 bean 定义的 BeanDefinition，注册到相应的 BeanDefinitionRegistry，这样容器的启动工作就完成了。这个阶段主要完成一些准备性工作，更侧重于 bean 对象管理信息的收集，当然一些验证性或者辅助性的工作也在这一阶段完成。\n\n来看一个简单的例子吧，过往，所有的 bean 都定义在 XML 配置文件中，下面的代码将模拟 BeanFactory 如何从配置文件中加载 bean 的定义以及依赖关系：\n\n// 通常为BeanDefinitionRegistry的实现类，这里以DeFaultListabeBeanFactory为例\nBeanDefinitionRegistry beanRegistry = new DefaultListableBeanFactory();\n// XmlBeanDefinitionReader实现了BeanDefinitionReader接口，用于解析XML文件\nXmlBeanDefinitionReader beanDefinitionReader = new XmlBeanDefinitionReaderImpl(beanRegistry);\n// 加载配置文件\nbeanDefinitionReader.loadBeanDefinitions("classpath:spring-bean.xml");\n\n// 从容器中获取bean实例\nBeanFactory container = (BeanFactory)beanRegistry;\nBusiness business = (Business)container.getBean("beanName");\n\n\n②、Bean 的实例化阶段\n\n经过第一阶段，所有 bean 定义都通过 BeanDefinition 的方式注册到 BeanDefinitionRegistry 中，当某个请求通过容器的 getBean 方法请求某个对象，或者因为依赖关系容器需要隐式的调用 getBean 时，就会触发第二阶段的活动：容器会首先检查所请求的对象之前是否已经实例化完成。如果没有，则会根据注册的 BeanDefinition 所提供的信息实例化被请求对象，并为其注入依赖。当该对象装配完毕后，容器会立即将其返回给请求方法使用。\n\nBeanFactory 只是 Spring IoC 容器的一种实现，如果没有特殊指定，它采用采用延迟初始化策略：只有当访问容器中的某个对象时，才对该对象进行初始化和依赖注入操作。而在实际场景下，我们更多的使用另外一种类型的容器：ApplicationContext，它构建在 BeanFactory 之上，属于更高级的容器，除了具有 BeanFactory 的所有能力之外，还提供对事件监听机制以及国际化的支持等。它管理的 bean，在容器启动时全部完成初始化和依赖注入操作。\n\n\n# 1.2、Spring 容器扩展机制\n\nIoC 容器负责管理容器中所有 bean 的生命周期，而在 bean 生命周期的不同阶段，Spring 提供了不同的扩展点来改变 bean 的命运。在容器的启动阶段，BeanFactoryPostProcessor允许我们在容器实例化相应对象之前，对注册到容器的 BeanDefinition 所保存的信息做一些额外的操作，比如修改 bean 定义的某些属性或者增加其他信息等。\n\n如果要自定义扩展类，通常需要实现org.springframework.beans.factory.config.BeanFactoryPostProcessor接口，与此同时，因为容器中可能有多个 BeanFactoryPostProcessor，可能还需要实现org.springframework.core.Ordered接口，以保证 BeanFactoryPostProcessor 按照顺序执行。Spring 提供了为数不多的 BeanFactoryPostProcessor 实现，我们以PropertyPlaceholderConfigurer来说明其大致的工作流程。\n\n在 Spring 项目的 XML 配置文件中，经常可以看到许多配置项的值使用占位符，而将占位符所代表的值单独配置到独立的 properties 文件，这样可以将散落在不同 XML 文件中的配置集中管理，而且也方便运维根据不同的环境进行配置不同的值。这个非常实用的功能就是由 PropertyPlaceholderConfigurer 负责实现的。\n\n根据前文，当 BeanFactory 在第一阶段加载完所有配置信息时，BeanFactory 中保存的对象的属性还是以占位符方式存在的，比如${jdbc.mysql.url}。当 PropertyPlaceholderConfigurer 作为 BeanFactoryPostProcessor 被应用时，它会使用 properties 配置文件中的值来替换相应的 BeanDefinition 中占位符所表示的属性值。当需要实例化 bean 时，bean 定义中的属性值就已经被替换成我们配置的值。当然其实现比上面描述的要复杂一些，这里仅说明其大致工作原理，更详细的实现可以参考其源码。\n\n与之相似的，还有BeanPostProcessor，其存在于对象实例化阶段。跟 BeanFactoryPostProcessor 类似，它会处理容器内所有符合条件并且已经实例化后的对象。简单的对比，BeanFactoryPostProcessor 处理 bean 的定义，而 BeanPostProcessor 则处理 bean 完成实例化后的对象。BeanPostProcessor 定义了两个接口：\n\npublic interface BeanPostProcessor {\n    // 前置处理\n    Object postProcessBeforeInitialization(Object bean, String beanName) throws BeansException;\n    // 后置处理\n    Object postProcessAfterInitialization(Object bean, String beanName) throws BeansException;\n}\n\n\n为了理解这两个方法执行的时机，简单的了解下 bean 的整个生命周期：\n\n![img](data:image/svg+xml;utf8,) Bean 的实例化过程（来自：Spring 揭秘）\n\npostProcessBeforeInitialization()方法与postProcessAfterInitialization()分别对应图中前置处理和后置处理两个步骤将执行的方法。这两个方法中都传入了 bean 对象实例的引用，为扩展容器的对象实例化过程提供了很大便利，在这儿几乎可以对传入的实例执行任何操作。注解、AOP 等功能的实现均大量使用了BeanPostProcessor，比如有一个自定义注解，你完全可以实现 BeanPostProcessor 的接口，在其中判断 bean 对象的脑袋上是否有该注解，如果有，你可以对这个 bean 实例执行任何操作，想想是不是非常的简单？\n\n再来看一个更常见的例子，在 Spring 中经常能够看到各种各样的 Aware 接口，其作用就是在对象实例化完成以后将 Aware 接口定义中规定的依赖注入到当前实例中。比如最常见的ApplicationContextAware接口，实现了这个接口的类都可以获取到一个 ApplicationContext 对象。当容器中每个对象的实例化过程走到 BeanPostProcessor 前置处理这一步时，容器会检测到之前注册到容器的 ApplicationContextAwareProcessor，然后就会调用其 postProcessBeforeInitialization()方法，检查并设置 Aware 相关依赖。看看代码吧，是不是很简单：\n\n// 代码来自：org.springframework.context.support.ApplicationContextAwareProcessor\n// 其postProcessBeforeInitialization方法调用了invokeAwareInterfaces方法\nprivate void invokeAwareInterfaces(Object bean) {\n    if (bean instanceof EnvironmentAware) {\n        ((EnvironmentAware) bean).setEnvironment(this.applicationContext.getEnvironment());\n    }\n    if (bean instanceof ApplicationContextAware) {\n        ((ApplicationContextAware) bean).setApplicationContext(this.applicationContext);\n    }\n    // ......\n}\n\n\n最后总结一下，本小节内容和你一起回顾了 Spring 容器的部分核心内容，限于篇幅不能写更多，但理解这部分内容，足以让您轻松理解 Spring Boot 的启动原理，如果在后续的学习过程中遇到一些晦涩难懂的知识，再回过头来看看 Spring 的核心知识，也许有意想不到的效果。也许 Spring Boot 的中文资料很少，但 Spring 的中文资料和书籍有太多太多，总有东西能给你启发。\n\n\n# 二、夯实基础：JavaConfig 与常见 Annotation\n\n\n# 2.1、JavaConfig\n\n我们知道bean是 Spring IOC 中非常核心的概念，Spring 容器负责 bean 的生命周期的管理。在最初，Spring 使用 XML 配置文件的方式来描述 bean 的定义以及相互间的依赖关系，但随着 Spring 的发展，越来越多的人对这种方式表示不满，因为 Spring 项目的所有业务类均以 bean 的形式配置在 XML 文件中，造成了大量的 XML 文件，使项目变得复杂且难以管理。\n\n后来，基于纯 Java Annotation 依赖注入框架Guice出世，其性能明显优于采用 XML 方式的 Spring，甚至有部分人认为，Guice可以完全取代 Spring（Guice仅是一个轻量级 IOC 框架，取代 Spring 还差的挺远）。正是这样的危机感，促使 Spring 及社区推出并持续完善了JavaConfig子项目，它基于 Java 代码和 Annotation 注解来描述 bean 之间的依赖绑定关系。比如，下面是使用 XML 配置方式来描述 bean 的定义：\n\n<bean id="bookService" class="cn.moondev.service.BookServiceImpl"></bean>\n\n\n而基于 JavaConfig 的配置形式是这样的：\n\n@Configuration\npublic class MoonBookConfiguration {\n\n    // 任何标志了@Bean的方法，其返回值将作为一个bean注册到Spring的IOC容器中\n    // 方法名默认成为该bean定义的id\n    @Bean\n    public BookService bookService() {\n        return new BookServiceImpl();\n    }\n}\n\n\n如果两个 bean 之间有依赖关系的话，在 XML 配置中应该是这样：\n\n<bean id="bookService" class="cn.moondev.service.BookServiceImpl">\n    <property name="dependencyService" ref="dependencyService"/>\n</bean>\n\n<bean id="otherService" class="cn.moondev.service.OtherServiceImpl">\n    <property name="dependencyService" ref="dependencyService"/>\n</bean>\n\n<bean id="dependencyService" class="DependencyServiceImpl"/>\n\n\n而在 JavaConfig 中则是这样：\n\n@Configuration\npublic class MoonBookConfiguration {\n\n    // 如果一个bean依赖另一个bean，则直接调用对应JavaConfig类中依赖bean的创建方法即可\n    // 这里直接调用dependencyService()\n    @Bean\n    public BookService bookService() {\n        return new BookServiceImpl(dependencyService());\n    }\n\n    @Bean\n    public OtherService otherService() {\n        return new OtherServiceImpl(dependencyService());\n    }\n\n    @Bean\n    public DependencyService dependencyService() {\n        return new DependencyServiceImpl();\n    }\n}\n\n\n你可能注意到这个示例中，有两个 bean 都依赖于 dependencyService，也就是说当初始化 bookService 时会调用dependencyService()，在初始化 otherService 时也会调用dependencyService()，那么问题来了？这时候 IOC 容器中是有一个 dependencyService 实例还是两个？这个问题留着大家思考吧，这里不再赘述。\n\n\n# 2.2、@ComponentScan\n\n@ComponentScan注解对应 XML 配置形式中的``元素，表示启用组件扫描，Spring会自动扫描所有通过注解配置的bean，然后将其注册到IOC容器中。我们可以通过basePackages等属性来指定@ComponentScan自动扫描的范围，如果不指定，默认从声明@ComponentScan所在类的package进行扫描。正因为如此，SpringBoot的启动类都默认在src/main/java下。\n\n\n# 2.3、@Import\n\n@Import注解用于导入配置类，举个简单的例子：\n\n@Configuration\npublic class MoonBookConfiguration {\n    @Bean\n    public BookService bookService() {\n        return new BookServiceImpl();\n    }\n}\n\n\n现在有另外一个配置类，比如：MoonUserConfiguration，这个配置类中有一个 bean 依赖于MoonBookConfiguration中的 bookService，如何将这两个 bean 组合在一起？借助@Import即可：\n\n@Configuration\n// 可以同时导入多个配置类，比如：@Import({A.class,B.class})\n@Import(MoonBookConfiguration.class)\npublic class MoonUserConfiguration {\n    @Bean\n    public UserService userService(BookService bookService) {\n        return new BookServiceImpl(bookService);\n    }\n}\n\n\n需要注意的是，在 4.2 之前，@Import注解只支持导入配置类，但是在 4.2 之后，它支持导入普通类，并将这个类作为一个 bean 的定义注册到 IOC 容器中。\n\n\n# 2.4、@Conditional\n\n@Conditional注解表示在满足某种条件后才初始化一个 bean 或者启用某些配置。它一般用在由@Component、@Service、@Configuration等注解标识的类上面，或者由@Bean标记的方法上。如果一个@Configuration类标记了@Conditional，则该类中所有标识了@Bean的方法和@Import注解导入的相关类将遵从这些条件。\n\n在 Spring 里可以很方便的编写你自己的条件类，所要做的就是实现Condition接口，并覆盖它的matches()方法。举个例子，下面的简单条件类表示只有在Classpath里存在JdbcTemplate类时才生效：\n\npublic class JdbcTemplateCondition implements Condition {\n\n    @Override\n    public boolean matches(ConditionContext conditionContext, AnnotatedTypeMetadata annotatedTypeMetadata) {\n        try {\n        conditionContext.getClassLoader().loadClass("org.springframework.jdbc.core.JdbcTemplate");\n            return true;\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        }\n        return false;\n    }\n}\n\n\n当你用 Java 来声明 bean 的时候，可以使用这个自定义条件类：\n\n@Conditional(JdbcTemplateCondition.class)\n@Service\npublic MyService service() {\n    ......\n}\n\n\n这个例子中只有当JdbcTemplateCondition类的条件成立时才会创建 MyService 这个 bean。也就是说 MyService 这 bean 的创建条件是classpath里面包含JdbcTemplate，否则这个 bean 的声明就会被忽略掉。\n\nSpring Boot定义了很多有趣的条件，并把他们运用到了配置类上，这些配置类构成了Spring Boot的自动配置的基础。Spring Boot运用条件化配置的方法是：定义多个特殊的条件化注解，并将它们用到配置类上。下面列出了Spring Boot提供的部分条件化注解：\n\n条件化注解                             配置生效条件\n@ConditionalOnBean                配置了某个特定 bean\n@ConditionalOnMissingBean         没有配置特定的 bean\n@ConditionalOnClass               Classpath 里有指定的类\n@ConditionalOnMissingClass        Classpath 里没有指定的类\n@ConditionalOnExpression          给定的 Spring Expression Language 表达式计算结果为 true\n@ConditionalOnJava                Java 的版本匹配特定指或者一个范围值\n@ConditionalOnProperty            指定的配置属性要有一个明确的值\n@ConditionalOnResource            Classpath 里有指定的资源\n@ConditionalOnWebApplication      这是一个 Web 应用程序\n@ConditionalOnNotWebApplication   这不是一个 Web 应用程序\n\n\n# 2.5、@ConfigurationProperties 与@EnableConfigurationProperties\n\n当某些属性的值需要配置的时候，我们一般会在application.properties文件中新建配置项，然后在 bean 中使用@Value注解来获取配置的值，比如下面配置数据源的代码。\n\n// jdbc config\njdbc.mysql.url=jdbc:mysql://localhost:3306/sampledb\njdbc.mysql.username=root\njdbc.mysql.password=123456\n......\n\n// 配置数据源\n@Configuration\npublic class HikariDataSourceConfiguration {\n\n    @Value("jdbc.mysql.url")\n    public String url;\n    @Value("jdbc.mysql.username")\n    public String user;\n    @Value("jdbc.mysql.password")\n    public String password;\n\n    @Bean\n    public HikariDataSource dataSource() {\n        HikariConfig hikariConfig = new HikariConfig();\n        hikariConfig.setJdbcUrl(url);\n        hikariConfig.setUsername(user);\n        hikariConfig.setPassword(password);\n        // 省略部分代码\n        return new HikariDataSource(hikariConfig);\n    }\n}\n\n\n使用@Value注解注入的属性通常都比较简单，如果同一个配置在多个地方使用，也存在不方便维护的问题（考虑下，如果有几十个地方在使用某个配置，而现在你想改下名字，你改怎么做？）。对于更为复杂的配置，Spring Boot 提供了更优雅的实现方式，那就是@ConfigurationProperties注解。我们可以通过下面的方式来改写上面的代码：\n\n@Component\n//  还可以通过@PropertySource("classpath:jdbc.properties")来指定配置文件\n@ConfigurationProperties("jdbc.mysql")\n// 前缀=jdbc.mysql，会在配置文件中寻找jdbc.mysql.*的配置项\npulic class JdbcConfig {\n    public String url;\n    public String username;\n    public String password;\n}\n\n@Configuration\npublic class HikariDataSourceConfiguration {\n\n    @AutoWired\n    public JdbcConfig config;\n\n    @Bean\n    public HikariDataSource dataSource() {\n        HikariConfig hikariConfig = new HikariConfig();\n        hikariConfig.setJdbcUrl(config.url);\n        hikariConfig.setUsername(config.username);\n        hikariConfig.setPassword(config.password);\n        // 省略部分代码\n        return new HikariDataSource(hikariConfig);\n    }\n}\n\n\n@ConfigurationProperties对于更为复杂的配置，处理起来也是得心应手，比如有如下配置文件：\n\n#App\napp.menus[0].title=Home\napp.menus[0].name=Home\napp.menus[0].path=/\napp.menus[1].title=Login\napp.menus[1].name=Login\napp.menus[1].path=/login\n\napp.compiler.timeout=5\napp.compiler.output-folder=/temp/\n\napp.error=/error/\n\n\n可以定义如下配置类来接收这些属性\n\n@Component\n@ConfigurationProperties("app")\npublic class AppProperties {\n\n    public String error;\n    public List<Menu> menus = new ArrayList<>();\n    public Compiler compiler = new Compiler();\n\n    public static class Menu {\n        public String name;\n        public String path;\n        public String title;\n    }\n\n    public static class Compiler {\n        public String timeout;\n        public String outputFolder;\n    }\n}\n\n\n@EnableConfigurationProperties注解表示对@ConfigurationProperties的内嵌支持，默认会将对应 Properties Class 作为 bean 注入的 IOC 容器中，即在相应的 Properties 类上不用加@Component注解。\n\n\n# 三、削铁如泥：SpringFactoriesLoader 详解\n\nJVM 提供了 3 种类加载器：BootstrapClassLoader、ExtClassLoader、AppClassLoader分别加载 Java 核心类库、扩展类库以及应用的类路径(CLASSPATH)下的类库。JVM 通过双亲委派模型进行类的加载，我们也可以通过继承java.lang.classloader实现自己的类加载器。\n\n何为双亲委派模型？当一个类加载器收到类加载任务时，会先交给自己的父加载器去完成，因此最终加载任务都会传递到最顶层的 BootstrapClassLoader，只有当父加载器无法完成加载任务时，才会尝试自己来加载。\n\n采用双亲委派模型的一个好处是保证使用不同类加载器最终得到的都是同一个对象，这样就可以保证 Java 核心库的类型安全，比如，加载位于 rt.jar 包中的java.lang.Object类，不管是哪个加载器加载这个类，最终都是委托给顶层的 BootstrapClassLoader 来加载的，这样就可以保证任何的类加载器最终得到的都是同样一个 Object 对象。查看 ClassLoader 的源码，对双亲委派模型会有更直观的认识：\n\nprotected Class<?> loadClass(String name, boolean resolve) {\n    synchronized (getClassLoadingLock(name)) {\n    // 首先，检查该类是否已经被加载，如果从JVM缓存中找到该类，则直接返回\n    Class<?> c = findLoadedClass(name);\n    if (c == null) {\n        try {\n            // 遵循双亲委派的模型，首先会通过递归从父加载器开始找，\n            // 直到父类加载器是BootstrapClassLoader为止\n            if (parent != null) {\n                c = parent.loadClass(name, false);\n            } else {\n                c = findBootstrapClassOrNull(name);\n            }\n        } catch (ClassNotFoundException e) {}\n        if (c == null) {\n            // 如果还找不到，尝试通过findClass方法去寻找\n            // findClass是留给开发者自己实现的，也就是说\n            // 自定义类加载器时，重写此方法即可\n           c = findClass(name);\n        }\n    }\n    if (resolve) {\n        resolveClass(c);\n    }\n    return c;\n    }\n}\n\n\n但双亲委派模型并不能解决所有的类加载器问题，比如，Java 提供了很多服务提供者接口(Service Provider Interface，SPI)，允许第三方为这些接口提供实现。常见的 SPI 有 JDBC、JNDI、JAXP 等，这些 SPI 的接口由核心类库提供，却由第三方实现，这样就存在一个问题：SPI 的接口是 Java 核心库的一部分，是由 BootstrapClassLoader 加载的；SPI 实现的 Java 类一般是由 AppClassLoader 来加载的。BootstrapClassLoader 是无法找到 SPI 的实现类的，因为它只加载 Java 的核心库。它也不能代理给 AppClassLoader，因为它是最顶层的类加载器。也就是说，双亲委派模型并不能解决这个问题。\n\n线程上下文类加载器(ContextClassLoader)正好解决了这个问题。从名称上看，可能会误解为它是一种新的类加载器，实际上，它仅仅是 Thread 类的一个变量而已，可以通过setContextClassLoader(ClassLoader cl)和getContextClassLoader()来设置和获取该对象。如果不做任何的设置，Java 应用的线程的上下文类加载器默认就是 AppClassLoader。在核心类库使用 SPI 接口时，传递的类加载器使用线程上下文类加载器，就可以成功的加载到 SPI 实现的类。线程上下文类加载器在很多 SPI 的实现中都会用到。但在 JDBC 中，你可能会看到一种更直接的实现方式，比如，JDBC 驱动管理java.sql.Driver中的loadInitialDrivers()方法中，你可以直接看到 JDK 是如何加载驱动的：\n\nfor (String aDriver : driversList) {\n    try {\n        // 直接使用AppClassLoader\n        Class.forName(aDriver, true, ClassLoader.getSystemClassLoader());\n    } catch (Exception ex) {\n        println("DriverManager.Initialize: load failed: " + ex);\n    }\n}\n\n\n其实讲解线程上下文类加载器，最主要是让大家在看到Thread.currentThread().getClassLoader()和Thread.currentThread().getContextClassLoader()时不会一脸懵逼，这两者除了在许多底层框架中取得的 ClassLoader 可能会有所不同外，其他大多数业务场景下都是一样的，大家只要知道它是为了解决什么问题而存在的即可。\n\n类加载器除了加载 class 外，还有一个非常重要功能，就是加载资源，它可以从 jar 包中读取任何资源文件，比如，ClassLoader.getResources(String name)方法就是用于读取 jar 包中的资源文件，其代码如下：\n\npublic Enumeration<URL> getResources(String name) throws IOException {\n    Enumeration<URL>[] tmp = (Enumeration<URL>[]) new Enumeration<?>[2];\n    if (parent != null) {\n        tmp[0] = parent.getResources(name);\n    } else {\n        tmp[0] = getBootstrapResources(name);\n    }\n    tmp[1] = findResources(name);\n    return new CompoundEnumeration<>(tmp);\n}\n\n\n是不是觉得有点眼熟，不错，它的逻辑其实跟类加载的逻辑是一样的，首先判断父类加载器是否为空，不为空则委托父类加载器执行资源查找任务，直到 BootstrapClassLoader，最后才轮到自己查找。而不同的类加载器负责扫描不同路径下的 jar 包，就如同加载 class 一样，最后会扫描所有的 jar 包，找到符合条件的资源文件。\n\n类加载器的findResources(name)方法会遍历其负责加载的所有 jar 包，找到 jar 包中名称为 name 的资源文件，这里的资源可以是任何文件，甚至是.class 文件，比如下面的示例，用于查找 Array.class 文件：\n\n// 寻找Array.class文件\npublic static void main(String[] args) throws Exception{\n    // Array.class的完整路径\n    String name = "java/sql/Array.class";\n    Enumeration<URL> urls = Thread.currentThread().getContextClassLoader().getResources(name);\n    while (urls.hasMoreElements()) {\n        URL url = urls.nextElement();\n        System.out.println(url.toString());\n    }\n}\n\n\n运行后可以得到如下结果：\n\n$JAVA_HOME/jre/lib/rt.jar!/java/sql/Array.class\n\n\n根据资源文件的 URL，可以构造相应的文件来读取资源内容。\n\n看到这里，你可能会感到挺奇怪的，你不是要详解SpringFactoriesLoader吗？上来讲了一堆 ClassLoader 是几个意思？看下它的源码你就知道了：\n\npublic static final String FACTORIES_RESOURCE_LOCATION = "META-INF/spring.factories";\n// spring.factories文件的格式为：key=value1,value2,value3\n// 从所有的jar包中找到META-INF/spring.factories文件\n// 然后从文件中解析出key=factoryClass类名称的所有value值\npublic static List<String> loadFactoryNames(Class<?> factoryClass, ClassLoader classLoader) {\n    String factoryClassName = factoryClass.getName();\n    // 取得资源文件的URL\n    Enumeration<URL> urls = (classLoader != null ? classLoader.getResources(FACTORIES_RESOURCE_LOCATION) : ClassLoader.getSystemResources(FACTORIES_RESOURCE_LOCATION));\n    List<String> result = new ArrayList<String>();\n    // 遍历所有的URL\n    while (urls.hasMoreElements()) {\n        URL url = urls.nextElement();\n        // 根据资源文件URL解析properties文件\n        Properties properties = PropertiesLoaderUtils.loadProperties(new UrlResource(url));\n        String factoryClassNames = properties.getProperty(factoryClassName);\n        // 组装数据，并返回\n        result.addAll(Arrays.asList(StringUtils.commaDelimitedListToStringArray(factoryClassNames)));\n    }\n    return result;\n}\n\n\n有了前面关于 ClassLoader 的知识，再来理解这段代码，是不是感觉豁然开朗：从CLASSPATH下的每个 Jar 包中搜寻所有META-INF/spring.factories配置文件，然后将解析 properties 文件，找到指定名称的配置后返回。需要注意的是，其实这里不仅仅是会去 ClassPath 路径下查找，会扫描所有路径下的 Jar 包，只不过这个文件只会在 Classpath 下的 jar 包中。来简单看下spring.factories文件的内容吧：\n\n// 来自 org.springframework.boot.autoconfigure下的META-INF/spring.factories\n// EnableAutoConfiguration后文会讲到，它用于开启Spring Boot自动配置功能\norg.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\norg.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration,\\\norg.springframework.boot.autoconfigure.aop.AopAutoConfiguration,\\\norg.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration\\\n\n\n执行loadFactoryNames(EnableAutoConfiguration.class, classLoader)后，得到对应的一组@Configuration类， 我们就可以通过反射实例化这些类然后注入到 IOC 容器中，最后容器里就有了一系列标注了@Configuration的 JavaConfig 形式的配置类。\n\n这就是SpringFactoriesLoader，它本质上属于 Spring 框架私有的一种扩展方案，类似于 SPI，Spring Boot 在 Spring 基础上的很多核心功能都是基于此，希望大家可以理解。\n\n\n# 四、另一件武器：Spring 容器的事件监听机制\n\n过去，事件监听机制多用于图形界面编程，比如：点击按钮、在文本框输入内容等操作被称为事件，而当事件触发时，应用程序作出一定的响应则表示应用监听了这个事件，而在服务器端，事件的监听机制更多的用于异步通知以及监控和异常处理。Java 提供了实现事件监听机制的两个基础类：自定义事件类型扩展自java.util.EventObject、事件的监听器扩展自java.util.EventListener。来看一个简单的实例：简单的监控一个方法的耗时。\n\n首先定义事件类型，通常的做法是扩展 EventObject，随着事件的发生，相应的状态通常都封装在此类中：\n\npublic class MethodMonitorEvent extends EventObject {\n    // 时间戳，用于记录方法开始执行的时间\n    public long timestamp;\n\n    public MethodMonitorEvent(Object source) {\n        super(source);\n    }\n}\n\n\n事件发布之后，相应的监听器即可对该类型的事件进行处理，我们可以在方法开始执行之前发布一个 begin 事件，在方法执行结束之后发布一个 end 事件，相应地，事件监听器需要提供方法对这两种情况下接收到的事件进行处理：\n\n// 1、定义事件监听接口\npublic interface MethodMonitorEventListener extends EventListener {\n    // 处理方法执行之前发布的事件\n    public void onMethodBegin(MethodMonitorEvent event);\n    // 处理方法结束时发布的事件\n    public void onMethodEnd(MethodMonitorEvent event);\n}\n// 2、事件监听接口的实现：如何处理\npublic class AbstractMethodMonitorEventListener implements MethodMonitorEventListener {\n\n    @Override\n    public void onMethodBegin(MethodMonitorEvent event) {\n        // 记录方法开始执行时的时间\n        event.timestamp = System.currentTimeMillis();\n    }\n\n    @Override\n    public void onMethodEnd(MethodMonitorEvent event) {\n        // 计算方法耗时\n        long duration = System.currentTimeMillis() - event.timestamp;\n        System.out.println("耗时：" + duration);\n    }\n}\n\n\n事件监听器接口针对不同的事件发布实际提供相应的处理方法定义，最重要的是，其方法只接收 MethodMonitorEvent 参数，说明这个监听器类只负责监听器对应的事件并进行处理。有了事件和监听器，剩下的就是发布事件，然后让相应的监听器监听并处理。通常情况，我们会有一个事件发布者，它本身作为事件源，在合适的时机，将相应的事件发布给对应的事件监听器：\n\npublic class MethodMonitorEventPublisher {\n\n    private List<MethodMonitorEventListener> listeners = new ArrayList<MethodMonitorEventListener>();\n\n    public void methodMonitor() {\n        MethodMonitorEvent eventObject = new MethodMonitorEvent(this);\n        publishEvent("begin",eventObject);\n        // 模拟方法执行：休眠5秒钟\n        TimeUnit.SECONDS.sleep(5);\n        publishEvent("end",eventObject);\n\n    }\n\n    private void publishEvent(String status,MethodMonitorEvent event) {\n        // 避免在事件处理期间，监听器被移除，这里为了安全做一个复制操作\n        List<MethodMonitorEventListener> copyListeners = ➥ new ArrayList<MethodMonitorEventListener>(listeners);\n        for (MethodMonitorEventListener listener : copyListeners) {\n            if ("begin".equals(status)) {\n                listener.onMethodBegin(event);\n            } else {\n                listener.onMethodEnd(event);\n            }\n        }\n    }\n\n    public static void main(String[] args) {\n        MethodMonitorEventPublisher publisher = new MethodMonitorEventPublisher();\n        publisher.addEventListener(new AbstractMethodMonitorEventListener());\n        publisher.methodMonitor();\n    }\n    // 省略实现\n    public void addEventListener(MethodMonitorEventListener listener) {}\n    public void removeEventListener(MethodMonitorEventListener listener) {}\n    public void removeAllListeners() {}\n\n\n对于事件发布者（事件源）通常需要关注两点：\n\n 1. 在合适的时机发布事件。此例中的 methodMonitor()方法是事件发布的源头，其在方法执行之前和结束之后两个时间点发布 MethodMonitorEvent 事件，每个时间点发布的事件都会传给相应的监听器进行处理。在具体实现时需要注意的是，事件发布是顺序执行，为了不影响处理性能，事件监听器的处理逻辑应尽量简单。\n 2. 事件监听器的管理。publisher 类中提供了事件监听器的注册与移除方法，这样客户端可以根据实际情况决定是否需要注册新的监听器或者移除某个监听器。如果这里没有提供 remove 方法，那么注册的监听器示例将一直被 MethodMonitorEventPublisher 引用，即使已经废弃不用了，也依然在发布者的监听器列表中，这会导致隐性的内存泄漏。\n\n# Spring 容器内的事件监听机制\n\nSpring 的 ApplicationContext 容器内部中的所有事件类型均继承自org.springframework.context.AppliationEvent，容器中的所有监听器都实现org.springframework.context.ApplicationListener接口，并且以 bean 的形式注册在容器中。一旦在容器内发布 ApplicationEvent 及其子类型的事件，注册到容器的 ApplicationListener 就会对这些事件进行处理。\n\n你应该已经猜到是怎么回事了。\n\nApplicationEvent 继承自 EventObject，Spring 提供了一些默认的实现，比如：ContextClosedEvent表示容器在即将关闭时发布的事件类型，ContextRefreshedEvent表示容器在初始化或者刷新的时候发布的事件类型......\n\n容器内部使用 ApplicationListener 作为事件监听器接口定义，它继承自 EventListener。ApplicationContext 容器在启动时，会自动识别并加载 EventListener 类型的 bean，一旦容器内有事件发布，将通知这些注册到容器的 EventListener。\n\nApplicationContext 接口继承了 ApplicationEventPublisher 接口，该接口提供了void publishEvent(ApplicationEvent event)方法定义，不难看出，ApplicationContext 容器担当的就是事件发布者的角色。如果有兴趣可以查看AbstractApplicationContext.publishEvent(ApplicationEvent event)方法的源码：ApplicationContext 将事件的发布以及监听器的管理工作委托给ApplicationEventMulticaster接口的实现类。在容器启动时，会检查容器内是否存在名为 applicationEventMulticaster 的 ApplicationEventMulticaster 对象实例。如果有就使用其提供的实现，没有就默认初始化一个 SimpleApplicationEventMulticaster 作为实现。\n\n最后，如果我们业务需要在容器内部发布事件，只需要为其注入 ApplicationEventPublisher 依赖即可：实现 ApplicationEventPublisherAware 接口或者 ApplicationContextAware 接口(Aware 接口相关内容请回顾上文)。\n\n\n# 五、出神入化：揭秘自动配置原理\n\n典型的 Spring Boot 应用的启动类一般均位于src/main/java根路径下，比如MoonApplication类：\n\n@SpringBootApplication\npublic class MoonApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(MoonApplication.class, args);\n    }\n}\n\n\n其中@SpringBootApplication开启组件扫描和自动配置，而SpringApplication.run则负责启动引导应用程序。@SpringBootApplication是一个复合Annotation，它将三个有用的注解组合在一起：\n\n@Target(ElementType.TYPE)\n@Retention(RetentionPolicy.RUNTIME)\n@Documented\n@Inherited\n@SpringBootConfiguration\n@EnableAutoConfiguration\n@ComponentScan(excludeFilters = {\n        @Filter(type = FilterType.CUSTOM, classes = TypeExcludeFilter.class),\n        @Filter(type = FilterType.CUSTOM, classes = AutoConfigurationExcludeFilter.class) })\npublic @interface SpringBootApplication {\n    // ......\n}\n\n\n@SpringBootConfiguration就是@Configuration，它是 Spring 框架的注解，标明该类是一个JavaConfig配置类。而@ComponentScan启用组件扫描，前文已经详细讲解过，这里着重关注@EnableAutoConfiguration。\n\n@EnableAutoConfiguration注解表示开启 Spring Boot 自动配置功能，Spring Boot 会根据应用的依赖、自定义的 bean、classpath 下有没有某个类 等等因素来猜测你需要的 bean，然后注册到 IOC 容器中。那@EnableAutoConfiguration是如何推算出你的需求？首先看下它的定义：\n\n@Target(ElementType.TYPE)\n@Retention(RetentionPolicy.RUNTIME)\n@Documented\n@Inherited\n@AutoConfigurationPackage\n@Import(EnableAutoConfigurationImportSelector.class)\npublic @interface EnableAutoConfiguration {\n    // ......\n}\n\n\n你的关注点应该在@Import(EnableAutoConfigurationImportSelector.class)上了，前文说过，@Import注解用于导入类，并将这个类作为一个 bean 的定义注册到容器中，这里它将把EnableAutoConfigurationImportSelector作为 bean 注入到容器中，而这个类会将所有符合条件的@Configuration 配置都加载到容器中，看看它的代码：\n\npublic String[] selectImports(AnnotationMetadata annotationMetadata) {\n    // 省略了大部分代码，保留一句核心代码\n    // 注意：SpringBoot最近版本中，这句代码被封装在一个单独的方法中\n    // SpringFactoriesLoader相关知识请参考前文\n    List<String> factories = new ArrayList<String>(new LinkedHashSet<String>(\n        SpringFactoriesLoader.loadFactoryNames(EnableAutoConfiguration.class, this.beanClassLoader)));\n}\n\n\n这个类会扫描所有的 jar 包，将所有符合条件的@Configuration 配置类注入的容器中，何为符合条件，看看META-INF/spring.factories的文件内容：\n\n// 来自 org.springframework.boot.autoconfigure下的META-INF/spring.factories\n// 配置的key = EnableAutoConfiguration，与代码中一致\norg.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\norg.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,\\\norg.springframework.boot.autoconfigure.aop.AopAutoConfiguration,\\\norg.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration\\\n.....\n\n\n以DataSourceAutoConfiguration为例，看看 Spring Boot 是如何自动配置的：\n\n@Configuration\n@ConditionalOnClass({ DataSource.class, EmbeddedDatabaseType.class })\n@EnableConfigurationProperties(DataSourceProperties.class)\n@Import({ Registrar.class, DataSourcePoolMetadataProvidersConfiguration.class })\npublic class DataSourceAutoConfiguration {\n}\n\n\n分别说一说：\n\n * @ConditionalOnClass({ DataSource.class, EmbeddedDatabaseType.class })：当 Classpath 中存在 DataSource 或者 EmbeddedDatabaseType 类时才启用这个配置，否则这个配置将被忽略。\n * @EnableConfigurationProperties(DataSourceProperties.class)：将 DataSource 的默认配置类注入到 IOC 容器中，DataSourceproperties 定义为：\n\n// 提供对datasource配置信息的支持，所有的配置前缀为：spring.datasource\n@ConfigurationProperties(prefix = "spring.datasource")\npublic class DataSourceProperties  {\n    private ClassLoader classLoader;\n    private Environment environment;\n    private String name = "testdb";\n    ......\n}\n\n\n * @Import({ Registrar.class, DataSourcePoolMetadataProvidersConfiguration.class })：导入其他额外的配置，就以DataSourcePoolMetadataProvidersConfiguration为例吧。\n\n@Configuration\npublic class DataSourcePoolMetadataProvidersConfiguration {\n\n    @Configuration\n    @ConditionalOnClass(org.apache.tomcat.jdbc.pool.DataSource.class)\n    static class TomcatDataSourcePoolMetadataProviderConfiguration {\n        @Bean\n        public DataSourcePoolMetadataProvider tomcatPoolDataSourceMetadataProvider() {\n            .....\n        }\n    }\n  ......\n}\n\n\nDataSourcePoolMetadataProvidersConfiguration 是数据库连接池提供者的一个配置类，即 Classpath 中存在org.apache.tomcat.jdbc.pool.DataSource.class，则使用 tomcat-jdbc 连接池，如果 Classpath 中存在HikariDataSource.class则使用 Hikari 连接池。\n\n这里仅描述了 DataSourceAutoConfiguration 的冰山一角，但足以说明 Spring Boot 如何利用条件话配置来实现自动配置的。回顾一下，@EnableAutoConfiguration中导入了 EnableAutoConfigurationImportSelector 类，而这个类的selectImports()通过 SpringFactoriesLoader 得到了大量的配置类，而每一个配置类则根据条件化配置来做出决策，以实现自动配置。\n\n整个流程很清晰，但漏了一个大问题：EnableAutoConfigurationImportSelector.selectImports()是何时执行的？其实这个方法会在容器启动过程中执行：AbstractApplicationContext.refresh()，更多的细节在下一小节中说明。\n\n\n# 六、启动引导：Spring Boot 应用启动的秘密\n\n\n# 6.1 SpringApplication 初始化\n\nSpringBoot 整个启动流程分为两个步骤：初始化一个 SpringApplication 对象、执行该对象的 run 方法。看下 SpringApplication 的初始化流程，SpringApplication 的构造方法中调用 initialize(Object[] sources)方法，其代码如下：\n\nprivate void initialize(Object[] sources) {\n     if (sources != null && sources.length > 0) {\n         this.sources.addAll(Arrays.asList(sources));\n     }\n     // 判断是否是Web项目\n     this.webEnvironment = deduceWebEnvironment();\n     setInitializers((Collection) getSpringFactoriesInstances(ApplicationContextInitializer.class));\n     setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class));\n     // 找到入口类\n     this.mainApplicationClass = deduceMainApplicationClass();\n}\n\n\n初始化流程中最重要的就是通过 SpringFactoriesLoader 找到spring.factories文件中配置的ApplicationContextInitializer和ApplicationListener两个接口的实现类名称，以便后期构造相应的实例。ApplicationContextInitializer的主要目的是在ConfigurableApplicationContext做 refresh 之前，对 ConfigurableApplicationContext 实例做进一步的设置或处理。ConfigurableApplicationContext 继承自 ApplicationContext，其主要提供了对 ApplicationContext 进行设置的能力。\n\n实现一个 ApplicationContextInitializer 非常简单，因为它只有一个方法，但大多数情况下我们没有必要自定义一个 ApplicationContextInitializer，即便是 Spring Boot 框架，它默认也只是注册了两个实现，毕竟 Spring 的容器已经非常成熟和稳定，你没有必要来改变它。\n\n而ApplicationListener的目的就没什么好说的了，它是 Spring 框架对 Java 事件监听机制的一种框架实现，具体内容在前文 Spring 事件监听机制这个小节有详细讲解。这里主要说说，如果你想为 Spring Boot 应用添加监听器，该如何实现？\n\nSpring Boot 提供两种方式来添加自定义监听器：\n\n * 通过SpringApplication.addListeners(ApplicationListener... listeners)或者SpringApplication.setListeners(Collection> listeners)两个方法来添加一个或者多个自定义监听器\n * 既然 SpringApplication 的初始化流程中已经从spring.factories中获取到ApplicationListener的实现类，那么我们直接在自己的 jar 包的META-INF/spring.factories文件中新增配置即可：\n\norg.springframework.context.ApplicationListener=\\\ncn.moondev.listeners.xxxxListener\\\n\n\n关于 SpringApplication 的初始化，我们就说这么多。\n\n\n# 6.2 Spring Boot 启动流程\n\nSpring Boot 应用的整个启动流程都封装在 SpringApplication.run 方法中，其整个流程真的是太长太长了，但本质上就是在 Spring 容器启动的基础上做了大量的扩展，按照这个思路来看看源码：\n\npublic ConfigurableApplicationContext run(String... args) {\n        StopWatch stopWatch = new StopWatch();\n        stopWatch.start();\n        ConfigurableApplicationContext context = null;\n        FailureAnalyzers analyzers = null;\n        configureHeadlessProperty();\n        // ①\n        SpringApplicationRunListeners listeners = getRunListeners(args);\n        listeners.starting();\n        try {\n            // ②\n            ApplicationArguments applicationArguments = new DefaultApplicationArguments(args);\n            ConfigurableEnvironment environment = prepareEnvironment(listeners,applicationArguments);\n            // ③\n            Banner printedBanner = printBanner(environment);\n            // ④\n            context = createApplicationContext();\n            // ⑤\n            analyzers = new FailureAnalyzers(context);\n            // ⑥\n            prepareContext(context, environment, listeners, applicationArguments,printedBanner);\n            // ⑦\n            refreshContext(context);\n            // ⑧\n            afterRefresh(context, applicationArguments);\n            // ⑨\n            listeners.finished(context, null);\n            stopWatch.stop();\n            return context;\n        }\n        catch (Throwable ex) {\n            handleRunFailure(context, listeners, analyzers, ex);\n            throw new IllegalStateException(ex);\n        }\n    }\n\n\n① 通过 SpringFactoriesLoader 查找并加载所有的SpringApplicationRunListeners，通过调用 starting()方法通知所有的 SpringApplicationRunListeners：应用开始启动了。SpringApplicationRunListeners 其本质上就是一个事件发布者，它在 SpringBoot 应用启动的不同时间点发布不同应用事件类型(ApplicationEvent)，如果有哪些事件监听者(ApplicationListener)对这些事件感兴趣，则可以接收并且处理。还记得初始化流程中，SpringApplication 加载了一系列 ApplicationListener 吗？这个启动流程中没有发现有发布事件的代码，其实都已经在 SpringApplicationRunListeners 这儿实现了。\n\n简单的分析一下其实现流程，首先看下 SpringApplicationRunListener 的源码：\n\npublic interface SpringApplicationRunListener {\n\n    // 运行run方法时立即调用此方法，可以用户非常早期的初始化工作\n    void starting();\n\n    // Environment准备好后，并且ApplicationContext创建之前调用\n    void environmentPrepared(ConfigurableEnvironment environment);\n\n    // ApplicationContext创建好后立即调用\n    void contextPrepared(ConfigurableApplicationContext context);\n\n    // ApplicationContext加载完成，在refresh之前调用\n    void contextLoaded(ConfigurableApplicationContext context);\n\n    // 当run方法结束之前调用\n    void finished(ConfigurableApplicationContext context, Throwable exception);\n\n}\n\n\nSpringApplicationRunListener 只有一个实现类：EventPublishingRunListener。① 处的代码只会获取到一个 EventPublishingRunListener 的实例，我们来看看 starting()方法的内容：\n\npublic void starting() {\n    // 发布一个ApplicationStartedEvent\n    this.initialMulticaster.multicastEvent(new ApplicationStartedEvent(this.application, this.args));\n}\n\n\n顺着这个逻辑，你可以在 ② 处的prepareEnvironment()方法的源码中找到listeners.environmentPrepared(environment);即 SpringApplicationRunListener 接口的第二个方法，那不出你所料，environmentPrepared()又发布了另外一个事件ApplicationEnvironmentPreparedEvent。接下来会发生什么，就不用我多说了吧。\n\n② 创建并配置当前应用将要使用的Environment，Environment 用于描述应用程序当前的运行环境，其抽象了两个方面的内容：配置文件(profile)和属性(properties)，开发经验丰富的同学对这两个东西一定不会陌生：不同的环境(eg：生产环境、预发布环境)可以使用不同的配置文件，而属性则可以从配置文件、环境变量、命令行参数等来源获取。因此，当 Environment 准备好后，在整个应用的任何时候，都可以从 Environment 中获取资源。\n\n总结起来，② 处的两句代码，主要完成以下几件事：\n\n * 判断 Environment 是否存在，不存在就创建（如果是 web 项目就创建StandardServletEnvironment，否则创建StandardEnvironment）\n * 配置 Environment：配置 profile 以及 properties\n * 调用 SpringApplicationRunListener 的environmentPrepared()方法，通知事件监听者：应用的 Environment 已经准备好\n\n③、SpringBoot 应用在启动时会输出这样的东西：\n\n  .   ____          _            __ _ _\n /\\\\ / ___\'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | \'_ | \'_| | \'_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  \'  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n :: Spring Boot ::        (v1.5.6.RELEASE)\n\n\n如果想把这个东西改成自己的涂鸦，你可以研究以下 Banner 的实现，这个任务就留给你们吧。\n\n④、根据是否是 web 项目，来创建不同的 ApplicationContext 容器。\n\n⑤、创建一系列FailureAnalyzer，创建流程依然是通过 SpringFactoriesLoader 获取到所有实现 FailureAnalyzer 接口的 class，然后在创建对应的实例。FailureAnalyzer 用于分析故障并提供相关诊断信息。\n\n⑥、初始化 ApplicationContext，主要完成以下工作：\n\n * 将准备好的 Environment 设置给 ApplicationContext\n * 遍历调用所有的 ApplicationContextInitializer 的initialize()方法来对已经创建好的 ApplicationContext 进行进一步的处理\n * 调用 SpringApplicationRunListener 的contextPrepared()方法，通知所有的监听者：ApplicationContext 已经准备完毕\n * 将所有的 bean 加载到容器中\n * 调用 SpringApplicationRunListener 的contextLoaded()方法，通知所有的监听者：ApplicationContext 已经装载完毕\n\n⑦、调用 ApplicationContext 的refresh()方法，完成 IoC 容器可用的最后一道工序。从名字上理解为刷新容器，那何为刷新？就是插手容器的启动，联系一下第一小节的内容。那如何刷新呢？且看下面代码：\n\n// 摘自refresh()方法中一句代码\ninvokeBeanFactoryPostProcessors(beanFactory);\n\n\n看看这个方法的实现：\n\nprotected void invokeBeanFactoryPostProcessors(ConfigurableListableBeanFactory beanFactory) {\n    PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(beanFactory, getBeanFactoryPostProcessors());\n    ......\n}\n\n\n获取到所有的BeanFactoryPostProcessor来对容器做一些额外的操作。BeanFactoryPostProcessor 允许我们在容器实例化相应对象之前，对注册到容器的 BeanDefinition 所保存的信息做一些额外的操作。这里的 getBeanFactoryPostProcessors()方法可以获取到 3 个 Processor：\n\nConfigurationWarningsApplicationContextInitializer$ConfigurationWarningsPostProcessor\nSharedMetadataReaderFactoryContextInitializer$CachingMetadataReaderFactoryPostProcessor\nConfigFileApplicationListener$PropertySourceOrderingPostProcessor\n\n\n不是有那么多 BeanFactoryPostProcessor 的实现类，为什么这儿只有这 3 个？因为在初始化流程获取到的各种 ApplicationContextInitializer 和 ApplicationListener 中，只有上文 3 个做了类似于如下操作：\n\npublic void initialize(ConfigurableApplicationContext context) {\n    context.addBeanFactoryPostProcessor(new ConfigurationWarningsPostProcessor(getChecks()));\n}\n\n\n然后你就可以进入到PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors()方法了，这个方法除了会遍历上面的 3 个 BeanFactoryPostProcessor 处理外，还会获取类型为BeanDefinitionRegistryPostProcessor的 bean：org.springframework.context.annotation.internalConfigurationAnnotationProcessor，对应的 Class 为ConfigurationClassPostProcessor。ConfigurationClassPostProcessor用于解析处理各种注解，包括：@Configuration、@ComponentScan、@Import、@PropertySource、@ImportResource、@Bean。当处理@import注解的时候，就会调用<自动配置>这一小节中的EnableAutoConfigurationImportSelector.selectImports()来完成自动配置功能。其他的这里不再多讲，如果你有兴趣，可以查阅参考资料 6。\n\n⑧、查找当前 context 中是否注册有 CommandLineRunner 和 ApplicationRunner，如果有则遍历执行它们。\n\n⑨、执行所有 SpringApplicationRunListener 的 finished()方法。\n\n这就是 Spring Boot 的整个启动流程，其核心就是在 Spring 容器初始化并启动的基础上加入各种扩展点，这些扩展点包括：ApplicationContextInitializer、ApplicationListener 以及各种 BeanFactoryPostProcessor 等等。你对整个流程的细节不必太过关注，甚至没弄明白也没有关系，你只要理解这些扩展点是在何时如何工作的，能让它们为你所用即可。\n\n整个启动流程确实非常复杂，可以查询参考资料中的部分章节和内容，对照着源码，多看看，我想最终你都能弄清楚的。言而总之，Spring 才是核心，理解清楚 Spring 容器的启动流程，那 Spring Boot 启动流程就不在话下了。\n\n\n# 参考资料\n\n[1] 王福强 著；SpringBoot 揭秘：快速构建微服务体系; 机械工业出版社, 2016 [2] 王福强 著；Spring 揭秘; 人民邮件出版社, 2009 [3] Craig Walls 著；丁雪丰 译；Spring Boot 实战；中国工信出版集团 人民邮电出版社，2016 [4] 深入探讨 Java 类加载器 : www.ibm.com/developerwo… [5] spring boot 实战：自动配置原理分析 : blog.csdn.net/liaokailin/… [6]spring boot实战：spring boot bean加载源码分析： blog.csdn.net/liaokailin/…',normalizedContent:'# springboot 知识图谱\n\n>  1. 预警：本文非常长，建议先 mark 后看，也许是最后一次写这么长的文章\n>  2. 说明：前面有 4 个小节关于 spring 的基础知识，分别是：ioc 容器、javaconfig、事件监听、springfactoriesloader 详解，它们占据了本文的大部分内容，虽然它们之间可能没有太多的联系，但这些知识对于理解 spring boot 的核心原理至关重要，如果你对 spring 框架烂熟于心，完全可以跳过这 4 个小节。正是因为这个系列的文章是由这些看似不相关的知识点组成，因此取名知识清单。\n\n在过去两三年的 spring 生态圈，最让人兴奋的莫过于 spring boot 框架。或许从命名上就能看出这个框架的设计初衷：快速的启动 spring 应用。因而 spring boot 应用本质上就是一个基于 spring 框架的应用，它是 spring 对“约定优先于配置”理念的最佳实践产物，它能够帮助开发者更快速高效地构建基于 spring 生态圈的应用。\n\n那 spring boot 有何魔法？自动配置、起步依赖、actuator、命令行界面(cli) 是 spring boot 最重要的 4 大核心特性，其中 cli 是 spring boot 的可选特性，虽然它功能强大，但也引入了一套不太常规的开发模型，因而这个系列的文章仅关注其它 3 种特性。如文章标题，本文是这个系列的第一部分，将为你打开 spring boot 的大门，重点为你剖析其启动流程以及自动配置实现原理。要掌握这部分核心内容，理解一些 spring 框架的基础知识，将会让你事半功倍。\n\n\n# 一、抛砖引玉：探索 spring ioc 容器\n\n如果有看过springapplication.run()方法的源码，spring boot 冗长无比的启动流程一定会让你抓狂，透过现象看本质，springapplication 只是将一个典型的 spring 应用的启动流程进行了扩展，因此，透彻理解 spring 容器是打开 spring boot 大门的一把钥匙。\n\n\n# 1.1、spring ioc 容器\n\n可以把 spring ioc 容器比作一间餐馆，当你来到餐馆，通常会直接招呼服务员：点菜！至于菜的原料是什么？如何用原料把菜做出来？可能你根本就不关心。ioc 容器也是一样，你只需要告诉它需要某个 bean，它就把对应的实例（instance）扔给你，至于这个 bean 是否依赖其他组件，怎样完成它的初始化，根本就不需要你关心。\n\n作为餐馆，想要做出菜肴，得知道菜的原料和菜谱，同样地，ioc 容器想要管理各个业务对象以及它们之间的依赖关系，需要通过某种途径来记录和管理这些信息。beandefinition对象就承担了这个责任：容器中的每一个 bean 都会有一个对应的 beandefinition 实例，该实例负责保存 bean 对象的所有必要信息，包括 bean 对象的 class 类型、是否是抽象类、构造方法和参数、其它属性等等。当客户端向容器请求相应对象时，容器就会通过这些信息为客户端返回一个完整可用的 bean 实例。\n\n原材料已经准备好（把 beandefinition 看着原料），开始做菜吧，等等，你还需要一份菜谱，beandefinitionregistry和beanfactory就是这份菜谱，beandefinitionregistry 抽象出 bean 的注册逻辑，而 beanfactory 则抽象出了 bean 的管理逻辑，而各个 beanfactory 的实现类就具体承担了 bean 的注册以及管理工作。它们之间的关系就如下图：\n\nbeanfactory、beandefinitionregistry 关系图（来自：spring 揭秘）\n\ndefaultlistablebeanfactory作为一个比较通用的 beanfactory 实现，它同时也实现了 beandefinitionregistry 接口，因此它就承担了 bean 的注册管理工作。从图中也可以看出，beanfactory 接口中主要包含 getbean、containbean、gettype、getaliases 等管理 bean 的方法，而 beandefinitionregistry 接口则包含 registerbeandefinition、removebeandefinition、getbeandefinition 等注册管理 beandefinition 的方法。\n\n下面通过一段简单的代码来模拟 beanfactory 底层是如何工作的：\n\n// 默认容器实现\ndefaultlistablebeanfactory beanregistry = new defaultlistablebeanfactory();\n// 根据业务对象构造相应的beandefinition\nabstractbeandefinition definition = new rootbeandefinition(business.class,true);\n// 将bean定义注册到容器中\nbeanregistry.registerbeandefinition("beanname",definition);\n// 如果有多个bean，还可以指定各个bean之间的依赖关系\n// ........\n\n// 然后可以从容器中获取这个bean的实例\n// 注意：这里的beanregistry其实实现了beanfactory接口，所以可以强转，\n// 单纯的beandefinitionregistry是无法强制转换到beanfactory类型的\nbeanfactory container = (beanfactory)beanregistry;\nbusiness business = (business)container.getbean("beanname");\n\n\n这段代码仅为了说明 beanfactory 底层的大致工作流程，实际情况会更加复杂，比如 bean 之间的依赖关系可能定义在外部配置文件(xml/properties)中、也可能是注解方式。spring ioc 容器的整个工作流程大致可以分为两个阶段：\n\n①、容器启动阶段\n\n容器启动时，会通过某种途径加载configuration metadata。除了代码方式比较直接外，在大部分情况下，容器需要依赖某些工具类，比如：beandefinitionreader，beandefinitionreader 会对加载的configuration metadata进行解析和分析，并将分析后的信息组装为相应的 beandefinition，最后把这些保存了 bean 定义的 beandefinition，注册到相应的 beandefinitionregistry，这样容器的启动工作就完成了。这个阶段主要完成一些准备性工作，更侧重于 bean 对象管理信息的收集，当然一些验证性或者辅助性的工作也在这一阶段完成。\n\n来看一个简单的例子吧，过往，所有的 bean 都定义在 xml 配置文件中，下面的代码将模拟 beanfactory 如何从配置文件中加载 bean 的定义以及依赖关系：\n\n// 通常为beandefinitionregistry的实现类，这里以defaultlistabebeanfactory为例\nbeandefinitionregistry beanregistry = new defaultlistablebeanfactory();\n// xmlbeandefinitionreader实现了beandefinitionreader接口，用于解析xml文件\nxmlbeandefinitionreader beandefinitionreader = new xmlbeandefinitionreaderimpl(beanregistry);\n// 加载配置文件\nbeandefinitionreader.loadbeandefinitions("classpath:spring-bean.xml");\n\n// 从容器中获取bean实例\nbeanfactory container = (beanfactory)beanregistry;\nbusiness business = (business)container.getbean("beanname");\n\n\n②、bean 的实例化阶段\n\n经过第一阶段，所有 bean 定义都通过 beandefinition 的方式注册到 beandefinitionregistry 中，当某个请求通过容器的 getbean 方法请求某个对象，或者因为依赖关系容器需要隐式的调用 getbean 时，就会触发第二阶段的活动：容器会首先检查所请求的对象之前是否已经实例化完成。如果没有，则会根据注册的 beandefinition 所提供的信息实例化被请求对象，并为其注入依赖。当该对象装配完毕后，容器会立即将其返回给请求方法使用。\n\nbeanfactory 只是 spring ioc 容器的一种实现，如果没有特殊指定，它采用采用延迟初始化策略：只有当访问容器中的某个对象时，才对该对象进行初始化和依赖注入操作。而在实际场景下，我们更多的使用另外一种类型的容器：applicationcontext，它构建在 beanfactory 之上，属于更高级的容器，除了具有 beanfactory 的所有能力之外，还提供对事件监听机制以及国际化的支持等。它管理的 bean，在容器启动时全部完成初始化和依赖注入操作。\n\n\n# 1.2、spring 容器扩展机制\n\nioc 容器负责管理容器中所有 bean 的生命周期，而在 bean 生命周期的不同阶段，spring 提供了不同的扩展点来改变 bean 的命运。在容器的启动阶段，beanfactorypostprocessor允许我们在容器实例化相应对象之前，对注册到容器的 beandefinition 所保存的信息做一些额外的操作，比如修改 bean 定义的某些属性或者增加其他信息等。\n\n如果要自定义扩展类，通常需要实现org.springframework.beans.factory.config.beanfactorypostprocessor接口，与此同时，因为容器中可能有多个 beanfactorypostprocessor，可能还需要实现org.springframework.core.ordered接口，以保证 beanfactorypostprocessor 按照顺序执行。spring 提供了为数不多的 beanfactorypostprocessor 实现，我们以propertyplaceholderconfigurer来说明其大致的工作流程。\n\n在 spring 项目的 xml 配置文件中，经常可以看到许多配置项的值使用占位符，而将占位符所代表的值单独配置到独立的 properties 文件，这样可以将散落在不同 xml 文件中的配置集中管理，而且也方便运维根据不同的环境进行配置不同的值。这个非常实用的功能就是由 propertyplaceholderconfigurer 负责实现的。\n\n根据前文，当 beanfactory 在第一阶段加载完所有配置信息时，beanfactory 中保存的对象的属性还是以占位符方式存在的，比如${jdbc.mysql.url}。当 propertyplaceholderconfigurer 作为 beanfactorypostprocessor 被应用时，它会使用 properties 配置文件中的值来替换相应的 beandefinition 中占位符所表示的属性值。当需要实例化 bean 时，bean 定义中的属性值就已经被替换成我们配置的值。当然其实现比上面描述的要复杂一些，这里仅说明其大致工作原理，更详细的实现可以参考其源码。\n\n与之相似的，还有beanpostprocessor，其存在于对象实例化阶段。跟 beanfactorypostprocessor 类似，它会处理容器内所有符合条件并且已经实例化后的对象。简单的对比，beanfactorypostprocessor 处理 bean 的定义，而 beanpostprocessor 则处理 bean 完成实例化后的对象。beanpostprocessor 定义了两个接口：\n\npublic interface beanpostprocessor {\n    // 前置处理\n    object postprocessbeforeinitialization(object bean, string beanname) throws beansexception;\n    // 后置处理\n    object postprocessafterinitialization(object bean, string beanname) throws beansexception;\n}\n\n\n为了理解这两个方法执行的时机，简单的了解下 bean 的整个生命周期：\n\n![img](data:image/svg+xml;utf8,) bean 的实例化过程（来自：spring 揭秘）\n\npostprocessbeforeinitialization()方法与postprocessafterinitialization()分别对应图中前置处理和后置处理两个步骤将执行的方法。这两个方法中都传入了 bean 对象实例的引用，为扩展容器的对象实例化过程提供了很大便利，在这儿几乎可以对传入的实例执行任何操作。注解、aop 等功能的实现均大量使用了beanpostprocessor，比如有一个自定义注解，你完全可以实现 beanpostprocessor 的接口，在其中判断 bean 对象的脑袋上是否有该注解，如果有，你可以对这个 bean 实例执行任何操作，想想是不是非常的简单？\n\n再来看一个更常见的例子，在 spring 中经常能够看到各种各样的 aware 接口，其作用就是在对象实例化完成以后将 aware 接口定义中规定的依赖注入到当前实例中。比如最常见的applicationcontextaware接口，实现了这个接口的类都可以获取到一个 applicationcontext 对象。当容器中每个对象的实例化过程走到 beanpostprocessor 前置处理这一步时，容器会检测到之前注册到容器的 applicationcontextawareprocessor，然后就会调用其 postprocessbeforeinitialization()方法，检查并设置 aware 相关依赖。看看代码吧，是不是很简单：\n\n// 代码来自：org.springframework.context.support.applicationcontextawareprocessor\n// 其postprocessbeforeinitialization方法调用了invokeawareinterfaces方法\nprivate void invokeawareinterfaces(object bean) {\n    if (bean instanceof environmentaware) {\n        ((environmentaware) bean).setenvironment(this.applicationcontext.getenvironment());\n    }\n    if (bean instanceof applicationcontextaware) {\n        ((applicationcontextaware) bean).setapplicationcontext(this.applicationcontext);\n    }\n    // ......\n}\n\n\n最后总结一下，本小节内容和你一起回顾了 spring 容器的部分核心内容，限于篇幅不能写更多，但理解这部分内容，足以让您轻松理解 spring boot 的启动原理，如果在后续的学习过程中遇到一些晦涩难懂的知识，再回过头来看看 spring 的核心知识，也许有意想不到的效果。也许 spring boot 的中文资料很少，但 spring 的中文资料和书籍有太多太多，总有东西能给你启发。\n\n\n# 二、夯实基础：javaconfig 与常见 annotation\n\n\n# 2.1、javaconfig\n\n我们知道bean是 spring ioc 中非常核心的概念，spring 容器负责 bean 的生命周期的管理。在最初，spring 使用 xml 配置文件的方式来描述 bean 的定义以及相互间的依赖关系，但随着 spring 的发展，越来越多的人对这种方式表示不满，因为 spring 项目的所有业务类均以 bean 的形式配置在 xml 文件中，造成了大量的 xml 文件，使项目变得复杂且难以管理。\n\n后来，基于纯 java annotation 依赖注入框架guice出世，其性能明显优于采用 xml 方式的 spring，甚至有部分人认为，guice可以完全取代 spring（guice仅是一个轻量级 ioc 框架，取代 spring 还差的挺远）。正是这样的危机感，促使 spring 及社区推出并持续完善了javaconfig子项目，它基于 java 代码和 annotation 注解来描述 bean 之间的依赖绑定关系。比如，下面是使用 xml 配置方式来描述 bean 的定义：\n\n<bean id="bookservice" class="cn.moondev.service.bookserviceimpl"></bean>\n\n\n而基于 javaconfig 的配置形式是这样的：\n\n@configuration\npublic class moonbookconfiguration {\n\n    // 任何标志了@bean的方法，其返回值将作为一个bean注册到spring的ioc容器中\n    // 方法名默认成为该bean定义的id\n    @bean\n    public bookservice bookservice() {\n        return new bookserviceimpl();\n    }\n}\n\n\n如果两个 bean 之间有依赖关系的话，在 xml 配置中应该是这样：\n\n<bean id="bookservice" class="cn.moondev.service.bookserviceimpl">\n    <property name="dependencyservice" ref="dependencyservice"/>\n</bean>\n\n<bean id="otherservice" class="cn.moondev.service.otherserviceimpl">\n    <property name="dependencyservice" ref="dependencyservice"/>\n</bean>\n\n<bean id="dependencyservice" class="dependencyserviceimpl"/>\n\n\n而在 javaconfig 中则是这样：\n\n@configuration\npublic class moonbookconfiguration {\n\n    // 如果一个bean依赖另一个bean，则直接调用对应javaconfig类中依赖bean的创建方法即可\n    // 这里直接调用dependencyservice()\n    @bean\n    public bookservice bookservice() {\n        return new bookserviceimpl(dependencyservice());\n    }\n\n    @bean\n    public otherservice otherservice() {\n        return new otherserviceimpl(dependencyservice());\n    }\n\n    @bean\n    public dependencyservice dependencyservice() {\n        return new dependencyserviceimpl();\n    }\n}\n\n\n你可能注意到这个示例中，有两个 bean 都依赖于 dependencyservice，也就是说当初始化 bookservice 时会调用dependencyservice()，在初始化 otherservice 时也会调用dependencyservice()，那么问题来了？这时候 ioc 容器中是有一个 dependencyservice 实例还是两个？这个问题留着大家思考吧，这里不再赘述。\n\n\n# 2.2、@componentscan\n\n@componentscan注解对应 xml 配置形式中的``元素，表示启用组件扫描，spring会自动扫描所有通过注解配置的bean，然后将其注册到ioc容器中。我们可以通过basepackages等属性来指定@componentscan自动扫描的范围，如果不指定，默认从声明@componentscan所在类的package进行扫描。正因为如此，springboot的启动类都默认在src/main/java下。\n\n\n# 2.3、@import\n\n@import注解用于导入配置类，举个简单的例子：\n\n@configuration\npublic class moonbookconfiguration {\n    @bean\n    public bookservice bookservice() {\n        return new bookserviceimpl();\n    }\n}\n\n\n现在有另外一个配置类，比如：moonuserconfiguration，这个配置类中有一个 bean 依赖于moonbookconfiguration中的 bookservice，如何将这两个 bean 组合在一起？借助@import即可：\n\n@configuration\n// 可以同时导入多个配置类，比如：@import({a.class,b.class})\n@import(moonbookconfiguration.class)\npublic class moonuserconfiguration {\n    @bean\n    public userservice userservice(bookservice bookservice) {\n        return new bookserviceimpl(bookservice);\n    }\n}\n\n\n需要注意的是，在 4.2 之前，@import注解只支持导入配置类，但是在 4.2 之后，它支持导入普通类，并将这个类作为一个 bean 的定义注册到 ioc 容器中。\n\n\n# 2.4、@conditional\n\n@conditional注解表示在满足某种条件后才初始化一个 bean 或者启用某些配置。它一般用在由@component、@service、@configuration等注解标识的类上面，或者由@bean标记的方法上。如果一个@configuration类标记了@conditional，则该类中所有标识了@bean的方法和@import注解导入的相关类将遵从这些条件。\n\n在 spring 里可以很方便的编写你自己的条件类，所要做的就是实现condition接口，并覆盖它的matches()方法。举个例子，下面的简单条件类表示只有在classpath里存在jdbctemplate类时才生效：\n\npublic class jdbctemplatecondition implements condition {\n\n    @override\n    public boolean matches(conditioncontext conditioncontext, annotatedtypemetadata annotatedtypemetadata) {\n        try {\n        conditioncontext.getclassloader().loadclass("org.springframework.jdbc.core.jdbctemplate");\n            return true;\n        } catch (classnotfoundexception e) {\n            e.printstacktrace();\n        }\n        return false;\n    }\n}\n\n\n当你用 java 来声明 bean 的时候，可以使用这个自定义条件类：\n\n@conditional(jdbctemplatecondition.class)\n@service\npublic myservice service() {\n    ......\n}\n\n\n这个例子中只有当jdbctemplatecondition类的条件成立时才会创建 myservice 这个 bean。也就是说 myservice 这 bean 的创建条件是classpath里面包含jdbctemplate，否则这个 bean 的声明就会被忽略掉。\n\nspring boot定义了很多有趣的条件，并把他们运用到了配置类上，这些配置类构成了spring boot的自动配置的基础。spring boot运用条件化配置的方法是：定义多个特殊的条件化注解，并将它们用到配置类上。下面列出了spring boot提供的部分条件化注解：\n\n条件化注解                             配置生效条件\n@conditionalonbean                配置了某个特定 bean\n@conditionalonmissingbean         没有配置特定的 bean\n@conditionalonclass               classpath 里有指定的类\n@conditionalonmissingclass        classpath 里没有指定的类\n@conditionalonexpression          给定的 spring expression language 表达式计算结果为 true\n@conditionalonjava                java 的版本匹配特定指或者一个范围值\n@conditionalonproperty            指定的配置属性要有一个明确的值\n@conditionalonresource            classpath 里有指定的资源\n@conditionalonwebapplication      这是一个 web 应用程序\n@conditionalonnotwebapplication   这不是一个 web 应用程序\n\n\n# 2.5、@configurationproperties 与@enableconfigurationproperties\n\n当某些属性的值需要配置的时候，我们一般会在application.properties文件中新建配置项，然后在 bean 中使用@value注解来获取配置的值，比如下面配置数据源的代码。\n\n// jdbc config\njdbc.mysql.url=jdbc:mysql://localhost:3306/sampledb\njdbc.mysql.username=root\njdbc.mysql.password=123456\n......\n\n// 配置数据源\n@configuration\npublic class hikaridatasourceconfiguration {\n\n    @value("jdbc.mysql.url")\n    public string url;\n    @value("jdbc.mysql.username")\n    public string user;\n    @value("jdbc.mysql.password")\n    public string password;\n\n    @bean\n    public hikaridatasource datasource() {\n        hikariconfig hikariconfig = new hikariconfig();\n        hikariconfig.setjdbcurl(url);\n        hikariconfig.setusername(user);\n        hikariconfig.setpassword(password);\n        // 省略部分代码\n        return new hikaridatasource(hikariconfig);\n    }\n}\n\n\n使用@value注解注入的属性通常都比较简单，如果同一个配置在多个地方使用，也存在不方便维护的问题（考虑下，如果有几十个地方在使用某个配置，而现在你想改下名字，你改怎么做？）。对于更为复杂的配置，spring boot 提供了更优雅的实现方式，那就是@configurationproperties注解。我们可以通过下面的方式来改写上面的代码：\n\n@component\n//  还可以通过@propertysource("classpath:jdbc.properties")来指定配置文件\n@configurationproperties("jdbc.mysql")\n// 前缀=jdbc.mysql，会在配置文件中寻找jdbc.mysql.*的配置项\npulic class jdbcconfig {\n    public string url;\n    public string username;\n    public string password;\n}\n\n@configuration\npublic class hikaridatasourceconfiguration {\n\n    @autowired\n    public jdbcconfig config;\n\n    @bean\n    public hikaridatasource datasource() {\n        hikariconfig hikariconfig = new hikariconfig();\n        hikariconfig.setjdbcurl(config.url);\n        hikariconfig.setusername(config.username);\n        hikariconfig.setpassword(config.password);\n        // 省略部分代码\n        return new hikaridatasource(hikariconfig);\n    }\n}\n\n\n@configurationproperties对于更为复杂的配置，处理起来也是得心应手，比如有如下配置文件：\n\n#app\napp.menus[0].title=home\napp.menus[0].name=home\napp.menus[0].path=/\napp.menus[1].title=login\napp.menus[1].name=login\napp.menus[1].path=/login\n\napp.compiler.timeout=5\napp.compiler.output-folder=/temp/\n\napp.error=/error/\n\n\n可以定义如下配置类来接收这些属性\n\n@component\n@configurationproperties("app")\npublic class appproperties {\n\n    public string error;\n    public list<menu> menus = new arraylist<>();\n    public compiler compiler = new compiler();\n\n    public static class menu {\n        public string name;\n        public string path;\n        public string title;\n    }\n\n    public static class compiler {\n        public string timeout;\n        public string outputfolder;\n    }\n}\n\n\n@enableconfigurationproperties注解表示对@configurationproperties的内嵌支持，默认会将对应 properties class 作为 bean 注入的 ioc 容器中，即在相应的 properties 类上不用加@component注解。\n\n\n# 三、削铁如泥：springfactoriesloader 详解\n\njvm 提供了 3 种类加载器：bootstrapclassloader、extclassloader、appclassloader分别加载 java 核心类库、扩展类库以及应用的类路径(classpath)下的类库。jvm 通过双亲委派模型进行类的加载，我们也可以通过继承java.lang.classloader实现自己的类加载器。\n\n何为双亲委派模型？当一个类加载器收到类加载任务时，会先交给自己的父加载器去完成，因此最终加载任务都会传递到最顶层的 bootstrapclassloader，只有当父加载器无法完成加载任务时，才会尝试自己来加载。\n\n采用双亲委派模型的一个好处是保证使用不同类加载器最终得到的都是同一个对象，这样就可以保证 java 核心库的类型安全，比如，加载位于 rt.jar 包中的java.lang.object类，不管是哪个加载器加载这个类，最终都是委托给顶层的 bootstrapclassloader 来加载的，这样就可以保证任何的类加载器最终得到的都是同样一个 object 对象。查看 classloader 的源码，对双亲委派模型会有更直观的认识：\n\nprotected class<?> loadclass(string name, boolean resolve) {\n    synchronized (getclassloadinglock(name)) {\n    // 首先，检查该类是否已经被加载，如果从jvm缓存中找到该类，则直接返回\n    class<?> c = findloadedclass(name);\n    if (c == null) {\n        try {\n            // 遵循双亲委派的模型，首先会通过递归从父加载器开始找，\n            // 直到父类加载器是bootstrapclassloader为止\n            if (parent != null) {\n                c = parent.loadclass(name, false);\n            } else {\n                c = findbootstrapclassornull(name);\n            }\n        } catch (classnotfoundexception e) {}\n        if (c == null) {\n            // 如果还找不到，尝试通过findclass方法去寻找\n            // findclass是留给开发者自己实现的，也就是说\n            // 自定义类加载器时，重写此方法即可\n           c = findclass(name);\n        }\n    }\n    if (resolve) {\n        resolveclass(c);\n    }\n    return c;\n    }\n}\n\n\n但双亲委派模型并不能解决所有的类加载器问题，比如，java 提供了很多服务提供者接口(service provider interface，spi)，允许第三方为这些接口提供实现。常见的 spi 有 jdbc、jndi、jaxp 等，这些 spi 的接口由核心类库提供，却由第三方实现，这样就存在一个问题：spi 的接口是 java 核心库的一部分，是由 bootstrapclassloader 加载的；spi 实现的 java 类一般是由 appclassloader 来加载的。bootstrapclassloader 是无法找到 spi 的实现类的，因为它只加载 java 的核心库。它也不能代理给 appclassloader，因为它是最顶层的类加载器。也就是说，双亲委派模型并不能解决这个问题。\n\n线程上下文类加载器(contextclassloader)正好解决了这个问题。从名称上看，可能会误解为它是一种新的类加载器，实际上，它仅仅是 thread 类的一个变量而已，可以通过setcontextclassloader(classloader cl)和getcontextclassloader()来设置和获取该对象。如果不做任何的设置，java 应用的线程的上下文类加载器默认就是 appclassloader。在核心类库使用 spi 接口时，传递的类加载器使用线程上下文类加载器，就可以成功的加载到 spi 实现的类。线程上下文类加载器在很多 spi 的实现中都会用到。但在 jdbc 中，你可能会看到一种更直接的实现方式，比如，jdbc 驱动管理java.sql.driver中的loadinitialdrivers()方法中，你可以直接看到 jdk 是如何加载驱动的：\n\nfor (string adriver : driverslist) {\n    try {\n        // 直接使用appclassloader\n        class.forname(adriver, true, classloader.getsystemclassloader());\n    } catch (exception ex) {\n        println("drivermanager.initialize: load failed: " + ex);\n    }\n}\n\n\n其实讲解线程上下文类加载器，最主要是让大家在看到thread.currentthread().getclassloader()和thread.currentthread().getcontextclassloader()时不会一脸懵逼，这两者除了在许多底层框架中取得的 classloader 可能会有所不同外，其他大多数业务场景下都是一样的，大家只要知道它是为了解决什么问题而存在的即可。\n\n类加载器除了加载 class 外，还有一个非常重要功能，就是加载资源，它可以从 jar 包中读取任何资源文件，比如，classloader.getresources(string name)方法就是用于读取 jar 包中的资源文件，其代码如下：\n\npublic enumeration<url> getresources(string name) throws ioexception {\n    enumeration<url>[] tmp = (enumeration<url>[]) new enumeration<?>[2];\n    if (parent != null) {\n        tmp[0] = parent.getresources(name);\n    } else {\n        tmp[0] = getbootstrapresources(name);\n    }\n    tmp[1] = findresources(name);\n    return new compoundenumeration<>(tmp);\n}\n\n\n是不是觉得有点眼熟，不错，它的逻辑其实跟类加载的逻辑是一样的，首先判断父类加载器是否为空，不为空则委托父类加载器执行资源查找任务，直到 bootstrapclassloader，最后才轮到自己查找。而不同的类加载器负责扫描不同路径下的 jar 包，就如同加载 class 一样，最后会扫描所有的 jar 包，找到符合条件的资源文件。\n\n类加载器的findresources(name)方法会遍历其负责加载的所有 jar 包，找到 jar 包中名称为 name 的资源文件，这里的资源可以是任何文件，甚至是.class 文件，比如下面的示例，用于查找 array.class 文件：\n\n// 寻找array.class文件\npublic static void main(string[] args) throws exception{\n    // array.class的完整路径\n    string name = "java/sql/array.class";\n    enumeration<url> urls = thread.currentthread().getcontextclassloader().getresources(name);\n    while (urls.hasmoreelements()) {\n        url url = urls.nextelement();\n        system.out.println(url.tostring());\n    }\n}\n\n\n运行后可以得到如下结果：\n\n$java_home/jre/lib/rt.jar!/java/sql/array.class\n\n\n根据资源文件的 url，可以构造相应的文件来读取资源内容。\n\n看到这里，你可能会感到挺奇怪的，你不是要详解springfactoriesloader吗？上来讲了一堆 classloader 是几个意思？看下它的源码你就知道了：\n\npublic static final string factories_resource_location = "meta-inf/spring.factories";\n// spring.factories文件的格式为：key=value1,value2,value3\n// 从所有的jar包中找到meta-inf/spring.factories文件\n// 然后从文件中解析出key=factoryclass类名称的所有value值\npublic static list<string> loadfactorynames(class<?> factoryclass, classloader classloader) {\n    string factoryclassname = factoryclass.getname();\n    // 取得资源文件的url\n    enumeration<url> urls = (classloader != null ? classloader.getresources(factories_resource_location) : classloader.getsystemresources(factories_resource_location));\n    list<string> result = new arraylist<string>();\n    // 遍历所有的url\n    while (urls.hasmoreelements()) {\n        url url = urls.nextelement();\n        // 根据资源文件url解析properties文件\n        properties properties = propertiesloaderutils.loadproperties(new urlresource(url));\n        string factoryclassnames = properties.getproperty(factoryclassname);\n        // 组装数据，并返回\n        result.addall(arrays.aslist(stringutils.commadelimitedlisttostringarray(factoryclassnames)));\n    }\n    return result;\n}\n\n\n有了前面关于 classloader 的知识，再来理解这段代码，是不是感觉豁然开朗：从classpath下的每个 jar 包中搜寻所有meta-inf/spring.factories配置文件，然后将解析 properties 文件，找到指定名称的配置后返回。需要注意的是，其实这里不仅仅是会去 classpath 路径下查找，会扫描所有路径下的 jar 包，只不过这个文件只会在 classpath 下的 jar 包中。来简单看下spring.factories文件的内容吧：\n\n// 来自 org.springframework.boot.autoconfigure下的meta-inf/spring.factories\n// enableautoconfiguration后文会讲到，它用于开启spring boot自动配置功能\norg.springframework.boot.autoconfigure.enableautoconfiguration=\\\norg.springframework.boot.autoconfigure.admin.springapplicationadminjmxautoconfiguration,\\\norg.springframework.boot.autoconfigure.aop.aopautoconfiguration,\\\norg.springframework.boot.autoconfigure.amqp.rabbitautoconfiguration\\\n\n\n执行loadfactorynames(enableautoconfiguration.class, classloader)后，得到对应的一组@configuration类， 我们就可以通过反射实例化这些类然后注入到 ioc 容器中，最后容器里就有了一系列标注了@configuration的 javaconfig 形式的配置类。\n\n这就是springfactoriesloader，它本质上属于 spring 框架私有的一种扩展方案，类似于 spi，spring boot 在 spring 基础上的很多核心功能都是基于此，希望大家可以理解。\n\n\n# 四、另一件武器：spring 容器的事件监听机制\n\n过去，事件监听机制多用于图形界面编程，比如：点击按钮、在文本框输入内容等操作被称为事件，而当事件触发时，应用程序作出一定的响应则表示应用监听了这个事件，而在服务器端，事件的监听机制更多的用于异步通知以及监控和异常处理。java 提供了实现事件监听机制的两个基础类：自定义事件类型扩展自java.util.eventobject、事件的监听器扩展自java.util.eventlistener。来看一个简单的实例：简单的监控一个方法的耗时。\n\n首先定义事件类型，通常的做法是扩展 eventobject，随着事件的发生，相应的状态通常都封装在此类中：\n\npublic class methodmonitorevent extends eventobject {\n    // 时间戳，用于记录方法开始执行的时间\n    public long timestamp;\n\n    public methodmonitorevent(object source) {\n        super(source);\n    }\n}\n\n\n事件发布之后，相应的监听器即可对该类型的事件进行处理，我们可以在方法开始执行之前发布一个 begin 事件，在方法执行结束之后发布一个 end 事件，相应地，事件监听器需要提供方法对这两种情况下接收到的事件进行处理：\n\n// 1、定义事件监听接口\npublic interface methodmonitoreventlistener extends eventlistener {\n    // 处理方法执行之前发布的事件\n    public void onmethodbegin(methodmonitorevent event);\n    // 处理方法结束时发布的事件\n    public void onmethodend(methodmonitorevent event);\n}\n// 2、事件监听接口的实现：如何处理\npublic class abstractmethodmonitoreventlistener implements methodmonitoreventlistener {\n\n    @override\n    public void onmethodbegin(methodmonitorevent event) {\n        // 记录方法开始执行时的时间\n        event.timestamp = system.currenttimemillis();\n    }\n\n    @override\n    public void onmethodend(methodmonitorevent event) {\n        // 计算方法耗时\n        long duration = system.currenttimemillis() - event.timestamp;\n        system.out.println("耗时：" + duration);\n    }\n}\n\n\n事件监听器接口针对不同的事件发布实际提供相应的处理方法定义，最重要的是，其方法只接收 methodmonitorevent 参数，说明这个监听器类只负责监听器对应的事件并进行处理。有了事件和监听器，剩下的就是发布事件，然后让相应的监听器监听并处理。通常情况，我们会有一个事件发布者，它本身作为事件源，在合适的时机，将相应的事件发布给对应的事件监听器：\n\npublic class methodmonitoreventpublisher {\n\n    private list<methodmonitoreventlistener> listeners = new arraylist<methodmonitoreventlistener>();\n\n    public void methodmonitor() {\n        methodmonitorevent eventobject = new methodmonitorevent(this);\n        publishevent("begin",eventobject);\n        // 模拟方法执行：休眠5秒钟\n        timeunit.seconds.sleep(5);\n        publishevent("end",eventobject);\n\n    }\n\n    private void publishevent(string status,methodmonitorevent event) {\n        // 避免在事件处理期间，监听器被移除，这里为了安全做一个复制操作\n        list<methodmonitoreventlistener> copylisteners = ➥ new arraylist<methodmonitoreventlistener>(listeners);\n        for (methodmonitoreventlistener listener : copylisteners) {\n            if ("begin".equals(status)) {\n                listener.onmethodbegin(event);\n            } else {\n                listener.onmethodend(event);\n            }\n        }\n    }\n\n    public static void main(string[] args) {\n        methodmonitoreventpublisher publisher = new methodmonitoreventpublisher();\n        publisher.addeventlistener(new abstractmethodmonitoreventlistener());\n        publisher.methodmonitor();\n    }\n    // 省略实现\n    public void addeventlistener(methodmonitoreventlistener listener) {}\n    public void removeeventlistener(methodmonitoreventlistener listener) {}\n    public void removealllisteners() {}\n\n\n对于事件发布者（事件源）通常需要关注两点：\n\n 1. 在合适的时机发布事件。此例中的 methodmonitor()方法是事件发布的源头，其在方法执行之前和结束之后两个时间点发布 methodmonitorevent 事件，每个时间点发布的事件都会传给相应的监听器进行处理。在具体实现时需要注意的是，事件发布是顺序执行，为了不影响处理性能，事件监听器的处理逻辑应尽量简单。\n 2. 事件监听器的管理。publisher 类中提供了事件监听器的注册与移除方法，这样客户端可以根据实际情况决定是否需要注册新的监听器或者移除某个监听器。如果这里没有提供 remove 方法，那么注册的监听器示例将一直被 methodmonitoreventpublisher 引用，即使已经废弃不用了，也依然在发布者的监听器列表中，这会导致隐性的内存泄漏。\n\n# spring 容器内的事件监听机制\n\nspring 的 applicationcontext 容器内部中的所有事件类型均继承自org.springframework.context.appliationevent，容器中的所有监听器都实现org.springframework.context.applicationlistener接口，并且以 bean 的形式注册在容器中。一旦在容器内发布 applicationevent 及其子类型的事件，注册到容器的 applicationlistener 就会对这些事件进行处理。\n\n你应该已经猜到是怎么回事了。\n\napplicationevent 继承自 eventobject，spring 提供了一些默认的实现，比如：contextclosedevent表示容器在即将关闭时发布的事件类型，contextrefreshedevent表示容器在初始化或者刷新的时候发布的事件类型......\n\n容器内部使用 applicationlistener 作为事件监听器接口定义，它继承自 eventlistener。applicationcontext 容器在启动时，会自动识别并加载 eventlistener 类型的 bean，一旦容器内有事件发布，将通知这些注册到容器的 eventlistener。\n\napplicationcontext 接口继承了 applicationeventpublisher 接口，该接口提供了void publishevent(applicationevent event)方法定义，不难看出，applicationcontext 容器担当的就是事件发布者的角色。如果有兴趣可以查看abstractapplicationcontext.publishevent(applicationevent event)方法的源码：applicationcontext 将事件的发布以及监听器的管理工作委托给applicationeventmulticaster接口的实现类。在容器启动时，会检查容器内是否存在名为 applicationeventmulticaster 的 applicationeventmulticaster 对象实例。如果有就使用其提供的实现，没有就默认初始化一个 simpleapplicationeventmulticaster 作为实现。\n\n最后，如果我们业务需要在容器内部发布事件，只需要为其注入 applicationeventpublisher 依赖即可：实现 applicationeventpublisheraware 接口或者 applicationcontextaware 接口(aware 接口相关内容请回顾上文)。\n\n\n# 五、出神入化：揭秘自动配置原理\n\n典型的 spring boot 应用的启动类一般均位于src/main/java根路径下，比如moonapplication类：\n\n@springbootapplication\npublic class moonapplication {\n\n    public static void main(string[] args) {\n        springapplication.run(moonapplication.class, args);\n    }\n}\n\n\n其中@springbootapplication开启组件扫描和自动配置，而springapplication.run则负责启动引导应用程序。@springbootapplication是一个复合annotation，它将三个有用的注解组合在一起：\n\n@target(elementtype.type)\n@retention(retentionpolicy.runtime)\n@documented\n@inherited\n@springbootconfiguration\n@enableautoconfiguration\n@componentscan(excludefilters = {\n        @filter(type = filtertype.custom, classes = typeexcludefilter.class),\n        @filter(type = filtertype.custom, classes = autoconfigurationexcludefilter.class) })\npublic @interface springbootapplication {\n    // ......\n}\n\n\n@springbootconfiguration就是@configuration，它是 spring 框架的注解，标明该类是一个javaconfig配置类。而@componentscan启用组件扫描，前文已经详细讲解过，这里着重关注@enableautoconfiguration。\n\n@enableautoconfiguration注解表示开启 spring boot 自动配置功能，spring boot 会根据应用的依赖、自定义的 bean、classpath 下有没有某个类 等等因素来猜测你需要的 bean，然后注册到 ioc 容器中。那@enableautoconfiguration是如何推算出你的需求？首先看下它的定义：\n\n@target(elementtype.type)\n@retention(retentionpolicy.runtime)\n@documented\n@inherited\n@autoconfigurationpackage\n@import(enableautoconfigurationimportselector.class)\npublic @interface enableautoconfiguration {\n    // ......\n}\n\n\n你的关注点应该在@import(enableautoconfigurationimportselector.class)上了，前文说过，@import注解用于导入类，并将这个类作为一个 bean 的定义注册到容器中，这里它将把enableautoconfigurationimportselector作为 bean 注入到容器中，而这个类会将所有符合条件的@configuration 配置都加载到容器中，看看它的代码：\n\npublic string[] selectimports(annotationmetadata annotationmetadata) {\n    // 省略了大部分代码，保留一句核心代码\n    // 注意：springboot最近版本中，这句代码被封装在一个单独的方法中\n    // springfactoriesloader相关知识请参考前文\n    list<string> factories = new arraylist<string>(new linkedhashset<string>(\n        springfactoriesloader.loadfactorynames(enableautoconfiguration.class, this.beanclassloader)));\n}\n\n\n这个类会扫描所有的 jar 包，将所有符合条件的@configuration 配置类注入的容器中，何为符合条件，看看meta-inf/spring.factories的文件内容：\n\n// 来自 org.springframework.boot.autoconfigure下的meta-inf/spring.factories\n// 配置的key = enableautoconfiguration，与代码中一致\norg.springframework.boot.autoconfigure.enableautoconfiguration=\\\norg.springframework.boot.autoconfigure.jdbc.datasourceautoconfiguration,\\\norg.springframework.boot.autoconfigure.aop.aopautoconfiguration,\\\norg.springframework.boot.autoconfigure.amqp.rabbitautoconfiguration\\\n.....\n\n\n以datasourceautoconfiguration为例，看看 spring boot 是如何自动配置的：\n\n@configuration\n@conditionalonclass({ datasource.class, embeddeddatabasetype.class })\n@enableconfigurationproperties(datasourceproperties.class)\n@import({ registrar.class, datasourcepoolmetadataprovidersconfiguration.class })\npublic class datasourceautoconfiguration {\n}\n\n\n分别说一说：\n\n * @conditionalonclass({ datasource.class, embeddeddatabasetype.class })：当 classpath 中存在 datasource 或者 embeddeddatabasetype 类时才启用这个配置，否则这个配置将被忽略。\n * @enableconfigurationproperties(datasourceproperties.class)：将 datasource 的默认配置类注入到 ioc 容器中，datasourceproperties 定义为：\n\n// 提供对datasource配置信息的支持，所有的配置前缀为：spring.datasource\n@configurationproperties(prefix = "spring.datasource")\npublic class datasourceproperties  {\n    private classloader classloader;\n    private environment environment;\n    private string name = "testdb";\n    ......\n}\n\n\n * @import({ registrar.class, datasourcepoolmetadataprovidersconfiguration.class })：导入其他额外的配置，就以datasourcepoolmetadataprovidersconfiguration为例吧。\n\n@configuration\npublic class datasourcepoolmetadataprovidersconfiguration {\n\n    @configuration\n    @conditionalonclass(org.apache.tomcat.jdbc.pool.datasource.class)\n    static class tomcatdatasourcepoolmetadataproviderconfiguration {\n        @bean\n        public datasourcepoolmetadataprovider tomcatpooldatasourcemetadataprovider() {\n            .....\n        }\n    }\n  ......\n}\n\n\ndatasourcepoolmetadataprovidersconfiguration 是数据库连接池提供者的一个配置类，即 classpath 中存在org.apache.tomcat.jdbc.pool.datasource.class，则使用 tomcat-jdbc 连接池，如果 classpath 中存在hikaridatasource.class则使用 hikari 连接池。\n\n这里仅描述了 datasourceautoconfiguration 的冰山一角，但足以说明 spring boot 如何利用条件话配置来实现自动配置的。回顾一下，@enableautoconfiguration中导入了 enableautoconfigurationimportselector 类，而这个类的selectimports()通过 springfactoriesloader 得到了大量的配置类，而每一个配置类则根据条件化配置来做出决策，以实现自动配置。\n\n整个流程很清晰，但漏了一个大问题：enableautoconfigurationimportselector.selectimports()是何时执行的？其实这个方法会在容器启动过程中执行：abstractapplicationcontext.refresh()，更多的细节在下一小节中说明。\n\n\n# 六、启动引导：spring boot 应用启动的秘密\n\n\n# 6.1 springapplication 初始化\n\nspringboot 整个启动流程分为两个步骤：初始化一个 springapplication 对象、执行该对象的 run 方法。看下 springapplication 的初始化流程，springapplication 的构造方法中调用 initialize(object[] sources)方法，其代码如下：\n\nprivate void initialize(object[] sources) {\n     if (sources != null && sources.length > 0) {\n         this.sources.addall(arrays.aslist(sources));\n     }\n     // 判断是否是web项目\n     this.webenvironment = deducewebenvironment();\n     setinitializers((collection) getspringfactoriesinstances(applicationcontextinitializer.class));\n     setlisteners((collection) getspringfactoriesinstances(applicationlistener.class));\n     // 找到入口类\n     this.mainapplicationclass = deducemainapplicationclass();\n}\n\n\n初始化流程中最重要的就是通过 springfactoriesloader 找到spring.factories文件中配置的applicationcontextinitializer和applicationlistener两个接口的实现类名称，以便后期构造相应的实例。applicationcontextinitializer的主要目的是在configurableapplicationcontext做 refresh 之前，对 configurableapplicationcontext 实例做进一步的设置或处理。configurableapplicationcontext 继承自 applicationcontext，其主要提供了对 applicationcontext 进行设置的能力。\n\n实现一个 applicationcontextinitializer 非常简单，因为它只有一个方法，但大多数情况下我们没有必要自定义一个 applicationcontextinitializer，即便是 spring boot 框架，它默认也只是注册了两个实现，毕竟 spring 的容器已经非常成熟和稳定，你没有必要来改变它。\n\n而applicationlistener的目的就没什么好说的了，它是 spring 框架对 java 事件监听机制的一种框架实现，具体内容在前文 spring 事件监听机制这个小节有详细讲解。这里主要说说，如果你想为 spring boot 应用添加监听器，该如何实现？\n\nspring boot 提供两种方式来添加自定义监听器：\n\n * 通过springapplication.addlisteners(applicationlistener... listeners)或者springapplication.setlisteners(collection> listeners)两个方法来添加一个或者多个自定义监听器\n * 既然 springapplication 的初始化流程中已经从spring.factories中获取到applicationlistener的实现类，那么我们直接在自己的 jar 包的meta-inf/spring.factories文件中新增配置即可：\n\norg.springframework.context.applicationlistener=\\\ncn.moondev.listeners.xxxxlistener\\\n\n\n关于 springapplication 的初始化，我们就说这么多。\n\n\n# 6.2 spring boot 启动流程\n\nspring boot 应用的整个启动流程都封装在 springapplication.run 方法中，其整个流程真的是太长太长了，但本质上就是在 spring 容器启动的基础上做了大量的扩展，按照这个思路来看看源码：\n\npublic configurableapplicationcontext run(string... args) {\n        stopwatch stopwatch = new stopwatch();\n        stopwatch.start();\n        configurableapplicationcontext context = null;\n        failureanalyzers analyzers = null;\n        configureheadlessproperty();\n        // ①\n        springapplicationrunlisteners listeners = getrunlisteners(args);\n        listeners.starting();\n        try {\n            // ②\n            applicationarguments applicationarguments = new defaultapplicationarguments(args);\n            configurableenvironment environment = prepareenvironment(listeners,applicationarguments);\n            // ③\n            banner printedbanner = printbanner(environment);\n            // ④\n            context = createapplicationcontext();\n            // ⑤\n            analyzers = new failureanalyzers(context);\n            // ⑥\n            preparecontext(context, environment, listeners, applicationarguments,printedbanner);\n            // ⑦\n            refreshcontext(context);\n            // ⑧\n            afterrefresh(context, applicationarguments);\n            // ⑨\n            listeners.finished(context, null);\n            stopwatch.stop();\n            return context;\n        }\n        catch (throwable ex) {\n            handlerunfailure(context, listeners, analyzers, ex);\n            throw new illegalstateexception(ex);\n        }\n    }\n\n\n① 通过 springfactoriesloader 查找并加载所有的springapplicationrunlisteners，通过调用 starting()方法通知所有的 springapplicationrunlisteners：应用开始启动了。springapplicationrunlisteners 其本质上就是一个事件发布者，它在 springboot 应用启动的不同时间点发布不同应用事件类型(applicationevent)，如果有哪些事件监听者(applicationlistener)对这些事件感兴趣，则可以接收并且处理。还记得初始化流程中，springapplication 加载了一系列 applicationlistener 吗？这个启动流程中没有发现有发布事件的代码，其实都已经在 springapplicationrunlisteners 这儿实现了。\n\n简单的分析一下其实现流程，首先看下 springapplicationrunlistener 的源码：\n\npublic interface springapplicationrunlistener {\n\n    // 运行run方法时立即调用此方法，可以用户非常早期的初始化工作\n    void starting();\n\n    // environment准备好后，并且applicationcontext创建之前调用\n    void environmentprepared(configurableenvironment environment);\n\n    // applicationcontext创建好后立即调用\n    void contextprepared(configurableapplicationcontext context);\n\n    // applicationcontext加载完成，在refresh之前调用\n    void contextloaded(configurableapplicationcontext context);\n\n    // 当run方法结束之前调用\n    void finished(configurableapplicationcontext context, throwable exception);\n\n}\n\n\nspringapplicationrunlistener 只有一个实现类：eventpublishingrunlistener。① 处的代码只会获取到一个 eventpublishingrunlistener 的实例，我们来看看 starting()方法的内容：\n\npublic void starting() {\n    // 发布一个applicationstartedevent\n    this.initialmulticaster.multicastevent(new applicationstartedevent(this.application, this.args));\n}\n\n\n顺着这个逻辑，你可以在 ② 处的prepareenvironment()方法的源码中找到listeners.environmentprepared(environment);即 springapplicationrunlistener 接口的第二个方法，那不出你所料，environmentprepared()又发布了另外一个事件applicationenvironmentpreparedevent。接下来会发生什么，就不用我多说了吧。\n\n② 创建并配置当前应用将要使用的environment，environment 用于描述应用程序当前的运行环境，其抽象了两个方面的内容：配置文件(profile)和属性(properties)，开发经验丰富的同学对这两个东西一定不会陌生：不同的环境(eg：生产环境、预发布环境)可以使用不同的配置文件，而属性则可以从配置文件、环境变量、命令行参数等来源获取。因此，当 environment 准备好后，在整个应用的任何时候，都可以从 environment 中获取资源。\n\n总结起来，② 处的两句代码，主要完成以下几件事：\n\n * 判断 environment 是否存在，不存在就创建（如果是 web 项目就创建standardservletenvironment，否则创建standardenvironment）\n * 配置 environment：配置 profile 以及 properties\n * 调用 springapplicationrunlistener 的environmentprepared()方法，通知事件监听者：应用的 environment 已经准备好\n\n③、springboot 应用在启动时会输出这样的东西：\n\n  .   ____          _            __ _ _\n /\\\\ / ___\'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | \'_ | \'_| | \'_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  \'  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n :: spring boot ::        (v1.5.6.release)\n\n\n如果想把这个东西改成自己的涂鸦，你可以研究以下 banner 的实现，这个任务就留给你们吧。\n\n④、根据是否是 web 项目，来创建不同的 applicationcontext 容器。\n\n⑤、创建一系列failureanalyzer，创建流程依然是通过 springfactoriesloader 获取到所有实现 failureanalyzer 接口的 class，然后在创建对应的实例。failureanalyzer 用于分析故障并提供相关诊断信息。\n\n⑥、初始化 applicationcontext，主要完成以下工作：\n\n * 将准备好的 environment 设置给 applicationcontext\n * 遍历调用所有的 applicationcontextinitializer 的initialize()方法来对已经创建好的 applicationcontext 进行进一步的处理\n * 调用 springapplicationrunlistener 的contextprepared()方法，通知所有的监听者：applicationcontext 已经准备完毕\n * 将所有的 bean 加载到容器中\n * 调用 springapplicationrunlistener 的contextloaded()方法，通知所有的监听者：applicationcontext 已经装载完毕\n\n⑦、调用 applicationcontext 的refresh()方法，完成 ioc 容器可用的最后一道工序。从名字上理解为刷新容器，那何为刷新？就是插手容器的启动，联系一下第一小节的内容。那如何刷新呢？且看下面代码：\n\n// 摘自refresh()方法中一句代码\ninvokebeanfactorypostprocessors(beanfactory);\n\n\n看看这个方法的实现：\n\nprotected void invokebeanfactorypostprocessors(configurablelistablebeanfactory beanfactory) {\n    postprocessorregistrationdelegate.invokebeanfactorypostprocessors(beanfactory, getbeanfactorypostprocessors());\n    ......\n}\n\n\n获取到所有的beanfactorypostprocessor来对容器做一些额外的操作。beanfactorypostprocessor 允许我们在容器实例化相应对象之前，对注册到容器的 beandefinition 所保存的信息做一些额外的操作。这里的 getbeanfactorypostprocessors()方法可以获取到 3 个 processor：\n\nconfigurationwarningsapplicationcontextinitializer$configurationwarningspostprocessor\nsharedmetadatareaderfactorycontextinitializer$cachingmetadatareaderfactorypostprocessor\nconfigfileapplicationlistener$propertysourceorderingpostprocessor\n\n\n不是有那么多 beanfactorypostprocessor 的实现类，为什么这儿只有这 3 个？因为在初始化流程获取到的各种 applicationcontextinitializer 和 applicationlistener 中，只有上文 3 个做了类似于如下操作：\n\npublic void initialize(configurableapplicationcontext context) {\n    context.addbeanfactorypostprocessor(new configurationwarningspostprocessor(getchecks()));\n}\n\n\n然后你就可以进入到postprocessorregistrationdelegate.invokebeanfactorypostprocessors()方法了，这个方法除了会遍历上面的 3 个 beanfactorypostprocessor 处理外，还会获取类型为beandefinitionregistrypostprocessor的 bean：org.springframework.context.annotation.internalconfigurationannotationprocessor，对应的 class 为configurationclasspostprocessor。configurationclasspostprocessor用于解析处理各种注解，包括：@configuration、@componentscan、@import、@propertysource、@importresource、@bean。当处理@import注解的时候，就会调用<自动配置>这一小节中的enableautoconfigurationimportselector.selectimports()来完成自动配置功能。其他的这里不再多讲，如果你有兴趣，可以查阅参考资料 6。\n\n⑧、查找当前 context 中是否注册有 commandlinerunner 和 applicationrunner，如果有则遍历执行它们。\n\n⑨、执行所有 springapplicationrunlistener 的 finished()方法。\n\n这就是 spring boot 的整个启动流程，其核心就是在 spring 容器初始化并启动的基础上加入各种扩展点，这些扩展点包括：applicationcontextinitializer、applicationlistener 以及各种 beanfactorypostprocessor 等等。你对整个流程的细节不必太过关注，甚至没弄明白也没有关系，你只要理解这些扩展点是在何时如何工作的，能让它们为你所用即可。\n\n整个启动流程确实非常复杂，可以查询参考资料中的部分章节和内容，对照着源码，多看看，我想最终你都能弄清楚的。言而总之，spring 才是核心，理解清楚 spring 容器的启动流程，那 spring boot 启动流程就不在话下了。\n\n\n# 参考资料\n\n[1] 王福强 著；springboot 揭秘：快速构建微服务体系; 机械工业出版社, 2016 [2] 王福强 著；spring 揭秘; 人民邮件出版社, 2009 [3] craig walls 著；丁雪丰 译；spring boot 实战；中国工信出版集团 人民邮电出版社，2016 [4] 深入探讨 java 类加载器 : www.ibm.com/developerwo… [5] spring boot 实战：自动配置原理分析 : blog.csdn.net/liaokailin/… [6]spring boot实战：spring boot bean加载源码分析： blog.csdn.net/liaokailin/…',charsets:{cjk:!0},lastUpdated:"2022/06/14, 07:03:20",lastUpdatedTimestamp:16551614e5},{title:"SpringBoot 基本原理",frontmatter:{title:"SpringBoot 基本原理",date:"2020-08-12T07:01:26.000Z",categories:["Java","框架","SpringBoot","SpringBoot综合"],tags:["Java","框架","Spring","SpringBoot"],permalink:"/pages/dbf521/"},regularPath:"/10.Java/13.%E6%A1%86%E6%9E%B6/02.SpringBoot/00.SpringBoot%E7%BB%BC%E5%90%88/02.SpringBoot%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86.html",relativePath:"10.Java/13.框架/02.SpringBoot/00.SpringBoot综合/02.SpringBoot基本原理.md",key:"v-290adcec",path:"/pages/dbf521/",headers:[{level:2,title:"SpringBootApplication 背后的秘密",slug:"springbootapplication-背后的秘密",normalizedTitle:"springbootapplication 背后的秘密",charIndex:429},{level:2,title:"@Configuration",slug:"configuration",normalizedTitle:"@configuration",charIndex:1202},{level:2,title:"@ComponentScan",slug:"componentscan",normalizedTitle:"@componentscan",charIndex:870},{level:2,title:"@EnableAutoConfiguration",slug:"enableautoconfiguration",normalizedTitle:"@enableautoconfiguration",charIndex:780},{level:4,title:"AutoConfigurationPackage 注解：",slug:"autoconfigurationpackage-注解",normalizedTitle:"autoconfigurationpackage 注解：",charIndex:4561},{level:4,title:"Import(AutoConfigurationImportSelector.class)注解：",slug:"import-autoconfigurationimportselector-class-注解",normalizedTitle:"import(autoconfigurationimportselector.class)注解：",charIndex:5179},{level:3,title:"自动配置幕后英雄：SpringFactoriesLoader 详解",slug:"自动配置幕后英雄-springfactoriesloader-详解",normalizedTitle:"自动配置幕后英雄：springfactoriesloader 详解",charIndex:6686},{level:2,title:"参考资料",slug:"参考资料",normalizedTitle:"参考资料",charIndex:7738}],headersStr:"SpringBootApplication 背后的秘密 @Configuration @ComponentScan @EnableAutoConfiguration AutoConfigurationPackage 注解： Import(AutoConfigurationImportSelector.class)注解： 自动配置幕后英雄：SpringFactoriesLoader 详解 参考资料",content:'# SpringBoot 基本原理\n\nSpringBoot 为我们做的自动配置，确实方便快捷，但一直搞不明白它的内部启动原理，这次就来一步步解开 SpringBoot 的神秘面纱，让它不再神秘。\n\n\n\n----------------------------------------\n\n@SpringBootApplication\npublic class Application {\n    public static void main(String[] args) {\n        SpringApplication.run(Application.class, args);\n    }\n}\n\n\n从上面代码可以看出，**Annotation 定义（@SpringBootApplication）和类定义（SpringApplication.run）**最为耀眼，所以要揭开 SpringBoot 的神秘面纱，我们要从这两位开始就可以了。\n\n\n# SpringBootApplication 背后的秘密\n\n@Target(ElementType.TYPE)            // 注解的适用范围，其中TYPE用于描述类、接口（包括包注解类型）或enum声明\n@Retention(RetentionPolicy.RUNTIME)  // 注解的生命周期，保留到class文件中（三个生命周期）\n@Documented                          // 表明这个注解应该被javadoc记录\n@Inherited                           // 子类可以继承该注解\n@SpringBootConfiguration             // 继承了Configuration，表示当前是注解类\n@EnableAutoConfiguration             // 开启springboot的注解功能，springboot的四大神器之一，其借助@import的帮助\n@ComponentScan(excludeFilters = {    // 扫描路径设置（具体使用待确认）\n        @Filter(type = FilterType.CUSTOM, classes = TypeExcludeFilter.class),\n        @Filter(type = FilterType.CUSTOM, classes = AutoConfigurationExcludeFilter.class) })\npublic @interface SpringBootApplication {\n...\n}\n\n\n虽然定义使用了多个 Annotation 进行了原信息标注，但实际上重要的只有三个 Annotation：\n\n@Configuration（@SpringBootConfiguration 点开查看发现里面还是应用了@Configuration） @EnableAutoConfiguration @ComponentScan 所以，如果我们使用如下的 SpringBoot 启动类，整个 SpringBoot 应用依然可以与之前的启动类功能对等：\n\n@Configuration\n@EnableAutoConfiguration\n@ComponentScan\npublic class Application {\n    public static void main(String[] args) {\n        SpringApplication.run(Application.class, args);\n    }\n}\n\n\n每次写这 3 个比较累，所以写一个@SpringBootApplication 方便点。接下来分别介绍这 3 个 Annotation。\n\n\n# @Configuration\n\n这里的@Configuration 对我们来说不陌生，它就是 JavaConfig 形式的 Spring Ioc 容器的配置类使用的那个@Configuration，SpringBoot 社区推荐使用基于 JavaConfig 的配置形式，所以，这里的启动类标注了@Configuration 之后，本身其实也是一个 IoC 容器的配置类。 举几个简单例子回顾下，XML 跟 config 配置方式的区别：\n\n表达形式层面 基于 XML 配置的方式是这样：\n\n<?xml version="1.0" encoding="UTF-8"?>\n<beans xmlns="http://www.springframework.org/schema/beans"\n       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"\n       default-lazy-init="true">\n    \x3c!--bean定义--\x3e\n</beans>\n\n\n而基于 JavaConfig 的配置方式是这样：\n\n@Configuration\npublic class MockConfiguration{\n    //bean定义\n}\n\n\n任何一个标注了@Configuration 的 Java 类定义都是一个 JavaConfig 配置类。\n\n注册 bean 定义层面 基于 XML 的配置形式是这样：\n\n<bean id="mockService" class="..MockServiceImpl">\n    ...\n</bean>\n\n\n而基于 JavaConfig 的配置形式是这样的：\n\n@Configuration\npublic class MockConfiguration{\n    @Bean\n    public MockService mockService(){\n        return new MockServiceImpl();\n    }\n}\n\n\n任何一个标注了@Bean 的方法，其返回值将作为一个 bean 定义注册到 Spring 的 IoC 容器，方法名将默认成该 bean 定义的 id。\n\n表达依赖注入关系层面 为了表达 bean 与 bean 之间的依赖关系，在 XML 形式中一般是这样：\n\n<bean id="mockService" class="..MockServiceImpl">\n    <propery name ="dependencyService" ref="dependencyService" />\n</bean>\n\n<bean id="dependencyService" class="DependencyServiceImpl"></bean>\n\n\n而基于 JavaConfig 的配置形式是这样的：\n\n@Configuration\npublic class MockConfiguration{\n    @Bean\n    public MockService mockService(){\n        return new MockServiceImpl(dependencyService());\n    }\n\n    @Bean\n    public DependencyService dependencyService(){\n        return new DependencyServiceImpl();\n    }\n}\n\n\n如果一个 bean 的定义依赖其他 bean,则直接调用对应的 JavaConfig 类中依赖 bean 的创建方法就可以了。\n\n\n# @ComponentScan\n\n@ComponentScan 这个注解在 Spring 中很重要，它对应 XML 配置中的元素，@ComponentScan 的功能其实就是自动扫描并加载符合条件的组件（比如@Component 和@Repository 等）或者 bean 定义，最终将这些 bean 定义加载到 IoC 容器中。\n\n我们可以通过 basePackages 等属性来细粒度的定制@ComponentScan 自动扫描的范围，如果不指定，则默认 Spring 框架实现会从声明@ComponentScan 所在类的 package 进行扫描。\n\n> 注：所以 SpringBoot 的启动类最好是放在 root package 下，因为默认不指定 basePackages。\n\n\n# @EnableAutoConfiguration\n\n个人感觉**@EnableAutoConfiguration 这个 Annotation 最为重要**，所以放在最后来解读，大家是否还记得 Spring 框架提供的各种名字为@Enable 开头的 Annotation 定义？比如@EnableScheduling、@EnableCaching、@EnableMBeanExport 等，@EnableAutoConfiguration 的理念和做事方式其实一脉相承，简单概括一下就是，借助@Import 的支持，收集和注册特定场景相关的 bean 定义。\n\n@EnableScheduling是通过@Import 将 Spring 调度框架相关的 bean 定义都加载到 IoC 容器。 @EnableMBeanExport是通过@Import 将 JMX 相关的 bean 定义加载到 IoC 容器。 而**@EnableAutoConfiguration**也是借助@Import 的帮助，将所有符合自动配置条件的 bean 定义加载到 IoC 容器，仅此而已！\n\n@EnableAutoConfiguration 作为一个复合 Annotation,其自身定义关键信息如下：\n\n@SuppressWarnings("deprecation")\n@Target(ElementType.TYPE)\n@Retention(RetentionPolicy.RUNTIME)\n@Documented\n@Inherited\n@AutoConfigurationPackage\n@Import(EnableAutoConfigurationImportSelector.class)\npublic @interface EnableAutoConfiguration {\n    ...\n}\n\n\n两个比较重要的注解：\n\n@AutoConfigurationPackage：自动配置包\n\n@Import: 导入自动配置的组件\n\n# AutoConfigurationPackage 注解：\n\nstatic class Registrar implements ImportBeanDefinitionRegistrar, DeterminableImports {\n\n        @Override\n        public void registerBeanDefinitions(AnnotationMetadata metadata,\n                BeanDefinitionRegistry registry) {\n            register(registry, new PackageImport(metadata).getPackageName());\n        }\n\n\n它其实是注册了一个 Bean 的定义。\n\nnew PackageImport(metadata).getPackageName()，它其实返回了当前主程序类的 同级以及子级 的包组件。\n\n\n\n以上图为例，DemoApplication 是和 demo 包同级，但是 demo2 这个类是 DemoApplication 的父级，和 example 包同级\n\n也就是说，DemoApplication 启动加载的 Bean 中，并不会加载 demo2，这也就是为什么，我们要把 DemoApplication 放在项目的最高级中。\n\n# Import(AutoConfigurationImportSelector.class)注解：\n\n\n\n可以从图中看出 AutoConfigurationImportSelector 继承了 DeferredImportSelector 继承了 ImportSelector\n\nImportSelector 有一个方法为：selectImports。\n\n@Override\n    public String[] selectImports(AnnotationMetadata annotationMetadata) {\n        if (!isEnabled(annotationMetadata)) {\n            return NO_IMPORTS;\n        }\n        AutoConfigurationMetadata autoConfigurationMetadata = AutoConfigurationMetadataLoader\n                .loadMetadata(this.beanClassLoader);\n        AnnotationAttributes attributes = getAttributes(annotationMetadata);\n        List<String> configurations = getCandidateConfigurations(annotationMetadata,\n                attributes);\n        configurations = removeDuplicates(configurations);\n        Set<String> exclusions = getExclusions(annotationMetadata, attributes);\n        checkExcludedClasses(configurations, exclusions);\n        configurations.removeAll(exclusions);\n        configurations = filter(configurations, autoConfigurationMetadata);\n        fireAutoConfigurationImportEvents(configurations, exclusions);\n        return StringUtils.toStringArray(configurations);\n    }\n\n\n可以看到第九行，它其实是去加载 public static final String FACTORIES_RESOURCE_LOCATION = "META-INF/spring.factories";外部文件。这个外部文件，有很多自动配置的类。如下：\n\n\n\nimage\n\n其中，最关键的要属**@Import(EnableAutoConfigurationImportSelector.class)，借助EnableAutoConfigurationImportSelector**，@EnableAutoConfiguration可以帮助 SpringBoot 应用将所有符合条件的**@Configuration**配置都加载到当前 SpringBoot 创建并使用的 IoC 容器。就像一只“八爪鱼”一样。\n\n\n\n\n# 自动配置幕后英雄：SpringFactoriesLoader 详解\n\n借助于 Spring 框架原有的一个工具类：SpringFactoriesLoader 的支持，@EnableAutoConfiguration 可以智能的自动配置功效才得以大功告成！\n\nSpringFactoriesLoader 属于 Spring 框架私有的一种扩展方案，其主要功能就是从指定的配置文件 META-INF/spring.factories 加载配置。\n\npublic abstract class SpringFactoriesLoader {\n    //...\n    public static <T> List<T> loadFactories(Class<T> factoryClass, ClassLoader classLoader) {\n        ...\n    }\n\n\n    public static List<String> loadFactoryNames(Class<?> factoryClass, ClassLoader classLoader) {\n        ....\n    }\n}\n\n\n配合**@EnableAutoConfiguration使用的话，它更多是提供一种配置查找的功能支持，即根据@EnableAutoConfiguration 的完整类名 org.springframework.boot.autoconfigure.EnableAutoConfiguration 作为查找的 Key,获取对应的一组@Configuration**类\n\n\n\n上图就是从 SpringBoot 的 autoconfigure 依赖包中的 META-INF/spring.factories 配置文件中摘录的一段内容，可以很好地说明问题。\n\n所以，@EnableAutoConfiguration 自动配置的魔法骑士就变成了：从 classpath 中搜寻所有的 META-INF/spring.factories 配置文件，并将其中 org.springframework.boot.autoconfigure.EnableutoConfiguration 对应的配置项通过反射（Java Refletion）实例化为对应的标注了@Configuration 的 JavaConfig 形式的 IoC 容器配置类，然后汇总为一个并加载到 IoC 容器。\n\n\n\n\n# 参考资料\n\n * 一文搞懂 springboot 启动原理',normalizedContent:'# springboot 基本原理\n\nspringboot 为我们做的自动配置，确实方便快捷，但一直搞不明白它的内部启动原理，这次就来一步步解开 springboot 的神秘面纱，让它不再神秘。\n\n\n\n----------------------------------------\n\n@springbootapplication\npublic class application {\n    public static void main(string[] args) {\n        springapplication.run(application.class, args);\n    }\n}\n\n\n从上面代码可以看出，**annotation 定义（@springbootapplication）和类定义（springapplication.run）**最为耀眼，所以要揭开 springboot 的神秘面纱，我们要从这两位开始就可以了。\n\n\n# springbootapplication 背后的秘密\n\n@target(elementtype.type)            // 注解的适用范围，其中type用于描述类、接口（包括包注解类型）或enum声明\n@retention(retentionpolicy.runtime)  // 注解的生命周期，保留到class文件中（三个生命周期）\n@documented                          // 表明这个注解应该被javadoc记录\n@inherited                           // 子类可以继承该注解\n@springbootconfiguration             // 继承了configuration，表示当前是注解类\n@enableautoconfiguration             // 开启springboot的注解功能，springboot的四大神器之一，其借助@import的帮助\n@componentscan(excludefilters = {    // 扫描路径设置（具体使用待确认）\n        @filter(type = filtertype.custom, classes = typeexcludefilter.class),\n        @filter(type = filtertype.custom, classes = autoconfigurationexcludefilter.class) })\npublic @interface springbootapplication {\n...\n}\n\n\n虽然定义使用了多个 annotation 进行了原信息标注，但实际上重要的只有三个 annotation：\n\n@configuration（@springbootconfiguration 点开查看发现里面还是应用了@configuration） @enableautoconfiguration @componentscan 所以，如果我们使用如下的 springboot 启动类，整个 springboot 应用依然可以与之前的启动类功能对等：\n\n@configuration\n@enableautoconfiguration\n@componentscan\npublic class application {\n    public static void main(string[] args) {\n        springapplication.run(application.class, args);\n    }\n}\n\n\n每次写这 3 个比较累，所以写一个@springbootapplication 方便点。接下来分别介绍这 3 个 annotation。\n\n\n# @configuration\n\n这里的@configuration 对我们来说不陌生，它就是 javaconfig 形式的 spring ioc 容器的配置类使用的那个@configuration，springboot 社区推荐使用基于 javaconfig 的配置形式，所以，这里的启动类标注了@configuration 之后，本身其实也是一个 ioc 容器的配置类。 举几个简单例子回顾下，xml 跟 config 配置方式的区别：\n\n表达形式层面 基于 xml 配置的方式是这样：\n\n<?xml version="1.0" encoding="utf-8"?>\n<beans xmlns="http://www.springframework.org/schema/beans"\n       xmlns:xsi="http://www.w3.org/2001/xmlschema-instance"\n       xsi:schemalocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"\n       default-lazy-init="true">\n    \x3c!--bean定义--\x3e\n</beans>\n\n\n而基于 javaconfig 的配置方式是这样：\n\n@configuration\npublic class mockconfiguration{\n    //bean定义\n}\n\n\n任何一个标注了@configuration 的 java 类定义都是一个 javaconfig 配置类。\n\n注册 bean 定义层面 基于 xml 的配置形式是这样：\n\n<bean id="mockservice" class="..mockserviceimpl">\n    ...\n</bean>\n\n\n而基于 javaconfig 的配置形式是这样的：\n\n@configuration\npublic class mockconfiguration{\n    @bean\n    public mockservice mockservice(){\n        return new mockserviceimpl();\n    }\n}\n\n\n任何一个标注了@bean 的方法，其返回值将作为一个 bean 定义注册到 spring 的 ioc 容器，方法名将默认成该 bean 定义的 id。\n\n表达依赖注入关系层面 为了表达 bean 与 bean 之间的依赖关系，在 xml 形式中一般是这样：\n\n<bean id="mockservice" class="..mockserviceimpl">\n    <propery name ="dependencyservice" ref="dependencyservice" />\n</bean>\n\n<bean id="dependencyservice" class="dependencyserviceimpl"></bean>\n\n\n而基于 javaconfig 的配置形式是这样的：\n\n@configuration\npublic class mockconfiguration{\n    @bean\n    public mockservice mockservice(){\n        return new mockserviceimpl(dependencyservice());\n    }\n\n    @bean\n    public dependencyservice dependencyservice(){\n        return new dependencyserviceimpl();\n    }\n}\n\n\n如果一个 bean 的定义依赖其他 bean,则直接调用对应的 javaconfig 类中依赖 bean 的创建方法就可以了。\n\n\n# @componentscan\n\n@componentscan 这个注解在 spring 中很重要，它对应 xml 配置中的元素，@componentscan 的功能其实就是自动扫描并加载符合条件的组件（比如@component 和@repository 等）或者 bean 定义，最终将这些 bean 定义加载到 ioc 容器中。\n\n我们可以通过 basepackages 等属性来细粒度的定制@componentscan 自动扫描的范围，如果不指定，则默认 spring 框架实现会从声明@componentscan 所在类的 package 进行扫描。\n\n> 注：所以 springboot 的启动类最好是放在 root package 下，因为默认不指定 basepackages。\n\n\n# @enableautoconfiguration\n\n个人感觉**@enableautoconfiguration 这个 annotation 最为重要**，所以放在最后来解读，大家是否还记得 spring 框架提供的各种名字为@enable 开头的 annotation 定义？比如@enablescheduling、@enablecaching、@enablembeanexport 等，@enableautoconfiguration 的理念和做事方式其实一脉相承，简单概括一下就是，借助@import 的支持，收集和注册特定场景相关的 bean 定义。\n\n@enablescheduling是通过@import 将 spring 调度框架相关的 bean 定义都加载到 ioc 容器。 @enablembeanexport是通过@import 将 jmx 相关的 bean 定义加载到 ioc 容器。 而**@enableautoconfiguration**也是借助@import 的帮助，将所有符合自动配置条件的 bean 定义加载到 ioc 容器，仅此而已！\n\n@enableautoconfiguration 作为一个复合 annotation,其自身定义关键信息如下：\n\n@suppresswarnings("deprecation")\n@target(elementtype.type)\n@retention(retentionpolicy.runtime)\n@documented\n@inherited\n@autoconfigurationpackage\n@import(enableautoconfigurationimportselector.class)\npublic @interface enableautoconfiguration {\n    ...\n}\n\n\n两个比较重要的注解：\n\n@autoconfigurationpackage：自动配置包\n\n@import: 导入自动配置的组件\n\n# autoconfigurationpackage 注解：\n\nstatic class registrar implements importbeandefinitionregistrar, determinableimports {\n\n        @override\n        public void registerbeandefinitions(annotationmetadata metadata,\n                beandefinitionregistry registry) {\n            register(registry, new packageimport(metadata).getpackagename());\n        }\n\n\n它其实是注册了一个 bean 的定义。\n\nnew packageimport(metadata).getpackagename()，它其实返回了当前主程序类的 同级以及子级 的包组件。\n\n\n\n以上图为例，demoapplication 是和 demo 包同级，但是 demo2 这个类是 demoapplication 的父级，和 example 包同级\n\n也就是说，demoapplication 启动加载的 bean 中，并不会加载 demo2，这也就是为什么，我们要把 demoapplication 放在项目的最高级中。\n\n# import(autoconfigurationimportselector.class)注解：\n\n\n\n可以从图中看出 autoconfigurationimportselector 继承了 deferredimportselector 继承了 importselector\n\nimportselector 有一个方法为：selectimports。\n\n@override\n    public string[] selectimports(annotationmetadata annotationmetadata) {\n        if (!isenabled(annotationmetadata)) {\n            return no_imports;\n        }\n        autoconfigurationmetadata autoconfigurationmetadata = autoconfigurationmetadataloader\n                .loadmetadata(this.beanclassloader);\n        annotationattributes attributes = getattributes(annotationmetadata);\n        list<string> configurations = getcandidateconfigurations(annotationmetadata,\n                attributes);\n        configurations = removeduplicates(configurations);\n        set<string> exclusions = getexclusions(annotationmetadata, attributes);\n        checkexcludedclasses(configurations, exclusions);\n        configurations.removeall(exclusions);\n        configurations = filter(configurations, autoconfigurationmetadata);\n        fireautoconfigurationimportevents(configurations, exclusions);\n        return stringutils.tostringarray(configurations);\n    }\n\n\n可以看到第九行，它其实是去加载 public static final string factories_resource_location = "meta-inf/spring.factories";外部文件。这个外部文件，有很多自动配置的类。如下：\n\n\n\nimage\n\n其中，最关键的要属**@import(enableautoconfigurationimportselector.class)，借助enableautoconfigurationimportselector**，@enableautoconfiguration可以帮助 springboot 应用将所有符合条件的**@configuration**配置都加载到当前 springboot 创建并使用的 ioc 容器。就像一只“八爪鱼”一样。\n\n\n\n\n# 自动配置幕后英雄：springfactoriesloader 详解\n\n借助于 spring 框架原有的一个工具类：springfactoriesloader 的支持，@enableautoconfiguration 可以智能的自动配置功效才得以大功告成！\n\nspringfactoriesloader 属于 spring 框架私有的一种扩展方案，其主要功能就是从指定的配置文件 meta-inf/spring.factories 加载配置。\n\npublic abstract class springfactoriesloader {\n    //...\n    public static <t> list<t> loadfactories(class<t> factoryclass, classloader classloader) {\n        ...\n    }\n\n\n    public static list<string> loadfactorynames(class<?> factoryclass, classloader classloader) {\n        ....\n    }\n}\n\n\n配合**@enableautoconfiguration使用的话，它更多是提供一种配置查找的功能支持，即根据@enableautoconfiguration 的完整类名 org.springframework.boot.autoconfigure.enableautoconfiguration 作为查找的 key,获取对应的一组@configuration**类\n\n\n\n上图就是从 springboot 的 autoconfigure 依赖包中的 meta-inf/spring.factories 配置文件中摘录的一段内容，可以很好地说明问题。\n\n所以，@enableautoconfiguration 自动配置的魔法骑士就变成了：从 classpath 中搜寻所有的 meta-inf/spring.factories 配置文件，并将其中 org.springframework.boot.autoconfigure.enableutoconfiguration 对应的配置项通过反射（java refletion）实例化为对应的标注了@configuration 的 javaconfig 形式的 ioc 容器配置类，然后汇总为一个并加载到 ioc 容器。\n\n\n\n\n# 参考资料\n\n * 一文搞懂 springboot 启动原理',charsets:{cjk:!0},lastUpdated:"2022/06/14, 07:03:20",lastUpdatedTimestamp:16551614e5},{title:"SpringBoot 之快速入门",frontmatter:{title:"SpringBoot 之快速入门",date:"2021-12-10T18:22:26.000Z",categories:["Java","框架","SpringBoot","SpringBoot基础"],tags:["Java","框架","Spring","SpringBoot"],permalink:"/pages/950e4d/"},regularPath:"/10.Java/13.%E6%A1%86%E6%9E%B6/02.SpringBoot/01.SpringBoot%E5%9F%BA%E7%A1%80/01.SpringBoot%E4%B9%8B%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8.html",relativePath:"10.Java/13.框架/02.SpringBoot/01.SpringBoot基础/01.SpringBoot之快速入门.md",key:"v-904aff54",path:"/pages/950e4d/",headers:[{level:2,title:"Spring Boot 简介",slug:"spring-boot-简介",normalizedTitle:"spring boot 简介",charIndex:23},{level:2,title:"Spring Boot 系统要求",slug:"spring-boot-系统要求",normalizedTitle:"spring boot 系统要求",charIndex:211},{level:2,title:"部署第一个 Spring Boot 项目",slug:"部署第一个-spring-boot-项目",normalizedTitle:"部署第一个 spring boot 项目",charIndex:466},{level:3,title:"环境检查",slug:"环境检查",normalizedTitle:"环境检查",charIndex:589},{level:3,title:"创建 pom",slug:"创建-pom",normalizedTitle:"创建 pom",charIndex:1043},{level:3,title:"添加依赖",slug:"添加依赖",normalizedTitle:"添加依赖",charIndex:1779},{level:3,title:"编写代码",slug:"编写代码",normalizedTitle:"编写代码",charIndex:2522},{level:3,title:"运行示例",slug:"运行示例",normalizedTitle:"运行示例",charIndex:3485},{level:3,title:"创建可执行 jar",slug:"创建可执行-jar",normalizedTitle:"创建可执行 jar",charIndex:4145},{level:2,title:"通过 SPRING INITIALIZR 创建 Spring Boot 项目",slug:"通过-spring-initializr-创建-spring-boot-项目",normalizedTitle:"通过 spring initializr 创建 spring boot 项目",charIndex:5952},{level:3,title:"创建项目",slug:"创建项目",normalizedTitle:"创建项目",charIndex:5995},{level:3,title:"项目说明",slug:"项目说明",normalizedTitle:"项目说明",charIndex:6250},{level:3,title:"编写 REST 服务",slug:"编写-rest-服务",normalizedTitle:"编写 rest 服务",charIndex:7790},{level:3,title:"编写单元测试用例",slug:"编写单元测试用例",normalizedTitle:"编写单元测试用例",charIndex:8129},{level:3,title:"示例源码",slug:"示例源码",normalizedTitle:"示例源码",charIndex:9205},{level:2,title:"参考资料",slug:"参考资料",normalizedTitle:"参考资料",charIndex:9249}],headersStr:"Spring Boot 简介 Spring Boot 系统要求 部署第一个 Spring Boot 项目 环境检查 创建 pom 添加依赖 编写代码 运行示例 创建可执行 jar 通过 SPRING INITIALIZR 创建 Spring Boot 项目 创建项目 项目说明 编写 REST 服务 编写单元测试用例 示例源码 参考资料",content:'# SpringBoot 之快速入门\n\n\n# Spring Boot 简介\n\nSpring Boot 可以让使用者非常方便的创建 Spring 应用。\n\nSpring Boot 的目标是：\n\n * 为所有 Spring 开发者提供更快且可广泛访问的入门体验。\n * 开箱即用\n * 提供一系列通用的非功能特性（例如嵌入式服务、安全、指标、健康检查和外部化配置）\n * 完全不需要代码生成，也不需要 XML 配置。\n\n\n# Spring Boot 系统要求\n\nSpring Boot 的构建工具要求：\n\nBUILD TOOL   VERSION\nMaven        3.5+\nGradle       6.8.x, 6.9.x, and 7.x\n\nSpring Boot 支持的 Servlet 容器：\n\nNAME           SERVLET VERSION\nTomcat 9.0     4.0\nJetty 9.4      3.1\nJetty 10.0     4.0\nUndertow 2.0   4.0\n\n\n# 部署第一个 Spring Boot 项目\n\n> 本节介绍如何开发一个小的“Hello World!” web 应用示例，来展示 Spring Boot 的一些关键功能。我们使用 Maven 来构建这个项目，因为大多数 IDE 都支持它。\n\n\n# 环境检查\n\nSpring Boot 项目依赖于 Java 环境和 Mave，开始项目之前需要先检查一下环境。\n\n本地是否已安装 Java：\n\n$ java -version\njava version "1.8.0_102"\nJava(TM) SE Runtime Environment (build 1.8.0_102-b14)\nJava HotSpot(TM) 64-Bit Server VM (build 25.102-b14, mixed mode)\n\n\n本地是否已安装 Maven：\n\n$ mvn -v\nApache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T14:33:14-04:00)\nMaven home: /usr/local/Cellar/maven/3.3.9/libexec\nJava version: 1.8.0_102, vendor: Oracle Corporation\n\n\n\n# 创建 pom\n\n我们需要从创建 Maven pom.xml 文件开始。 pom.xml 是 Maven 用于构建项目的配置文件。\n\n<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>com.example</groupId>\n    <artifactId>myproject</artifactId>\n    <version>0.0.1-SNAPSHOT</version>\n\n    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>2.6.1</version>\n    </parent>\n\n    \x3c!-- Additional lines to be added here... --\x3e\n\n</project>\n\n\n使用者可以通过运行 mvn package 来测试它\n\n\n# 添加依赖\n\nSpring Boot 提供了许多启动器（Starters）以应对不同的使用场景。使用者可将 jars 添加到类路径中。我们的示例程序在 POM 的 parent 使用 spring-boot-starter-parent。 spring-boot-starter-parent 是一个特殊的启动器，提供有用的 Maven 默认值。它还提供了一个依赖项的版本管理，可以让使用者使用时不必显示指定版本。\n\n其他启动器（Starters）提供了各种针对不同使用场景的功能。比如，我们需要开发一个 Web 应用程序，就可以添加了一个 spring-boot-starter-web 依赖项。在此之前，我们可以通过运行以下命令来查看我们当前拥有的 maven 依赖：\n\n$ mvn dependency:tree\n\n[INFO] com.example:myproject:jar:0.0.1-SNAPSHOT\n\n\nmvn dependency:tree 命令打印项目依赖项的层级结构。可以看到 spring-boot-starter-parent 本身没有提供任何依赖。要添加必要的依赖，需要编辑 pom.xml 并在 <dependencies> 部分添加 spring-boot-starter-web 依赖项：\n\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-web</artifactId>\n    </dependency>\n</dependencies>\n\n\n\n# 编写代码\n\n要运行应用程序，我们需要创建一个启动类。默认情况下，Maven 从 src/main/java 编译源代码，因此您需要创建该目录结构，然后添加一个名为 src/main/java/MyApplication.java 的文件以包含以下代码：\n\n@RestController\n@EnableAutoConfiguration\npublic class MyApplication {\n\n    @RequestMapping("/")\n    String home() {\n        return "Hello World!";\n    }\n\n    public static void main(String[] args) {\n        SpringApplication.run(MyApplication.class, args);\n    }\n\n}\n\n\n说明：\n\n@RestController 注解告诉 Spring，这个类是用来处理 Rest 请求的。\n\n@RequestMapping 注解提供了“路由”信息。它告诉 Spring 任何带有 / 路径的 HTTP 请求都应该映射到 home 方法。 @RestController 注解告诉 Spring 将结果字符串直接呈现给调用者。\n\n@EnableAutoConfiguration 注解告诉 Spring Boot 根据你添加的 jar 依赖去自动装配 Spring。\n\n> 自动配置旨在与“Starters”配合使用，但这两个概念并没有直接联系。您可以自由选择 starters 之外的 jar 依赖项。 Spring Boot 仍然尽力自动配置您的应用程序。\n\nSpring Boot 的 main 方法通过调用 run 委托给 Spring Boot 的 SpringApplication 类。 SpringApplication 引导我们的应用程序，启动 Spring，进而启动自动配置的 Tomcat Web 服务器。我们需要将 MyApplication.class 作为参数传递给 run 方法，以告诉 SpringApplication 哪个是入口类。还传递 args 数组以公开任何命令行参数。\n\n\n# 运行示例\n\n此时，您的应用程序应该可以工作了。由于您使用了 spring-boot-starter-parent POM，因此您有一个有用的运行目标，可用于启动应用程序。从项目根目录键入 mvn spring-boot:run 以启动应用程序。您应该会看到类似于以下内容的输出：\n\n$ mvn spring-boot:run\n\n  .   ____          _            __ _ _\n /\\\\ / ___\'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | \'_ | \'_| | \'_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  \'  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n :: Spring Boot ::  (v2.6.1)\n....... . . .\n....... . . . (log output here)\n....... . . .\n........ Started MyApplication in 2.222 seconds (JVM running for 6.514)\n\n\n如果您打开 Web 浏览器访问 localhost:8080，您应该会看到以下输出：\n\nHello World!\n\n\n要正常退出应用程序，请按 ctrl-c。\n\n\n# 创建可执行 jar\n\n要创建一个可执行的 jar，我们需要将 spring-boot-maven-plugin 添加到我们的 pom.xml 中。为此，请在依赖项部分下方插入以下行：\n\n<build>\n    <plugins>\n        <plugin>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-maven-plugin</artifactId>\n        </plugin>\n    </plugins>\n</build>\n\n\n保存 pom.xml 并从命令行运行 mvn package，如下所示：\n\n$ mvn package\n\n[INFO] Scanning for projects...\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] Building myproject 0.0.1-SNAPSHOT\n[INFO] ------------------------------------------------------------------------\n[INFO] .... ..\n[INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ myproject ---\n[INFO] Building jar: /Users/developer/example/spring-boot-example/target/myproject-0.0.1-SNAPSHOT.jar\n[INFO]\n[INFO] --- spring-boot-maven-plugin:2.6.1:repackage (default) @ myproject ---\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n\n\n如果您查看 target 目录，应该会看到 myproject-0.0.1-SNAPSHOT.jar。该文件的大小应约为 10 MB。如果想看里面，可以使用 jar tvf，如下：\n\n$ jar tvf target/myproject-0.0.1-SNAPSHOT.jar\n\n\n您还应该在目标目录中看到一个更小的名为 myproject-0.0.1-SNAPSHOT.jar.original 的文件。这是 Maven 在 Spring Boot 重新打包之前创建的原始 jar 文件。\n\n要运行该应用程序，请使用 java -jar 命令，如下所示：\n\n$ java -jar target/myproject-0.0.1-SNAPSHOT.jar\n\n  .   ____          _            __ _ _\n /\\\\ / ___\'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | \'_ | \'_| | \'_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  \'  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n :: Spring Boot ::  (v2.6.1)\n....... . . .\n....... . . . (log output here)\n....... . . .\n........ Started MyApplication in 2.536 seconds (JVM running for 2.864)\n\n\n和以前一样，要退出应用程序，请按 ctrl-c。\n\n\n# 通过 SPRING INITIALIZR 创建 Spring Boot 项目\n\n\n# 创建项目\n\n通过 SPRING INITIALIZR 工具产生基础项目\n\n 1. 访问：http://start.spring.io/\n 2. 选择构建工具Maven Project、Spring Boot 版本 1.5.10 以及一些工程基本信息，可参考下图所示：\n\n\n\n 3. 点击Generate Project下载项目压缩包\n 4. 解压压缩包，包中已是一个完整的项目。\n\n如果你使用 Intellij 作为 IDE，那么你可以直接使用 SPRING INITIALIZR，参考下图操作：\n\n\n\n\n# 项目说明\n\n重要文件\n\n * src/main/java 路径下的 Chapter1Application 类 ：程序入口\n * src/main/resources 路径下的 application.properties ：项目配置文件\n * src/test/java 路径下的 Chapter01ApplicationTests ：程序测试入口\n\npom.xml\n\npom 中指定 parent 为以下内容，表示此项目继承了 spring-boot-starter-parent 的 maven 配置（主要是指定了常用依赖、插件的版本）。\n\n<parent>\n <groupId>org.springframework.boot</groupId>\n <artifactId>spring-boot-starter-parent</artifactId>\n <version>1.5.10.RELEASE</version>\n <relativePath/> \x3c!-- lookup parent from repository --\x3e\n</parent>\n\n\n此外，pom 中默认引入两个依赖包，和一个插件。\n\n<dependencies>\n <dependency>\n  <groupId>org.springframework.boot</groupId>\n  <artifactId>spring-boot-starter-web</artifactId>\n </dependency>\n\n <dependency>\n  <groupId>org.springframework.boot</groupId>\n  <artifactId>spring-boot-starter-test</artifactId>\n  <scope>test</scope>\n </dependency>\n</dependencies>\n\n<build>\n <plugins>\n  <plugin>\n   <groupId>org.springframework.boot</groupId>\n   <artifactId>spring-boot-maven-plugin</artifactId>\n  </plugin>\n </plugins>\n</build>\n\n\n * spring-boot-starter-web：核心模块，包括自动配置支持、日志和 YAML。\n * spring-boot-starter-test：测试模块，包括 JUnit、Hamcrest、Mockito。\n * spring-boot-maven-plugin：spring boot 插件， 提供了一系列 spring boot 相关的 maven 操作。\n   * spring-boot:build-info，生成 Actuator 使用的构建信息文件 build-info.properties\n   * spring-boot:repackage，默认 goal。在 mvn package 之后，再次打包可执行的 jar/war，同时保留 mvn package 生成的 jar/war 为.origin\n   * spring-boot:run，运行 Spring Boot 应用\n   * spring-boot:start，在 mvn integration-test 阶段，进行 Spring Boot 应用生命周期的管理\n   * spring-boot:stop，在 mvn integration-test 阶段，进行 Spring Boot 应用生命周期的管理\n\n\n# 编写 REST 服务\n\n * 创建 package ，名为 io.github.zp.springboot.chapter1.web（根据项目情况修改）\n * 创建 HelloController 类，内容如下：\n\n@RestController\npublic class HelloController {\n\n    @RequestMapping("/hello")\n    public String index() {\n        return "Hello World";\n    }\n\n}\n\n\n * 启动主程序 XXXApplication，打开浏览器访问http://localhost:8080/hello ，可以看到页面输出Hello World\n\n\n# 编写单元测试用例\n\n在 XXXApplicationTests 类中编写一个简单的单元测试来模拟 HTTP 请求，具体如下：\n\n@RunWith(SpringJUnit4ClassRunner.class)\n@SpringApplicationConfiguration(classes = MockServletContext.class)\n@WebAppConfiguration\npublic class SpringBootHelloWorldApplicationTest {\n\n\tprivate MockMvc mvc;\n\n\t@Before\n\tpublic void setUp() {\n\t\tmvc = MockMvcBuilders.standaloneSetup(new HelloController()).build();\n\t}\n\n\t@Test\n\tpublic void getHello() throws Exception {\n\t\tmvc.perform(MockMvcRequestBuilders.get("/hello").accept(MediaType.APPLICATION_JSON))\n\t\t\t\t.andExpect(status().isOk())\n\t\t\t\t.andExpect(content().string(equalTo("Hello World")));\n\t}\n\n}\n\n\n使用MockServletContext来构建一个空的WebApplicationContext，这样我们创建的HelloController就可以在@Before函数中创建并传递到MockMvcBuilders.standaloneSetup（）函数中。\n\n * 注意引入下面内容，让status、content、equalTo函数可用\n\nimport static org.hamcrest.Matchers.equalTo;\nimport static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;\nimport static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n\n\n至此已完成目标，通过 Maven 构建了一个空白 Spring Boot 项目，再通过引入 web 模块实现了一个简单的请求处理。\n\n\n# 示例源码\n\n> 示例源码：spring-boot-web-helloworld\n\n\n# 参考资料\n\n * Spring Boot 官方文档之 Getting Started',normalizedContent:'# springboot 之快速入门\n\n\n# spring boot 简介\n\nspring boot 可以让使用者非常方便的创建 spring 应用。\n\nspring boot 的目标是：\n\n * 为所有 spring 开发者提供更快且可广泛访问的入门体验。\n * 开箱即用\n * 提供一系列通用的非功能特性（例如嵌入式服务、安全、指标、健康检查和外部化配置）\n * 完全不需要代码生成，也不需要 xml 配置。\n\n\n# spring boot 系统要求\n\nspring boot 的构建工具要求：\n\nbuild tool   version\nmaven        3.5+\ngradle       6.8.x, 6.9.x, and 7.x\n\nspring boot 支持的 servlet 容器：\n\nname           servlet version\ntomcat 9.0     4.0\njetty 9.4      3.1\njetty 10.0     4.0\nundertow 2.0   4.0\n\n\n# 部署第一个 spring boot 项目\n\n> 本节介绍如何开发一个小的“hello world!” web 应用示例，来展示 spring boot 的一些关键功能。我们使用 maven 来构建这个项目，因为大多数 ide 都支持它。\n\n\n# 环境检查\n\nspring boot 项目依赖于 java 环境和 mave，开始项目之前需要先检查一下环境。\n\n本地是否已安装 java：\n\n$ java -version\njava version "1.8.0_102"\njava(tm) se runtime environment (build 1.8.0_102-b14)\njava hotspot(tm) 64-bit server vm (build 25.102-b14, mixed mode)\n\n\n本地是否已安装 maven：\n\n$ mvn -v\napache maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17t14:33:14-04:00)\nmaven home: /usr/local/cellar/maven/3.3.9/libexec\njava version: 1.8.0_102, vendor: oracle corporation\n\n\n\n# 创建 pom\n\n我们需要从创建 maven pom.xml 文件开始。 pom.xml 是 maven 用于构建项目的配置文件。\n\n<?xml version="1.0" encoding="utf-8"?>\n<project xmlns="http://maven.apache.org/pom/4.0.0" xmlns:xsi="http://www.w3.org/2001/xmlschema-instance"\n    xsi:schemalocation="http://maven.apache.org/pom/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <modelversion>4.0.0</modelversion>\n\n    <groupid>com.example</groupid>\n    <artifactid>myproject</artifactid>\n    <version>0.0.1-snapshot</version>\n\n    <parent>\n        <groupid>org.springframework.boot</groupid>\n        <artifactid>spring-boot-starter-parent</artifactid>\n        <version>2.6.1</version>\n    </parent>\n\n    \x3c!-- additional lines to be added here... --\x3e\n\n</project>\n\n\n使用者可以通过运行 mvn package 来测试它\n\n\n# 添加依赖\n\nspring boot 提供了许多启动器（starters）以应对不同的使用场景。使用者可将 jars 添加到类路径中。我们的示例程序在 pom 的 parent 使用 spring-boot-starter-parent。 spring-boot-starter-parent 是一个特殊的启动器，提供有用的 maven 默认值。它还提供了一个依赖项的版本管理，可以让使用者使用时不必显示指定版本。\n\n其他启动器（starters）提供了各种针对不同使用场景的功能。比如，我们需要开发一个 web 应用程序，就可以添加了一个 spring-boot-starter-web 依赖项。在此之前，我们可以通过运行以下命令来查看我们当前拥有的 maven 依赖：\n\n$ mvn dependency:tree\n\n[info] com.example:myproject:jar:0.0.1-snapshot\n\n\nmvn dependency:tree 命令打印项目依赖项的层级结构。可以看到 spring-boot-starter-parent 本身没有提供任何依赖。要添加必要的依赖，需要编辑 pom.xml 并在 <dependencies> 部分添加 spring-boot-starter-web 依赖项：\n\n<dependencies>\n    <dependency>\n        <groupid>org.springframework.boot</groupid>\n        <artifactid>spring-boot-starter-web</artifactid>\n    </dependency>\n</dependencies>\n\n\n\n# 编写代码\n\n要运行应用程序，我们需要创建一个启动类。默认情况下，maven 从 src/main/java 编译源代码，因此您需要创建该目录结构，然后添加一个名为 src/main/java/myapplication.java 的文件以包含以下代码：\n\n@restcontroller\n@enableautoconfiguration\npublic class myapplication {\n\n    @requestmapping("/")\n    string home() {\n        return "hello world!";\n    }\n\n    public static void main(string[] args) {\n        springapplication.run(myapplication.class, args);\n    }\n\n}\n\n\n说明：\n\n@restcontroller 注解告诉 spring，这个类是用来处理 rest 请求的。\n\n@requestmapping 注解提供了“路由”信息。它告诉 spring 任何带有 / 路径的 http 请求都应该映射到 home 方法。 @restcontroller 注解告诉 spring 将结果字符串直接呈现给调用者。\n\n@enableautoconfiguration 注解告诉 spring boot 根据你添加的 jar 依赖去自动装配 spring。\n\n> 自动配置旨在与“starters”配合使用，但这两个概念并没有直接联系。您可以自由选择 starters 之外的 jar 依赖项。 spring boot 仍然尽力自动配置您的应用程序。\n\nspring boot 的 main 方法通过调用 run 委托给 spring boot 的 springapplication 类。 springapplication 引导我们的应用程序，启动 spring，进而启动自动配置的 tomcat web 服务器。我们需要将 myapplication.class 作为参数传递给 run 方法，以告诉 springapplication 哪个是入口类。还传递 args 数组以公开任何命令行参数。\n\n\n# 运行示例\n\n此时，您的应用程序应该可以工作了。由于您使用了 spring-boot-starter-parent pom，因此您有一个有用的运行目标，可用于启动应用程序。从项目根目录键入 mvn spring-boot:run 以启动应用程序。您应该会看到类似于以下内容的输出：\n\n$ mvn spring-boot:run\n\n  .   ____          _            __ _ _\n /\\\\ / ___\'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | \'_ | \'_| | \'_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  \'  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n :: spring boot ::  (v2.6.1)\n....... . . .\n....... . . . (log output here)\n....... . . .\n........ started myapplication in 2.222 seconds (jvm running for 6.514)\n\n\n如果您打开 web 浏览器访问 localhost:8080，您应该会看到以下输出：\n\nhello world!\n\n\n要正常退出应用程序，请按 ctrl-c。\n\n\n# 创建可执行 jar\n\n要创建一个可执行的 jar，我们需要将 spring-boot-maven-plugin 添加到我们的 pom.xml 中。为此，请在依赖项部分下方插入以下行：\n\n<build>\n    <plugins>\n        <plugin>\n            <groupid>org.springframework.boot</groupid>\n            <artifactid>spring-boot-maven-plugin</artifactid>\n        </plugin>\n    </plugins>\n</build>\n\n\n保存 pom.xml 并从命令行运行 mvn package，如下所示：\n\n$ mvn package\n\n[info] scanning for projects...\n[info]\n[info] ------------------------------------------------------------------------\n[info] building myproject 0.0.1-snapshot\n[info] ------------------------------------------------------------------------\n[info] .... ..\n[info] --- maven-jar-plugin:2.4:jar (default-jar) @ myproject ---\n[info] building jar: /users/developer/example/spring-boot-example/target/myproject-0.0.1-snapshot.jar\n[info]\n[info] --- spring-boot-maven-plugin:2.6.1:repackage (default) @ myproject ---\n[info] ------------------------------------------------------------------------\n[info] build success\n[info] ------------------------------------------------------------------------\n\n\n如果您查看 target 目录，应该会看到 myproject-0.0.1-snapshot.jar。该文件的大小应约为 10 mb。如果想看里面，可以使用 jar tvf，如下：\n\n$ jar tvf target/myproject-0.0.1-snapshot.jar\n\n\n您还应该在目标目录中看到一个更小的名为 myproject-0.0.1-snapshot.jar.original 的文件。这是 maven 在 spring boot 重新打包之前创建的原始 jar 文件。\n\n要运行该应用程序，请使用 java -jar 命令，如下所示：\n\n$ java -jar target/myproject-0.0.1-snapshot.jar\n\n  .   ____          _            __ _ _\n /\\\\ / ___\'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | \'_ | \'_| | \'_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  \'  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n :: spring boot ::  (v2.6.1)\n....... . . .\n....... . . . (log output here)\n....... . . .\n........ started myapplication in 2.536 seconds (jvm running for 2.864)\n\n\n和以前一样，要退出应用程序，请按 ctrl-c。\n\n\n# 通过 spring initializr 创建 spring boot 项目\n\n\n# 创建项目\n\n通过 spring initializr 工具产生基础项目\n\n 1. 访问：http://start.spring.io/\n 2. 选择构建工具maven project、spring boot 版本 1.5.10 以及一些工程基本信息，可参考下图所示：\n\n\n\n 3. 点击generate project下载项目压缩包\n 4. 解压压缩包，包中已是一个完整的项目。\n\n如果你使用 intellij 作为 ide，那么你可以直接使用 spring initializr，参考下图操作：\n\n\n\n\n# 项目说明\n\n重要文件\n\n * src/main/java 路径下的 chapter1application 类 ：程序入口\n * src/main/resources 路径下的 application.properties ：项目配置文件\n * src/test/java 路径下的 chapter01applicationtests ：程序测试入口\n\npom.xml\n\npom 中指定 parent 为以下内容，表示此项目继承了 spring-boot-starter-parent 的 maven 配置（主要是指定了常用依赖、插件的版本）。\n\n<parent>\n <groupid>org.springframework.boot</groupid>\n <artifactid>spring-boot-starter-parent</artifactid>\n <version>1.5.10.release</version>\n <relativepath/> \x3c!-- lookup parent from repository --\x3e\n</parent>\n\n\n此外，pom 中默认引入两个依赖包，和一个插件。\n\n<dependencies>\n <dependency>\n  <groupid>org.springframework.boot</groupid>\n  <artifactid>spring-boot-starter-web</artifactid>\n </dependency>\n\n <dependency>\n  <groupid>org.springframework.boot</groupid>\n  <artifactid>spring-boot-starter-test</artifactid>\n  <scope>test</scope>\n </dependency>\n</dependencies>\n\n<build>\n <plugins>\n  <plugin>\n   <groupid>org.springframework.boot</groupid>\n   <artifactid>spring-boot-maven-plugin</artifactid>\n  </plugin>\n </plugins>\n</build>\n\n\n * spring-boot-starter-web：核心模块，包括自动配置支持、日志和 yaml。\n * spring-boot-starter-test：测试模块，包括 junit、hamcrest、mockito。\n * spring-boot-maven-plugin：spring boot 插件， 提供了一系列 spring boot 相关的 maven 操作。\n   * spring-boot:build-info，生成 actuator 使用的构建信息文件 build-info.properties\n   * spring-boot:repackage，默认 goal。在 mvn package 之后，再次打包可执行的 jar/war，同时保留 mvn package 生成的 jar/war 为.origin\n   * spring-boot:run，运行 spring boot 应用\n   * spring-boot:start，在 mvn integration-test 阶段，进行 spring boot 应用生命周期的管理\n   * spring-boot:stop，在 mvn integration-test 阶段，进行 spring boot 应用生命周期的管理\n\n\n# 编写 rest 服务\n\n * 创建 package ，名为 io.github.zp.springboot.chapter1.web（根据项目情况修改）\n * 创建 hellocontroller 类，内容如下：\n\n@restcontroller\npublic class hellocontroller {\n\n    @requestmapping("/hello")\n    public string index() {\n        return "hello world";\n    }\n\n}\n\n\n * 启动主程序 xxxapplication，打开浏览器访问http://localhost:8080/hello ，可以看到页面输出hello world\n\n\n# 编写单元测试用例\n\n在 xxxapplicationtests 类中编写一个简单的单元测试来模拟 http 请求，具体如下：\n\n@runwith(springjunit4classrunner.class)\n@springapplicationconfiguration(classes = mockservletcontext.class)\n@webappconfiguration\npublic class springboothelloworldapplicationtest {\n\n\tprivate mockmvc mvc;\n\n\t@before\n\tpublic void setup() {\n\t\tmvc = mockmvcbuilders.standalonesetup(new hellocontroller()).build();\n\t}\n\n\t@test\n\tpublic void gethello() throws exception {\n\t\tmvc.perform(mockmvcrequestbuilders.get("/hello").accept(mediatype.application_json))\n\t\t\t\t.andexpect(status().isok())\n\t\t\t\t.andexpect(content().string(equalto("hello world")));\n\t}\n\n}\n\n\n使用mockservletcontext来构建一个空的webapplicationcontext，这样我们创建的hellocontroller就可以在@before函数中创建并传递到mockmvcbuilders.standalonesetup（）函数中。\n\n * 注意引入下面内容，让status、content、equalto函数可用\n\nimport static org.hamcrest.matchers.equalto;\nimport static org.springframework.test.web.servlet.result.mockmvcresultmatchers.content;\nimport static org.springframework.test.web.servlet.result.mockmvcresultmatchers.status;\n\n\n至此已完成目标，通过 maven 构建了一个空白 spring boot 项目，再通过引入 web 模块实现了一个简单的请求处理。\n\n\n# 示例源码\n\n> 示例源码：spring-boot-web-helloworld\n\n\n# 参考资料\n\n * spring boot 官方文档之 getting started',charsets:{cjk:!0},lastUpdated:"2022/06/14, 07:03:20",lastUpdatedTimestamp:16551614e5},{title:"SpringBoot 之属性加载详解",frontmatter:{title:"SpringBoot 之属性加载详解",date:"2019-01-10T11:55:54.000Z",categories:["Java","框架","SpringBoot","SpringBoot基础"],tags:["Java","框架","Spring","SpringBoot"],permalink:"/pages/0fb992/"},regularPath:"/10.Java/13.%E6%A1%86%E6%9E%B6/02.SpringBoot/01.SpringBoot%E5%9F%BA%E7%A1%80/02.SpringBoot%E4%B9%8B%E5%B1%9E%E6%80%A7%E5%8A%A0%E8%BD%BD.html",relativePath:"10.Java/13.框架/02.SpringBoot/01.SpringBoot基础/02.SpringBoot之属性加载.md",key:"v-f5e234f0",path:"/pages/0fb992/",headers:[{level:2,title:"加载 property 顺序",slug:"加载-property-顺序",normalizedTitle:"加载 property 顺序",charIndex:25},{level:2,title:"随机属性",slug:"随机属性",normalizedTitle:"随机属性",charIndex:839},{level:2,title:"命令行属性",slug:"命令行属性",normalizedTitle:"命令行属性",charIndex:1080},{level:2,title:"Application 属性文件",slug:"application-属性文件",normalizedTitle:"application 属性文件",charIndex:1267},{level:2,title:"Profile 特定属性",slug:"profile-特定属性",normalizedTitle:"profile 特定属性",charIndex:1837},{level:2,title:"属性中的占位符",slug:"属性中的占位符",normalizedTitle:"属性中的占位符",charIndex:2026},{level:2,title:"YAML 属性",slug:"yaml-属性",normalizedTitle:"yaml 属性",charIndex:2262},{level:3,title:"访问属性",slug:"访问属性",normalizedTitle:"访问属性",charIndex:2889},{level:3,title:"多 profile 配置",slug:"多-profile-配置",normalizedTitle:"多 profile 配置",charIndex:3036},{level:3,title:"YAML 的缺点",slug:"yaml-的缺点",normalizedTitle:"yaml 的缺点",charIndex:3234},{level:2,title:"属性前缀",slug:"属性前缀",normalizedTitle:"属性前缀",charIndex:3323},{level:2,title:"属性松散绑定规则",slug:"属性松散绑定规则",normalizedTitle:"属性松散绑定规则",charIndex:4709},{level:2,title:"属性转换",slug:"属性转换",normalizedTitle:"属性转换",charIndex:4969},{level:3,title:"时间单位转换",slug:"时间单位转换",normalizedTitle:"时间单位转换",charIndex:5158},{level:3,title:"数据大小转换",slug:"数据大小转换",normalizedTitle:"数据大小转换",charIndex:5978},{level:2,title:"校验属性",slug:"校验属性",normalizedTitle:"校验属性",charIndex:6650},{level:2,title:"示例源码",slug:"示例源码",normalizedTitle:"示例源码",charIndex:7071},{level:2,title:"参考资料",slug:"参考资料",normalizedTitle:"参考资料",charIndex:7109}],headersStr:"加载 property 顺序 随机属性 命令行属性 Application 属性文件 Profile 特定属性 属性中的占位符 YAML 属性 访问属性 多 profile 配置 YAML 的缺点 属性前缀 属性松散绑定规则 属性转换 时间单位转换 数据大小转换 校验属性 示例源码 参考资料",content:'# SpringBoot 之属性加载详解\n\n\n# 加载 property 顺序\n\nSpring Boot 加载 property 顺序如下：\n\n 1.  Devtools 全局配置 (当 devtools 被激活 ~/.spring-boot-devtools.properties).\n 2.  测试环境中的 @TestPropertySource 注解配置\n 3.  测试环境中的属性 properties：@SpringBootTest 和 测试注解.\n 4.  命令行参数\n 5.  SPRING_APPLICATION_JSON 属性\n 6.  ServletConfig 初始化参数\n 7.  ServletContext 初始化参数\n 8.  JNDI attributes from 通过 java:comp/env 配置的 JNDI 属性\n 9.  Java 系统属性 (System.getProperties())\n 10. 操作系统环境比那里\n 11. RandomValuePropertySource 加载 random.* 形式的属性\n 12. jar 包外的 application-{profile}.properties 或 application-{profile}.yml 配置\n 13. jar 包内的 application-{profile}.properties 或 application-{profile}.yml 配置\n 14. jar 包外的 application.properties 或 application.yml 配置\n 15. jar 包内的 application.properties 或 application.yml 配置\n 16. @PropertySource 绑定的配置\n 17. 默认属性 (通过 SpringApplication.setDefaultProperties 指定)\n\n\n# 随机属性\n\nRandomValuePropertySource 类用于配置随机值。\n\n示例：\n\nmy.secret=${random.value}\nmy.number=${random.int}\nmy.bignumber=${random.long}\nmy.uuid=${random.uuid}\nmy.number.less.than.ten=${random.int(10)}\nmy.number.in.range=${random.int[1024,65536]}\n\n\n\n# 命令行属性\n\n默认情况下， SpringApplication 会获取 -- 参数（例如 --server.port=9000 ），并将这个 property 添加到 Spring 的 Environment 中。\n\n如果不想加载命令行属性，可以通过 SpringApplication.setAddCommandLineProperties(false) 禁用。\n\n\n# Application 属性文件\n\nSpringApplication 会自动加载以下路径下的 application.properties 配置文件，将其中的属性读到 Spring 的 Environment 中。\n\n 1. 当前目录的 /config 子目录\n 2. 当前目录\n 3. classpath 路径下的 /config package\n 4. classpath 根路径\n\n> 注：\n> \n> 以上列表的配置文件会根据顺序，后序的配置会覆盖前序的配置。\n> \n> 你可以选择 YAML(yml) 配置文件替换 properties 配置文件。\n\n如果不喜欢 application.properties 作为配置文件名，可以使用 spring.config.name 环境变量替换：\n\n$ java -jar myproject.jar --spring.config.name=myproject\n\n\n可以使用 spring.config.location 环境变量指定配置文件路径：\n\n$ java -jar myproject.jar --spring.config.location=classpath:/default.properties,classpath:/override.properties\n\n\n\n# Profile 特定属性\n\n如果定义 application-{profile}.properties 形式的配置文件，将被视为 profile 环境下的特定配置。\n\n可以通过 spring.profiles.active 参数来激活 profile，如果没有激活的 profile,默认会加载 application-default.properties 中的配置。\n\n\n# 属性中的占位符\n\napplication.properties 中的值会被 Environment 过滤，所以，可以引用之前定义的属性。\n\napp.name=MyApp\napp.description=${app.name} is a Spring Boot application\n\n\n> 注：你可以使用此技术来创建 Spring Boot 属性变量。请参考： Section 77.4, “Use ‘Short’ Command Line Arguments\n\n\n# YAML 属性\n\nSpring 框架有两个类支持加载 YAML 文件。\n\n * YamlPropertiesFactoryBean 将 YAML 文件的配置加载为 Properties 。\n * YamlMapFactoryBean 将 YAML 文件的配置加载为 Map 。\n\n示例 1\n\nenvironments:\n\tdev:\n\t\turl: http://dev.example.com\n\t\tname: Developer Setup\n\tprod:\n\t\turl: http://another.example.com\n\t\tname: My Cool App\n\n\n等价于：\n\nenvironments.dev.url=http://dev.example.com\nenvironments.dev.name=Developer Setup\nenvironments.prod.url=http://another.example.com\nenvironments.prod.name=My Cool App\n\n\nYAML 支持列表形式，等价于 property 中的 [index] ：\n\nmy:\nservers:\n\t- dev.example.com\n\t- another.example.com\n\n\n等价于\n\nmy.servers[0]=dev.example.com\nmy.servers[1]=another.example.com\n\n\n\n# 访问属性\n\nYamlPropertySourceLoader 类会将 YAML 配置转化为 Spring Environment 类中的 PropertySource 。然后，你可以如同 properties 文件中的属性一样，使用 @Value 注解来访问 YAML 中配置的属性。\n\n\n# 多 profile 配置\n\nserver:\n  address: 192.168.1.100\n---\nspring:\n  profiles: development\nserver:\n  address: 127.0.0.1\n---\nspring:\n  profiles: production & eu-central\nserver:\n  address: 192.168.1.120\n\n\n\n# YAML 的缺点\n\n注：YAML 注解中的属性不能通过 @PropertySource 注解来访问。所以，如果你的项目中使用了一些自定义属性文件，建议不要用 YAML。\n\n\n# 属性前缀\n\npackage com.example;\n\nimport java.net.InetAddress;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\n\nimport org.springframework.boot.context.properties.ConfigurationProperties;\n\n@ConfigurationProperties(prefix="acme")\npublic class AcmeProperties {\n\n\tprivate boolean enabled;\n\n\tprivate InetAddress remoteAddress;\n\n\tprivate final Security security = new Security();\n\n\tpublic boolean isEnabled() { ... }\n\n\tpublic void setEnabled(boolean enabled) { ... }\n\n\tpublic InetAddress getRemoteAddress() { ... }\n\n\tpublic void setRemoteAddress(InetAddress remoteAddress) { ... }\n\n\tpublic Security getSecurity() { ... }\n\n\tpublic static class Security {\n\n\t\tprivate String username;\n\n\t\tprivate String password;\n\n\t\tprivate List<String> roles = new ArrayList<>(Collections.singleton("USER"));\n\n\t\tpublic String getUsername() { ... }\n\n\t\tpublic void setUsername(String username) { ... }\n\n\t\tpublic String getPassword() { ... }\n\n\t\tpublic void setPassword(String password) { ... }\n\n\t\tpublic List<String> getRoles() { ... }\n\n\t\tpublic void setRoles(List<String> roles) { ... }\n\n\t}\n}\n\n\n相当于支持配置以下属性：\n\n * acme.enabled\n * acme.remote-address\n * acme.security.username\n * acme.security.password\n * acme.security.roles\n\n然后，你需要使用 @EnableConfigurationProperties 注解将属性类注入配置类中。\n\n@Configuration\n@EnableConfigurationProperties(AcmeProperties.class)\npublic class MyConfiguration {\n}\n\n\n\n# 属性松散绑定规则\n\nSpring Boot 属性名绑定比较松散。\n\n以下属性 key 都是等价的：\n\nPROPERTY                            NOTE\nacme.my-project.person.first-name   - 分隔\nacme.myProject.person.firstName     驼峰命名\nacme.my_project.person.first_name   _ 分隔\nACME_MYPROJECT_PERSON_FIRSTNAME     大写字母\n\n\n# 属性转换\n\n如果需要类型转换，你可以提供一个 ConversionService bean (一个名叫 conversionService 的 bean) 或自定义属性配置 (一个 CustomEditorConfigurer bean) 或自定义的 Converters (被 @ConfigurationPropertiesBinding 注解修饰的 bena)。\n\n\n# 时间单位转换\n\nSpring 使用 java.time.Duration 类代表时间大小，以下场景适用：\n\n * 除非指定 @DurationUnit ，否则一个 long 代表的时间为毫秒。\n * ISO-8601 标准格式（ java.time.Duration 的实现就是参照此标准）\n * 你也可以使用以下支持的单位：\n   * ns - 纳秒\n   * us - 微秒\n   * ms - 毫秒\n   * s - 秒\n   * m - 分\n   * h - 时\n   * d - 天\n\n示例：\n\n@ConfigurationProperties("app.system")\npublic class AppSystemProperties {\n\n\t@DurationUnit(ChronoUnit.SECONDS)\n\tprivate Duration sessionTimeout = Duration.ofSeconds(30);\n\n\tprivate Duration readTimeout = Duration.ofMillis(1000);\n\n\tpublic Duration getSessionTimeout() {\n\t\treturn this.sessionTimeout;\n\t}\n\n\tpublic void setSessionTimeout(Duration sessionTimeout) {\n\t\tthis.sessionTimeout = sessionTimeout;\n\t}\n\n\tpublic Duration getReadTimeout() {\n\t\treturn this.readTimeout;\n\t}\n\n\tpublic void setReadTimeout(Duration readTimeout) {\n\t\tthis.readTimeout = readTimeout;\n\t}\n\n}\n\n\n\n# 数据大小转换\n\nSpring 使用 DataSize 类代表数据大小，以下场景适用：\n\n * long 值（默认视为 byte）\n * 你也可以使用以下支持的单位：\n   * B\n   * KB\n   * MB\n   * GB\n   * TB\n\n示例：\n\n@ConfigurationProperties("app.io")\npublic class AppIoProperties {\n\n\t@DataSizeUnit(DataUnit.MEGABYTES)\n\tprivate DataSize bufferSize = DataSize.ofMegabytes(2);\n\n\tprivate DataSize sizeThreshold = DataSize.ofBytes(512);\n\n\tpublic DataSize getBufferSize() {\n\t\treturn this.bufferSize;\n\t}\n\n\tpublic void setBufferSize(DataSize bufferSize) {\n\t\tthis.bufferSize = bufferSize;\n\t}\n\n\tpublic DataSize getSizeThreshold() {\n\t\treturn this.sizeThreshold;\n\t}\n\n\tpublic void setSizeThreshold(DataSize sizeThreshold) {\n\t\tthis.sizeThreshold = sizeThreshold;\n\t}\n\n}\n\n\n\n# 校验属性\n\n@ConfigurationProperties(prefix="acme")\n@Validated\npublic class AcmeProperties {\n\n\t@NotNull\n\tprivate InetAddress remoteAddress;\n\n\t@Valid\n\tprivate final Security security = new Security();\n\n\t// ... getters and setters\n\n\tpublic static class Security {\n\n\t\t@NotEmpty\n\t\tpublic String username;\n\n\t\t// ... getters and setters\n\n\t}\n\n}\n\n\n你也可以自定义一个名为 configurationPropertiesValidator 的校验器 Bean。获取这个 @Bean 的方法必须声明为 static。\n\n\n# 示例源码\n\n> 示例源码：spring-boot-property\n\n\n# 参考资料\n\n * Spring Boot 官方文档之 boot-features-external-config',normalizedContent:'# springboot 之属性加载详解\n\n\n# 加载 property 顺序\n\nspring boot 加载 property 顺序如下：\n\n 1.  devtools 全局配置 (当 devtools 被激活 ~/.spring-boot-devtools.properties).\n 2.  测试环境中的 @testpropertysource 注解配置\n 3.  测试环境中的属性 properties：@springboottest 和 测试注解.\n 4.  命令行参数\n 5.  spring_application_json 属性\n 6.  servletconfig 初始化参数\n 7.  servletcontext 初始化参数\n 8.  jndi attributes from 通过 java:comp/env 配置的 jndi 属性\n 9.  java 系统属性 (system.getproperties())\n 10. 操作系统环境比那里\n 11. randomvaluepropertysource 加载 random.* 形式的属性\n 12. jar 包外的 application-{profile}.properties 或 application-{profile}.yml 配置\n 13. jar 包内的 application-{profile}.properties 或 application-{profile}.yml 配置\n 14. jar 包外的 application.properties 或 application.yml 配置\n 15. jar 包内的 application.properties 或 application.yml 配置\n 16. @propertysource 绑定的配置\n 17. 默认属性 (通过 springapplication.setdefaultproperties 指定)\n\n\n# 随机属性\n\nrandomvaluepropertysource 类用于配置随机值。\n\n示例：\n\nmy.secret=${random.value}\nmy.number=${random.int}\nmy.bignumber=${random.long}\nmy.uuid=${random.uuid}\nmy.number.less.than.ten=${random.int(10)}\nmy.number.in.range=${random.int[1024,65536]}\n\n\n\n# 命令行属性\n\n默认情况下， springapplication 会获取 -- 参数（例如 --server.port=9000 ），并将这个 property 添加到 spring 的 environment 中。\n\n如果不想加载命令行属性，可以通过 springapplication.setaddcommandlineproperties(false) 禁用。\n\n\n# application 属性文件\n\nspringapplication 会自动加载以下路径下的 application.properties 配置文件，将其中的属性读到 spring 的 environment 中。\n\n 1. 当前目录的 /config 子目录\n 2. 当前目录\n 3. classpath 路径下的 /config package\n 4. classpath 根路径\n\n> 注：\n> \n> 以上列表的配置文件会根据顺序，后序的配置会覆盖前序的配置。\n> \n> 你可以选择 yaml(yml) 配置文件替换 properties 配置文件。\n\n如果不喜欢 application.properties 作为配置文件名，可以使用 spring.config.name 环境变量替换：\n\n$ java -jar myproject.jar --spring.config.name=myproject\n\n\n可以使用 spring.config.location 环境变量指定配置文件路径：\n\n$ java -jar myproject.jar --spring.config.location=classpath:/default.properties,classpath:/override.properties\n\n\n\n# profile 特定属性\n\n如果定义 application-{profile}.properties 形式的配置文件，将被视为 profile 环境下的特定配置。\n\n可以通过 spring.profiles.active 参数来激活 profile，如果没有激活的 profile,默认会加载 application-default.properties 中的配置。\n\n\n# 属性中的占位符\n\napplication.properties 中的值会被 environment 过滤，所以，可以引用之前定义的属性。\n\napp.name=myapp\napp.description=${app.name} is a spring boot application\n\n\n> 注：你可以使用此技术来创建 spring boot 属性变量。请参考： section 77.4, “use ‘short’ command line arguments\n\n\n# yaml 属性\n\nspring 框架有两个类支持加载 yaml 文件。\n\n * yamlpropertiesfactorybean 将 yaml 文件的配置加载为 properties 。\n * yamlmapfactorybean 将 yaml 文件的配置加载为 map 。\n\n示例 1\n\nenvironments:\n\tdev:\n\t\turl: http://dev.example.com\n\t\tname: developer setup\n\tprod:\n\t\turl: http://another.example.com\n\t\tname: my cool app\n\n\n等价于：\n\nenvironments.dev.url=http://dev.example.com\nenvironments.dev.name=developer setup\nenvironments.prod.url=http://another.example.com\nenvironments.prod.name=my cool app\n\n\nyaml 支持列表形式，等价于 property 中的 [index] ：\n\nmy:\nservers:\n\t- dev.example.com\n\t- another.example.com\n\n\n等价于\n\nmy.servers[0]=dev.example.com\nmy.servers[1]=another.example.com\n\n\n\n# 访问属性\n\nyamlpropertysourceloader 类会将 yaml 配置转化为 spring environment 类中的 propertysource 。然后，你可以如同 properties 文件中的属性一样，使用 @value 注解来访问 yaml 中配置的属性。\n\n\n# 多 profile 配置\n\nserver:\n  address: 192.168.1.100\n---\nspring:\n  profiles: development\nserver:\n  address: 127.0.0.1\n---\nspring:\n  profiles: production & eu-central\nserver:\n  address: 192.168.1.120\n\n\n\n# yaml 的缺点\n\n注：yaml 注解中的属性不能通过 @propertysource 注解来访问。所以，如果你的项目中使用了一些自定义属性文件，建议不要用 yaml。\n\n\n# 属性前缀\n\npackage com.example;\n\nimport java.net.inetaddress;\nimport java.util.arraylist;\nimport java.util.collections;\nimport java.util.list;\n\nimport org.springframework.boot.context.properties.configurationproperties;\n\n@configurationproperties(prefix="acme")\npublic class acmeproperties {\n\n\tprivate boolean enabled;\n\n\tprivate inetaddress remoteaddress;\n\n\tprivate final security security = new security();\n\n\tpublic boolean isenabled() { ... }\n\n\tpublic void setenabled(boolean enabled) { ... }\n\n\tpublic inetaddress getremoteaddress() { ... }\n\n\tpublic void setremoteaddress(inetaddress remoteaddress) { ... }\n\n\tpublic security getsecurity() { ... }\n\n\tpublic static class security {\n\n\t\tprivate string username;\n\n\t\tprivate string password;\n\n\t\tprivate list<string> roles = new arraylist<>(collections.singleton("user"));\n\n\t\tpublic string getusername() { ... }\n\n\t\tpublic void setusername(string username) { ... }\n\n\t\tpublic string getpassword() { ... }\n\n\t\tpublic void setpassword(string password) { ... }\n\n\t\tpublic list<string> getroles() { ... }\n\n\t\tpublic void setroles(list<string> roles) { ... }\n\n\t}\n}\n\n\n相当于支持配置以下属性：\n\n * acme.enabled\n * acme.remote-address\n * acme.security.username\n * acme.security.password\n * acme.security.roles\n\n然后，你需要使用 @enableconfigurationproperties 注解将属性类注入配置类中。\n\n@configuration\n@enableconfigurationproperties(acmeproperties.class)\npublic class myconfiguration {\n}\n\n\n\n# 属性松散绑定规则\n\nspring boot 属性名绑定比较松散。\n\n以下属性 key 都是等价的：\n\nproperty                            note\nacme.my-project.person.first-name   - 分隔\nacme.myproject.person.firstname     驼峰命名\nacme.my_project.person.first_name   _ 分隔\nacme_myproject_person_firstname     大写字母\n\n\n# 属性转换\n\n如果需要类型转换，你可以提供一个 conversionservice bean (一个名叫 conversionservice 的 bean) 或自定义属性配置 (一个 customeditorconfigurer bean) 或自定义的 converters (被 @configurationpropertiesbinding 注解修饰的 bena)。\n\n\n# 时间单位转换\n\nspring 使用 java.time.duration 类代表时间大小，以下场景适用：\n\n * 除非指定 @durationunit ，否则一个 long 代表的时间为毫秒。\n * iso-8601 标准格式（ java.time.duration 的实现就是参照此标准）\n * 你也可以使用以下支持的单位：\n   * ns - 纳秒\n   * us - 微秒\n   * ms - 毫秒\n   * s - 秒\n   * m - 分\n   * h - 时\n   * d - 天\n\n示例：\n\n@configurationproperties("app.system")\npublic class appsystemproperties {\n\n\t@durationunit(chronounit.seconds)\n\tprivate duration sessiontimeout = duration.ofseconds(30);\n\n\tprivate duration readtimeout = duration.ofmillis(1000);\n\n\tpublic duration getsessiontimeout() {\n\t\treturn this.sessiontimeout;\n\t}\n\n\tpublic void setsessiontimeout(duration sessiontimeout) {\n\t\tthis.sessiontimeout = sessiontimeout;\n\t}\n\n\tpublic duration getreadtimeout() {\n\t\treturn this.readtimeout;\n\t}\n\n\tpublic void setreadtimeout(duration readtimeout) {\n\t\tthis.readtimeout = readtimeout;\n\t}\n\n}\n\n\n\n# 数据大小转换\n\nspring 使用 datasize 类代表数据大小，以下场景适用：\n\n * long 值（默认视为 byte）\n * 你也可以使用以下支持的单位：\n   * b\n   * kb\n   * mb\n   * gb\n   * tb\n\n示例：\n\n@configurationproperties("app.io")\npublic class appioproperties {\n\n\t@datasizeunit(dataunit.megabytes)\n\tprivate datasize buffersize = datasize.ofmegabytes(2);\n\n\tprivate datasize sizethreshold = datasize.ofbytes(512);\n\n\tpublic datasize getbuffersize() {\n\t\treturn this.buffersize;\n\t}\n\n\tpublic void setbuffersize(datasize buffersize) {\n\t\tthis.buffersize = buffersize;\n\t}\n\n\tpublic datasize getsizethreshold() {\n\t\treturn this.sizethreshold;\n\t}\n\n\tpublic void setsizethreshold(datasize sizethreshold) {\n\t\tthis.sizethreshold = sizethreshold;\n\t}\n\n}\n\n\n\n# 校验属性\n\n@configurationproperties(prefix="acme")\n@validated\npublic class acmeproperties {\n\n\t@notnull\n\tprivate inetaddress remoteaddress;\n\n\t@valid\n\tprivate final security security = new security();\n\n\t// ... getters and setters\n\n\tpublic static class security {\n\n\t\t@notempty\n\t\tpublic string username;\n\n\t\t// ... getters and setters\n\n\t}\n\n}\n\n\n你也可以自定义一个名为 configurationpropertiesvalidator 的校验器 bean。获取这个 @bean 的方法必须声明为 static。\n\n\n# 示例源码\n\n> 示例源码：spring-boot-property\n\n\n# 参考资料\n\n * spring boot 官方文档之 boot-features-external-config',charsets:{cjk:!0},lastUpdated:"2022/06/14, 07:03:20",lastUpdatedTimestamp:16551614e5},{title:"SpringBoot 之 Profile",frontmatter:{title:"SpringBoot 之 Profile",date:"2019-11-18T14:55:01.000Z",categories:["Java","框架","SpringBoot","SpringBoot基础"],tags:["Java","框架","Spring","SpringBoot"],permalink:"/pages/cb598e/"},regularPath:"/10.Java/13.%E6%A1%86%E6%9E%B6/02.SpringBoot/01.SpringBoot%E5%9F%BA%E7%A1%80/03.SpringBoot%E4%B9%8BProfile.html",relativePath:"10.Java/13.框架/02.SpringBoot/01.SpringBoot基础/03.SpringBoot之Profile.md",key:"v-6f291376",path:"/pages/cb598e/",headers:[{level:2,title:"区分环境的配置",slug:"区分环境的配置",normalizedTitle:"区分环境的配置",charIndex:129},{level:3,title:"properties 配置",slug:"properties-配置",normalizedTitle:"properties 配置",charIndex:141},{level:3,title:"yml 配置",slug:"yml-配置",normalizedTitle:"yml 配置",charIndex:441},{level:2,title:"区分环境的代码",slug:"区分环境的代码",normalizedTitle:"区分环境的代码",charIndex:1110},{level:3,title:"修饰类",slug:"修饰类",normalizedTitle:"修饰类",charIndex:1164},{level:3,title:"修饰注解",slug:"修饰注解",normalizedTitle:"修饰注解",charIndex:1450},{level:3,title:"修饰方法",slug:"修饰方法",normalizedTitle:"修饰方法",charIndex:1579},{level:2,title:"激活 profile",slug:"激活-profile",normalizedTitle:"激活 profile",charIndex:393},{level:3,title:"插件激活 profile",slug:"插件激活-profile",normalizedTitle:"插件激活 profile",charIndex:2238},{level:3,title:"main 方法激活 profile",slug:"main-方法激活-profile",normalizedTitle:"main 方法激活 profile",charIndex:2293},{level:3,title:"jar 激活 profile",slug:"jar-激活-profile",normalizedTitle:"jar 激活 profile",charIndex:2347},{level:3,title:"在 Java 代码中激活 profile",slug:"在-java-代码中激活-profile",normalizedTitle:"在 java 代码中激活 profile",charIndex:2414},{level:2,title:"示例源码",slug:"示例源码",normalizedTitle:"示例源码",charIndex:2779},{level:2,title:"参考资料",slug:"参考资料",normalizedTitle:"参考资料",charIndex:2816}],headersStr:"区分环境的配置 properties 配置 yml 配置 区分环境的代码 修饰类 修饰注解 修饰方法 激活 profile 插件激活 profile main 方法激活 profile jar 激活 profile 在 Java 代码中激活 profile 示例源码 参考资料",content:'# SpringBoot 之 Profile\n\n> 一个应用为了在不同的环境下工作，常常会有不同的配置，代码逻辑处理。Spring Boot 对此提供了简便的支持。\n> \n> 关键词： @Profile、spring.profiles.active\n\n\n# 区分环境的配置\n\n\n# properties 配置\n\n假设，一个应用的工作环境有：dev、test、prod\n\n那么，我们可以添加 4 个配置文件：\n\n * applcation.properties - 公共配置\n * application-dev.properties - 开发环境配置\n * application-test.properties - 测试环境配置\n * application-prod.properties - 生产环境配置\n\n在 applcation.properties 文件中可以通过以下配置来激活 profile：\n\nspring.profiles.active = test\n\n\n\n# yml 配置\n\n与 properties 文件类似，我们也可以添加 4 个配置文件：\n\n * applcation.yml - 公共配置\n * application-dev.yml - 开发环境配置\n * application-test.yml - 测试环境配置\n * application-prod.yml - 生产环境配置\n\n在 applcation.yml 文件中可以通过以下配置来激活 profile：\n\nspring:\n  profiles:\n    active: prod\n\n\n此外，yml 文件也可以在一个文件中完成所有 profile 的配置：\n\n# 激活 prod\nspring:\n  profiles:\n    active: prod\n# 也可以同时激活多个 profile\n# spring.profiles.active: prod,proddb,prodlog\n---\n# dev 配置\nspring:\n  profiles: dev\n\n# 略去配置\n\n---\nspring:\n  profiles: test\n\n# 略去配置\n\n---\nspring.profiles: prod\nspring.profiles.include:\n  - proddb\n  - prodlog\n\n---\nspring:\n  profiles: proddb\n\n# 略去配置\n\n---\nspring:\n  profiles: prodlog\n# 略去配置\n\n\n注意：不同 profile 之间通过 --- 分割\n\n\n# 区分环境的代码\n\n使用 @Profile 注解可以指定类或方法在特定的 Profile 环境生效。\n\n\n# 修饰类\n\n@Configuration\n@Profile("production")\npublic class JndiDataConfig {\n\n    @Bean(destroyMethod="")\n    public DataSource dataSource() throws Exception {\n        Context ctx = new InitialContext();\n        return (DataSource) ctx.lookup("java:comp/env/jdbc/datasource");\n    }\n}\n\n\n\n# 修饰注解\n\n@Target(ElementType.TYPE)\n@Retention(RetentionPolicy.RUNTIME)\n@Profile("production")\npublic @interface Production {\n}\n\n\n\n# 修饰方法\n\n@Configuration\npublic class AppConfig {\n\n    @Bean("dataSource")\n    @Profile("development")\n    public DataSource standaloneDataSource() {\n        return new EmbeddedDatabaseBuilder()\n            .setType(EmbeddedDatabaseType.HSQL)\n            .addScript("classpath:com/bank/config/sql/schema.sql")\n            .addScript("classpath:com/bank/config/sql/test-data.sql")\n            .build();\n    }\n\n    @Bean("dataSource")\n    @Profile("production")\n    public DataSource jndiDataSource() throws Exception {\n        Context ctx = new InitialContext();\n        return (DataSource) ctx.lookup("java:comp/env/jdbc/datasource");\n    }\n}\n\n\n\n# 激活 profile\n\n\n# 插件激活 profile\n\nspring-boot:run -Drun.profiles=prod\n\n\n\n# main 方法激活 profile\n\n--spring.profiles.active=prod\n\n\n\n# jar 激活 profile\n\njava -jar -Dspring.profiles.active=prod *.jar\n\n\n\n# 在 Java 代码中激活 profile\n\n直接指定环境变量来激活 profile：\n\nSystem.setProperty("spring.profiles.active", "test");\n\n\n在 Spring 容器中激活 profile：\n\nAnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext();\nctx.getEnvironment().setActiveProfiles("development");\nctx.register(SomeConfig.class, StandaloneDataConfig.class, JndiDataConfig.class);\nctx.refresh();\n\n\n\n# 示例源码\n\n> 示例源码：spring-boot-profile\n\n\n# 参考资料\n\n * Spring 官方文档之 Bean Definition Profiles\n * Spring Boot 官方文档之 boot-features-profiles',normalizedContent:'# springboot 之 profile\n\n> 一个应用为了在不同的环境下工作，常常会有不同的配置，代码逻辑处理。spring boot 对此提供了简便的支持。\n> \n> 关键词： @profile、spring.profiles.active\n\n\n# 区分环境的配置\n\n\n# properties 配置\n\n假设，一个应用的工作环境有：dev、test、prod\n\n那么，我们可以添加 4 个配置文件：\n\n * applcation.properties - 公共配置\n * application-dev.properties - 开发环境配置\n * application-test.properties - 测试环境配置\n * application-prod.properties - 生产环境配置\n\n在 applcation.properties 文件中可以通过以下配置来激活 profile：\n\nspring.profiles.active = test\n\n\n\n# yml 配置\n\n与 properties 文件类似，我们也可以添加 4 个配置文件：\n\n * applcation.yml - 公共配置\n * application-dev.yml - 开发环境配置\n * application-test.yml - 测试环境配置\n * application-prod.yml - 生产环境配置\n\n在 applcation.yml 文件中可以通过以下配置来激活 profile：\n\nspring:\n  profiles:\n    active: prod\n\n\n此外，yml 文件也可以在一个文件中完成所有 profile 的配置：\n\n# 激活 prod\nspring:\n  profiles:\n    active: prod\n# 也可以同时激活多个 profile\n# spring.profiles.active: prod,proddb,prodlog\n---\n# dev 配置\nspring:\n  profiles: dev\n\n# 略去配置\n\n---\nspring:\n  profiles: test\n\n# 略去配置\n\n---\nspring.profiles: prod\nspring.profiles.include:\n  - proddb\n  - prodlog\n\n---\nspring:\n  profiles: proddb\n\n# 略去配置\n\n---\nspring:\n  profiles: prodlog\n# 略去配置\n\n\n注意：不同 profile 之间通过 --- 分割\n\n\n# 区分环境的代码\n\n使用 @profile 注解可以指定类或方法在特定的 profile 环境生效。\n\n\n# 修饰类\n\n@configuration\n@profile("production")\npublic class jndidataconfig {\n\n    @bean(destroymethod="")\n    public datasource datasource() throws exception {\n        context ctx = new initialcontext();\n        return (datasource) ctx.lookup("java:comp/env/jdbc/datasource");\n    }\n}\n\n\n\n# 修饰注解\n\n@target(elementtype.type)\n@retention(retentionpolicy.runtime)\n@profile("production")\npublic @interface production {\n}\n\n\n\n# 修饰方法\n\n@configuration\npublic class appconfig {\n\n    @bean("datasource")\n    @profile("development")\n    public datasource standalonedatasource() {\n        return new embeddeddatabasebuilder()\n            .settype(embeddeddatabasetype.hsql)\n            .addscript("classpath:com/bank/config/sql/schema.sql")\n            .addscript("classpath:com/bank/config/sql/test-data.sql")\n            .build();\n    }\n\n    @bean("datasource")\n    @profile("production")\n    public datasource jndidatasource() throws exception {\n        context ctx = new initialcontext();\n        return (datasource) ctx.lookup("java:comp/env/jdbc/datasource");\n    }\n}\n\n\n\n# 激活 profile\n\n\n# 插件激活 profile\n\nspring-boot:run -drun.profiles=prod\n\n\n\n# main 方法激活 profile\n\n--spring.profiles.active=prod\n\n\n\n# jar 激活 profile\n\njava -jar -dspring.profiles.active=prod *.jar\n\n\n\n# 在 java 代码中激活 profile\n\n直接指定环境变量来激活 profile：\n\nsystem.setproperty("spring.profiles.active", "test");\n\n\n在 spring 容器中激活 profile：\n\nannotationconfigapplicationcontext ctx = new annotationconfigapplicationcontext();\nctx.getenvironment().setactiveprofiles("development");\nctx.register(someconfig.class, standalonedataconfig.class, jndidataconfig.class);\nctx.refresh();\n\n\n\n# 示例源码\n\n> 示例源码：spring-boot-profile\n\n\n# 参考资料\n\n * spring 官方文档之 bean definition profiles\n * spring boot 官方文档之 boot-features-profiles',charsets:{cjk:!0},lastUpdated:"2022/06/14, 07:03:20",lastUpdatedTimestamp:16551614e5},{title:"SpringBoot 之应用 EasyUI",frontmatter:{title:"SpringBoot 之应用 EasyUI",date:"2019-01-08T17:19:34.000Z",categories:["Java","框架","SpringBoot","SpringBootWeb"],tags:["Java","框架","Spring","SpringBoot"],permalink:"/pages/ad0516/"},regularPath:"/10.Java/13.%E6%A1%86%E6%9E%B6/02.SpringBoot/02.SpringBootWeb/01.SpringBoot%E4%B9%8B%E5%BA%94%E7%94%A8EasyUI.html",relativePath:"10.Java/13.框架/02.SpringBoot/02.SpringBootWeb/01.SpringBoot之应用EasyUI.md",key:"v-a545461e",path:"/pages/ad0516/",headers:[{level:2,title:"简介",slug:"简介",normalizedTitle:"简介",charIndex:288},{level:3,title:"什么是 EasyUI？",slug:"什么是-easyui",normalizedTitle:"什么是 easyui？",charIndex:295},{level:2,title:"Spring Boot 整合 EasyUI",slug:"spring-boot-整合-easyui",normalizedTitle:"spring boot 整合 easyui",charIndex:549},{level:3,title:"配置",slug:"配置",normalizedTitle:"配置",charIndex:575},{level:3,title:"引入 easyui",slug:"引入-easyui",normalizedTitle:"引入 easyui",charIndex:676},{level:2,title:"实战",slug:"实战",normalizedTitle:"实战",charIndex:1583},{level:3,title:"引入 maven 依赖",slug:"引入-maven-依赖",normalizedTitle:"引入 maven 依赖",charIndex:1590},{level:3,title:"使用 JPA",slug:"使用-jpa",normalizedTitle:"使用 jpa",charIndex:2677},{level:3,title:"使用 Web",slug:"使用-web",normalizedTitle:"使用 web",charIndex:3374},{level:3,title:"使用 EasyUI",slug:"使用-easyui",normalizedTitle:"使用 easyui",charIndex:4980},{level:2,title:"完整示例",slug:"完整示例",normalizedTitle:"完整示例",charIndex:11203},{level:2,title:"引用和引申",slug:"引用和引申",normalizedTitle:"引用和引申",charIndex:11314}],headersStr:"简介 什么是 EasyUI？ Spring Boot 整合 EasyUI 配置 引入 easyui 实战 引入 maven 依赖 使用 JPA 使用 Web 使用 EasyUI 完整示例 引用和引申",content:'# SpringBoot 之应用 EasyUI\n\n> EasyUI 是一个简单的用户界面组件的集合。由于 EasyUI 已经封装好大部分 UI 基本功能，能帮用户减少大量的 js 和 css 代码。所以，EasyUI 非常适合用于开发简单的系统或原型系统。\n> \n> 本文示例使用技术点：\n> \n>  * Spring Boot：主要使用了 spring-boot-starter-web、spring-boot-starter-data-jpa\n>  * EasyUI：按需加载，并没有引入所有的 EasyUI 特性\n>  * 数据库：为了测试方便，使用 H2\n\n\n\n\n# 简介\n\n\n# 什么是 EasyUI？\n\n * easyui 是基于 jQuery、Angular.、Vue 和 React 的用户界面组件的集合。\n * easyui 提供了构建现代交互式 javascript 应用程序的基本功能。\n * 使用 easyui，您不需要编写许多 javascript 代码，通常通过编写一些 HTML 标记来定义用户界面。\n * 完整的 HTML5 网页框架。\n * 使用 easyui 开发你的产品时可以大量节省你的时间和规模。\n * easyui 使用非常简单但功能非常强大。\n\n\n# Spring Boot 整合 EasyUI\n\n\n# 配置\n\napplication.properties 修改：\n\nspring.mvc.view.prefix = /views/\nspring.mvc.view.suffix = .html\n\n\n\n# 引入 easyui\n\nEasyUI 下载地址：http://www.jeasyui.cn/download.html\n\n在 src/main/resources/static 目录下引入 easyui。\n\n然后在 html 中引用：\n\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset="UTF-8" />\n    <link\n      rel="stylesheet"\n      type="text/css"\n      href="../lib/easyui/themes/bootstrap/easyui.css"\n    />\n    <link\n      rel="stylesheet"\n      type="text/css"\n      href="../lib/easyui/themes/icon.css"\n    />\n    <link\n      rel="stylesheet"\n      type="text/css"\n      href="../lib/easyui/themes/color.css"\n    />\n    <script type="text/javascript" src="../lib/easyui/jquery.min.js"><\/script>\n    <script\n      type="text/javascript"\n      src="../lib/easyui/jquery.easyui.min.js"\n    ><\/script>\n    <script\n      type="text/javascript"\n      src="../lib/easyui/locale/easyui-lang-zh_CN.js"\n    ><\/script>\n  </head>\n  <body>\n    \x3c!-- 省略 --\x3e\n  </body>\n</html>\n\n\n引入 easyui 后，需要使用哪种组件，可以查看相关文档或 API，十分简单，此处不一一赘述。\n\n\n# 实战\n\n\n# 引入 maven 依赖\n\n  <dependencies>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-web</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-data-jpa</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-tomcat</artifactId>\n      <scope>provided</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-test</artifactId>\n      <scope>test</scope>\n    </dependency>\n\n    <dependency>\n      <groupId>com.h2database</groupId>\n      <artifactId>h2</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-devtools</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>commons-collections</groupId>\n      <artifactId>commons-collections</artifactId>\n      <version>3.2.2</version>\n    </dependency>\n  </dependencies>\n\n\n\n# 使用 JPA\n\n为了使用 JPA 技术访问数据，我们需要定义 Entity 和 Repository\n\n定义一个 Entity：\n\n@Entity\npublic class User {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.AUTO)\n    private Long id;\n    private String firstName;\n    private String lastName;\n    private String phone;\n    private String email;\n\n    protected User() {}\n\n    public User(String firstName, String lastName, String phone, String email) {\n        this.firstName = firstName;\n        this.lastName = lastName;\n        this.phone = phone;\n        this.email = email;\n    }\n\n    // 略 getter/setter\n}\n\n\n定义一个 Repository：\n\npublic interface UserRepository extends CrudRepository<User, Long> {\n\n    List<User> findByLastName(String lastName);\n}\n\n\n\n# 使用 Web\n\n首页 Controller，将 web 请求定向到指定页面（下面的例子定向到 index.html）\n\n@Controller\npublic class IndexController {\n\n    @RequestMapping(value = {"", "/", "index"})\n    public String index() {\n        return "index";\n    }\n\n}\n\n\n此外，需要定义一个 Controller，提供后台的 API 接口\n\n@Controller\npublic class UserController {\n\n    @Autowired\n    private UserRepository customerRepository;\n\n    @RequestMapping(value = "/user", method = RequestMethod.GET)\n    public String user() {\n        return "user";\n    }\n\n    @ResponseBody\n    @RequestMapping(value = "/user/list")\n    public ResponseDTO<User> list() {\n        Iterable<User> all = customerRepository.findAll();\n        List<User> list = IteratorUtils.toList(all.iterator());\n        return new ResponseDTO<>(true, list.size(), list);\n    }\n\n    @ResponseBody\n    @RequestMapping(value = "/user/add")\n    public ResponseDTO<User> add(User user) {\n        User result = customerRepository.save(user);\n        List<User> list = new ArrayList<>();\n        list.add(result);\n        return new ResponseDTO<>(true, 1, list);\n    }\n\n    @ResponseBody\n    @RequestMapping(value = "/user/save")\n    public ResponseDTO<User> save(@RequestParam("id") Long id, User user) {\n        user.setId(id);\n        customerRepository.save(user);\n        List<User> list = new ArrayList<>();\n        list.add(user);\n        return new ResponseDTO<>(true, 1, list);\n    }\n\n    @ResponseBody\n    @RequestMapping(value = "/user/delete")\n    public ResponseDTO delete(@RequestParam("id") Long id) {\n        customerRepository.deleteById(id);\n        return new ResponseDTO<>(true, null, null);\n    }\n\n}\n\n\n\n# 使用 EasyUI\n\n接下来，我们要使用前面定义的后台接口，仅需要在 EasyUI API 中指定 url 即可。\n\n请留意下面示例中的 url 字段，和实际接口是一一对应的。\n\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Complex Layout - jQuery EasyUI Demo</title>\n    <meta charset="UTF-8" />\n    <link\n      rel="stylesheet"\n      type="text/css"\n      href="../lib/easyui/themes/bootstrap/easyui.css"\n    />\n    <link\n      rel="stylesheet"\n      type="text/css"\n      href="../lib/easyui/themes/icon.css"\n    />\n    <link\n      rel="stylesheet"\n      type="text/css"\n      href="../lib/easyui/themes/color.css"\n    />\n    <script type="text/javascript" src="../lib/easyui/jquery.min.js"><\/script>\n    <script\n      type="text/javascript"\n      src="../lib/easyui/jquery.easyui.min.js"\n    ><\/script>\n    <script\n      type="text/javascript"\n      src="../lib/easyui/locale/easyui-lang-zh_CN.js"\n    ><\/script>\n    <style type="text/css">\n      body {\n        font-family: microsoft yahei;\n      }\n    </style>\n  </head>\n  <body>\n    <div style="width:100%">\n      <h2>基本的 CRUD 应用</h2>\n      <p>数据来源于后台系统</p>\n\n      <table\n        id="dg"\n        title="Custom List"\n        class="easyui-datagrid"\n        url="/user/list"\n        toolbar="#toolbar"\n        pagination="true"\n        rownumbers="true"\n        fitColumns="true"\n        singleSelect="true"\n      >\n        <thead>\n          <tr>\n            <th field="id" width="50">ID</th>\n            <th field="firstName" width="50">First Name</th>\n            <th field="lastName" width="50">Last Name</th>\n            <th field="phone" width="50">Phone</th>\n            <th field="email" width="50">Email</th>\n          </tr>\n        </thead>\n      </table>\n      <div id="toolbar">\n        <a\n          href="javascript:void(0)"\n          class="easyui-linkbutton"\n          iconCls="icon-add"\n          plain="true"\n          onclick="newUser()"\n          >添加</a\n        >\n        <a\n          href="javascript:void(0)"\n          class="easyui-linkbutton"\n          iconCls="icon-edit"\n          plain="true"\n          onclick="editUser()"\n          >修改</a\n        >\n        <a\n          href="javascript:void(0)"\n          class="easyui-linkbutton"\n          iconCls="icon-remove"\n          plain="true"\n          onclick="destroyUser()"\n          >删除</a\n        >\n      </div>\n\n      <div\n        id="dlg"\n        class="easyui-dialog"\n        style="width:400px"\n        data-options="closed:true,modal:true,border:\'thin\',buttons:\'#dlg-buttons\'"\n      >\n        <form\n          id="fm"\n          method="post"\n          novalidate\n          style="margin:0;padding:20px 50px"\n        >\n          <h3>User Information</h3>\n          <div style="margin-bottom:10px">\n            <input\n              name="firstName"\n              class="easyui-textbox"\n              required="true"\n              label="First Name:"\n              style="width:100%"\n            />\n          </div>\n          <div style="margin-bottom:10px">\n            <input\n              name="lastName"\n              class="easyui-textbox"\n              required="true"\n              label="Last Name:"\n              style="width:100%"\n            />\n          </div>\n          <div style="margin-bottom:10px">\n            <input\n              name="phone"\n              class="easyui-textbox"\n              required="true"\n              label="Phone:"\n              style="width:100%"\n            />\n          </div>\n          <div style="margin-bottom:10px">\n            <input\n              name="email"\n              class="easyui-textbox"\n              required="true"\n              validType="email"\n              label="Email:"\n              style="width:100%"\n            />\n          </div>\n        </form>\n      </div>\n      <div id="dlg-buttons">\n        <a\n          href="javascript:void(0)"\n          class="easyui-linkbutton c6"\n          iconCls="icon-ok"\n          onclick="saveUser()"\n          style="width:90px"\n          >Save</a\n        >\n        <a\n          href="javascript:void(0)"\n          class="easyui-linkbutton"\n          iconCls="icon-cancel"\n          onclick="javascript:$(\'#dlg\').dialog(\'close\')"\n          style="width:90px"\n          >Cancel</a\n        >\n      </div>\n    </div>\n\n    <script type="text/javascript">\n      var url\n\n      function newUser() {\n        $(\'#dlg\').dialog(\'open\').dialog(\'center\').dialog(\'setTitle\', \'New User\')\n        $(\'#fm\').form(\'clear\')\n        url = \'/user/add\'\n      }\n\n      function editUser() {\n        var row = $(\'#dg\').datagrid(\'getSelected\')\n        if (row) {\n          $(\'#dlg\')\n            .dialog(\'open\')\n            .dialog(\'center\')\n            .dialog(\'setTitle\', \'Edit User\')\n          $(\'#fm\').form(\'load\', row)\n          url = \'/user/save\'\n        }\n      }\n\n      function saveUser() {\n        $(\'#fm\').form(\'submit\', {\n          url: url,\n          onSubmit: function () {\n            return $(this).form(\'validate\')\n          },\n          success: function (result) {\n            var result = eval(\'(\' + result + \')\')\n            if (result.errorMsg) {\n              $.messager.show({\n                title: \'Error\',\n                msg: result.errorMsg,\n              })\n            } else {\n              $(\'#dlg\').dialog(\'close\') // close the dialog\n              $(\'#dg\').datagrid(\'reload\') // reload the user data\n            }\n          },\n        })\n      }\n\n      function destroyUser() {\n        var row = $(\'#dg\').datagrid(\'getSelected\')\n        if (row) {\n          $.messager.confirm(\n            \'Confirm\',\n            \'Are you sure you want to destroy this user?\',\n            function (r) {\n              if (r) {\n                $.post(\n                  \'/user/delete\',\n                  { id: row.id },\n                  function (result) {\n                    if (result.success) {\n                      $(\'#dg\').datagrid(\'reload\') // reload the user data\n                    } else {\n                      $.messager.show({\n                        // show error message\n                        title: \'Error\',\n                        msg: result.errorMsg,\n                      })\n                    }\n                  },\n                  \'json\'\n                )\n              }\n            }\n          )\n        }\n      }\n    <\/script>\n  </body>\n</html>\n\n\n\n# 完整示例\n\n请参考 源码\n\n运行方式：\n\nmvn clean package -DskipTests=true\njava -jar target/\n\n\n在浏览器中访问：http://localhost:8080/\n\n\n# 引用和引申\n\n * EasyUI 官网\n * EasyUI 中文网',normalizedContent:'# springboot 之应用 easyui\n\n> easyui 是一个简单的用户界面组件的集合。由于 easyui 已经封装好大部分 ui 基本功能，能帮用户减少大量的 js 和 css 代码。所以，easyui 非常适合用于开发简单的系统或原型系统。\n> \n> 本文示例使用技术点：\n> \n>  * spring boot：主要使用了 spring-boot-starter-web、spring-boot-starter-data-jpa\n>  * easyui：按需加载，并没有引入所有的 easyui 特性\n>  * 数据库：为了测试方便，使用 h2\n\n\n\n\n# 简介\n\n\n# 什么是 easyui？\n\n * easyui 是基于 jquery、angular.、vue 和 react 的用户界面组件的集合。\n * easyui 提供了构建现代交互式 javascript 应用程序的基本功能。\n * 使用 easyui，您不需要编写许多 javascript 代码，通常通过编写一些 html 标记来定义用户界面。\n * 完整的 html5 网页框架。\n * 使用 easyui 开发你的产品时可以大量节省你的时间和规模。\n * easyui 使用非常简单但功能非常强大。\n\n\n# spring boot 整合 easyui\n\n\n# 配置\n\napplication.properties 修改：\n\nspring.mvc.view.prefix = /views/\nspring.mvc.view.suffix = .html\n\n\n\n# 引入 easyui\n\neasyui 下载地址：http://www.jeasyui.cn/download.html\n\n在 src/main/resources/static 目录下引入 easyui。\n\n然后在 html 中引用：\n\n<!doctype html>\n<html>\n  <head>\n    <meta charset="utf-8" />\n    <link\n      rel="stylesheet"\n      type="text/css"\n      href="../lib/easyui/themes/bootstrap/easyui.css"\n    />\n    <link\n      rel="stylesheet"\n      type="text/css"\n      href="../lib/easyui/themes/icon.css"\n    />\n    <link\n      rel="stylesheet"\n      type="text/css"\n      href="../lib/easyui/themes/color.css"\n    />\n    <script type="text/javascript" src="../lib/easyui/jquery.min.js"><\/script>\n    <script\n      type="text/javascript"\n      src="../lib/easyui/jquery.easyui.min.js"\n    ><\/script>\n    <script\n      type="text/javascript"\n      src="../lib/easyui/locale/easyui-lang-zh_cn.js"\n    ><\/script>\n  </head>\n  <body>\n    \x3c!-- 省略 --\x3e\n  </body>\n</html>\n\n\n引入 easyui 后，需要使用哪种组件，可以查看相关文档或 api，十分简单，此处不一一赘述。\n\n\n# 实战\n\n\n# 引入 maven 依赖\n\n  <dependencies>\n    <dependency>\n      <groupid>org.springframework.boot</groupid>\n      <artifactid>spring-boot-starter-web</artifactid>\n    </dependency>\n    <dependency>\n      <groupid>org.springframework.boot</groupid>\n      <artifactid>spring-boot-starter-data-jpa</artifactid>\n    </dependency>\n    <dependency>\n      <groupid>org.springframework.boot</groupid>\n      <artifactid>spring-boot-starter-tomcat</artifactid>\n      <scope>provided</scope>\n    </dependency>\n    <dependency>\n      <groupid>org.springframework.boot</groupid>\n      <artifactid>spring-boot-starter-test</artifactid>\n      <scope>test</scope>\n    </dependency>\n\n    <dependency>\n      <groupid>com.h2database</groupid>\n      <artifactid>h2</artifactid>\n    </dependency>\n    <dependency>\n      <groupid>org.springframework.boot</groupid>\n      <artifactid>spring-boot-devtools</artifactid>\n    </dependency>\n    <dependency>\n      <groupid>commons-collections</groupid>\n      <artifactid>commons-collections</artifactid>\n      <version>3.2.2</version>\n    </dependency>\n  </dependencies>\n\n\n\n# 使用 jpa\n\n为了使用 jpa 技术访问数据，我们需要定义 entity 和 repository\n\n定义一个 entity：\n\n@entity\npublic class user {\n\n    @id\n    @generatedvalue(strategy = generationtype.auto)\n    private long id;\n    private string firstname;\n    private string lastname;\n    private string phone;\n    private string email;\n\n    protected user() {}\n\n    public user(string firstname, string lastname, string phone, string email) {\n        this.firstname = firstname;\n        this.lastname = lastname;\n        this.phone = phone;\n        this.email = email;\n    }\n\n    // 略 getter/setter\n}\n\n\n定义一个 repository：\n\npublic interface userrepository extends crudrepository<user, long> {\n\n    list<user> findbylastname(string lastname);\n}\n\n\n\n# 使用 web\n\n首页 controller，将 web 请求定向到指定页面（下面的例子定向到 index.html）\n\n@controller\npublic class indexcontroller {\n\n    @requestmapping(value = {"", "/", "index"})\n    public string index() {\n        return "index";\n    }\n\n}\n\n\n此外，需要定义一个 controller，提供后台的 api 接口\n\n@controller\npublic class usercontroller {\n\n    @autowired\n    private userrepository customerrepository;\n\n    @requestmapping(value = "/user", method = requestmethod.get)\n    public string user() {\n        return "user";\n    }\n\n    @responsebody\n    @requestmapping(value = "/user/list")\n    public responsedto<user> list() {\n        iterable<user> all = customerrepository.findall();\n        list<user> list = iteratorutils.tolist(all.iterator());\n        return new responsedto<>(true, list.size(), list);\n    }\n\n    @responsebody\n    @requestmapping(value = "/user/add")\n    public responsedto<user> add(user user) {\n        user result = customerrepository.save(user);\n        list<user> list = new arraylist<>();\n        list.add(result);\n        return new responsedto<>(true, 1, list);\n    }\n\n    @responsebody\n    @requestmapping(value = "/user/save")\n    public responsedto<user> save(@requestparam("id") long id, user user) {\n        user.setid(id);\n        customerrepository.save(user);\n        list<user> list = new arraylist<>();\n        list.add(user);\n        return new responsedto<>(true, 1, list);\n    }\n\n    @responsebody\n    @requestmapping(value = "/user/delete")\n    public responsedto delete(@requestparam("id") long id) {\n        customerrepository.deletebyid(id);\n        return new responsedto<>(true, null, null);\n    }\n\n}\n\n\n\n# 使用 easyui\n\n接下来，我们要使用前面定义的后台接口，仅需要在 easyui api 中指定 url 即可。\n\n请留意下面示例中的 url 字段，和实际接口是一一对应的。\n\n<!doctype html>\n<html>\n  <head>\n    <title>complex layout - jquery easyui demo</title>\n    <meta charset="utf-8" />\n    <link\n      rel="stylesheet"\n      type="text/css"\n      href="../lib/easyui/themes/bootstrap/easyui.css"\n    />\n    <link\n      rel="stylesheet"\n      type="text/css"\n      href="../lib/easyui/themes/icon.css"\n    />\n    <link\n      rel="stylesheet"\n      type="text/css"\n      href="../lib/easyui/themes/color.css"\n    />\n    <script type="text/javascript" src="../lib/easyui/jquery.min.js"><\/script>\n    <script\n      type="text/javascript"\n      src="../lib/easyui/jquery.easyui.min.js"\n    ><\/script>\n    <script\n      type="text/javascript"\n      src="../lib/easyui/locale/easyui-lang-zh_cn.js"\n    ><\/script>\n    <style type="text/css">\n      body {\n        font-family: microsoft yahei;\n      }\n    </style>\n  </head>\n  <body>\n    <div style="width:100%">\n      <h2>基本的 crud 应用</h2>\n      <p>数据来源于后台系统</p>\n\n      <table\n        id="dg"\n        title="custom list"\n        class="easyui-datagrid"\n        url="/user/list"\n        toolbar="#toolbar"\n        pagination="true"\n        rownumbers="true"\n        fitcolumns="true"\n        singleselect="true"\n      >\n        <thead>\n          <tr>\n            <th field="id" width="50">id</th>\n            <th field="firstname" width="50">first name</th>\n            <th field="lastname" width="50">last name</th>\n            <th field="phone" width="50">phone</th>\n            <th field="email" width="50">email</th>\n          </tr>\n        </thead>\n      </table>\n      <div id="toolbar">\n        <a\n          href="javascript:void(0)"\n          class="easyui-linkbutton"\n          iconcls="icon-add"\n          plain="true"\n          onclick="newuser()"\n          >添加</a\n        >\n        <a\n          href="javascript:void(0)"\n          class="easyui-linkbutton"\n          iconcls="icon-edit"\n          plain="true"\n          onclick="edituser()"\n          >修改</a\n        >\n        <a\n          href="javascript:void(0)"\n          class="easyui-linkbutton"\n          iconcls="icon-remove"\n          plain="true"\n          onclick="destroyuser()"\n          >删除</a\n        >\n      </div>\n\n      <div\n        id="dlg"\n        class="easyui-dialog"\n        style="width:400px"\n        data-options="closed:true,modal:true,border:\'thin\',buttons:\'#dlg-buttons\'"\n      >\n        <form\n          id="fm"\n          method="post"\n          novalidate\n          style="margin:0;padding:20px 50px"\n        >\n          <h3>user information</h3>\n          <div style="margin-bottom:10px">\n            <input\n              name="firstname"\n              class="easyui-textbox"\n              required="true"\n              label="first name:"\n              style="width:100%"\n            />\n          </div>\n          <div style="margin-bottom:10px">\n            <input\n              name="lastname"\n              class="easyui-textbox"\n              required="true"\n              label="last name:"\n              style="width:100%"\n            />\n          </div>\n          <div style="margin-bottom:10px">\n            <input\n              name="phone"\n              class="easyui-textbox"\n              required="true"\n              label="phone:"\n              style="width:100%"\n            />\n          </div>\n          <div style="margin-bottom:10px">\n            <input\n              name="email"\n              class="easyui-textbox"\n              required="true"\n              validtype="email"\n              label="email:"\n              style="width:100%"\n            />\n          </div>\n        </form>\n      </div>\n      <div id="dlg-buttons">\n        <a\n          href="javascript:void(0)"\n          class="easyui-linkbutton c6"\n          iconcls="icon-ok"\n          onclick="saveuser()"\n          style="width:90px"\n          >save</a\n        >\n        <a\n          href="javascript:void(0)"\n          class="easyui-linkbutton"\n          iconcls="icon-cancel"\n          onclick="javascript:$(\'#dlg\').dialog(\'close\')"\n          style="width:90px"\n          >cancel</a\n        >\n      </div>\n    </div>\n\n    <script type="text/javascript">\n      var url\n\n      function newuser() {\n        $(\'#dlg\').dialog(\'open\').dialog(\'center\').dialog(\'settitle\', \'new user\')\n        $(\'#fm\').form(\'clear\')\n        url = \'/user/add\'\n      }\n\n      function edituser() {\n        var row = $(\'#dg\').datagrid(\'getselected\')\n        if (row) {\n          $(\'#dlg\')\n            .dialog(\'open\')\n            .dialog(\'center\')\n            .dialog(\'settitle\', \'edit user\')\n          $(\'#fm\').form(\'load\', row)\n          url = \'/user/save\'\n        }\n      }\n\n      function saveuser() {\n        $(\'#fm\').form(\'submit\', {\n          url: url,\n          onsubmit: function () {\n            return $(this).form(\'validate\')\n          },\n          success: function (result) {\n            var result = eval(\'(\' + result + \')\')\n            if (result.errormsg) {\n              $.messager.show({\n                title: \'error\',\n                msg: result.errormsg,\n              })\n            } else {\n              $(\'#dlg\').dialog(\'close\') // close the dialog\n              $(\'#dg\').datagrid(\'reload\') // reload the user data\n            }\n          },\n        })\n      }\n\n      function destroyuser() {\n        var row = $(\'#dg\').datagrid(\'getselected\')\n        if (row) {\n          $.messager.confirm(\n            \'confirm\',\n            \'are you sure you want to destroy this user?\',\n            function (r) {\n              if (r) {\n                $.post(\n                  \'/user/delete\',\n                  { id: row.id },\n                  function (result) {\n                    if (result.success) {\n                      $(\'#dg\').datagrid(\'reload\') // reload the user data\n                    } else {\n                      $.messager.show({\n                        // show error message\n                        title: \'error\',\n                        msg: result.errormsg,\n                      })\n                    }\n                  },\n                  \'json\'\n                )\n              }\n            }\n          )\n        }\n      }\n    <\/script>\n  </body>\n</html>\n\n\n\n# 完整示例\n\n请参考 源码\n\n运行方式：\n\nmvn clean package -dskiptests=true\njava -jar target/\n\n\n在浏览器中访问：http://localhost:8080/\n\n\n# 引用和引申\n\n * easyui 官网\n * easyui 中文网',charsets:{cjk:!0},lastUpdated:"2022/06/14, 07:03:20",lastUpdatedTimestamp:16551614e5},{title:"SpringBoot 之 JDBC",frontmatter:{title:"SpringBoot 之 JDBC",date:"2019-02-18T14:33:55.000Z",categories:["Java","框架","SpringBoot","SpringBoot数据"],tags:["Java","框架","Spring","SpringBoot","JDBC"],permalink:"/pages/cf19fd/"},regularPath:"/10.Java/13.%E6%A1%86%E6%9E%B6/02.SpringBoot/03.SpringBoot%E6%95%B0%E6%8D%AE/01.SpringBoot%E4%B9%8BJDBC.html",relativePath:"10.Java/13.框架/02.SpringBoot/03.SpringBoot数据/01.SpringBoot之JDBC.md",key:"v-4cb6918a",path:"/pages/cf19fd/",headers:[{level:2,title:"简介",slug:"简介",normalizedTitle:"简介",charIndex:24},{level:2,title:"API",slug:"api",normalizedTitle:"api",charIndex:377},{level:3,title:"execute",slug:"execute",normalizedTitle:"execute",charIndex:653},{level:3,title:"update",slug:"update",normalizedTitle:"update",charIndex:698},{level:3,title:"query",slug:"query",normalizedTitle:"query",charIndex:779},{level:2,title:"实战",slug:"实战",normalizedTitle:"实战",charIndex:3180},{level:3,title:"配置数据源",slug:"配置数据源",normalizedTitle:"配置数据源",charIndex:3187},{level:3,title:"注入 JdbcTemplate",slug:"注入-jdbctemplate",normalizedTitle:"注入 jdbctemplate",charIndex:3571},{level:3,title:"完整示例",slug:"完整示例",normalizedTitle:"完整示例",charIndex:3818},{level:2,title:"引申和引用",slug:"引申和引用",normalizedTitle:"引申和引用",charIndex:3835}],headersStr:"简介 API execute update query 实战 配置数据源 注入 JdbcTemplate 完整示例 引申和引用",content:'# SpringBoot 之 JDBC\n\n\n# 简介\n\nSpring Data 包含对 JDBC 的存储库支持，并将自动为 CrudRepository 上的方法生成 SQL。对于更高级的查询，提供了 @Query 注解。\n\n当 classpath 上存在必要的依赖项时，Spring Boot 将自动配置 Spring Data 的 JDBC 存储库。它们可以通过 spring-boot-starter-data-jdbc 的单一依赖项添加到项目中。如有必要，可以通过将 @EnableJdbcRepositories 批注或 JdbcConfiguration 子类添加到应用程序来控制 Spring Data JDBC 的配置。\n\n> 更多 Spring Data JDBC 细节，可以参考 Spring Data JDBC 官方文档。\n\n\n# API\n\nspring-boot-starter-data-jdbc 引入了 spring-jdbc ，其 JDBC 特性就是基于 spring-jdbc。\n\n而 spring-jdbc 最核心的 API 无疑就是 JdbcTemplate，可以说所有的 JDBC 数据访问，几乎都是围绕着这个类去工作的。\n\nSpring 对数据库的操作在 Jdbc 层面做了深层次的封装，利用依赖注入，把数据源配置装配到 JdbcTemplate 中，再由 JdbcTemplate 负责具体的数据访问。\n\nJdbcTemplate 主要提供以下几类方法：\n\n * execute 方法：可以用于执行任何 SQL 语句，一般用于执行 DDL 语句；\n * update 方法及 batchUpdate 方法：update 方法用于执行新增、修改、删除等语句；batchUpdate 方法用于执行批处理相关语句；\n * query 方法及 queryForXXX 方法：用于执行查询相关语句；\n * call 方法：用于执行存储过程、函数相关语句。\n\n为了方便演示，以下增删改查操作都围绕一个名为 user 的表（该表的主键 id 是自增序列）进行，该表的数据实体如下：\n\npublic class User {\n    private Integer id;\n    private String name;\n    private Integer age;\n\n    // 省略 getter/setter\n}\n\n\n数据实体只要是一个纯粹的 Java Bean 即可，无需任何注解修饰。\n\n\n# execute\n\n使用 execute 执行 DDL 语句，创建一个名为 test 的数据库，并在此数据库下新建一个名为 user 的表。\n\npublic void recreateTable() {\n    jdbcTemplate.execute("DROP DATABASE IF EXISTS test");\n    jdbcTemplate.execute("CREATE DATABASE test");\n    jdbcTemplate.execute("USE test");\n    jdbcTemplate.execute("DROP TABLE if EXISTS user");\n    jdbcTemplate.execute("DROP TABLE if EXISTS user");\n    // @formatter:off\n    StringBuilder sb = new StringBuilder();\n    sb.append("CREATE TABLE user (id int (10) unsigned NOT NULL AUTO_INCREMENT,\\n")\n        .append("name varchar (64) NOT NULL DEFAULT \'\',\\n")\n        .append("age tinyint (3) NOT NULL DEFAULT 0,\\n")\n        .append("PRIMARY KEY (ID));\\n");\n    // @formatter:on\n    jdbcTemplate.execute(sb.toString());\n}\n\n\n\n# update\n\n新增数据\n\npublic void insert(String name, Integer age) {\n    jdbcTemplate.update("INSERT INTO user(name, age) VALUES(?, ?)", name, age);\n}\n\n\n删除数据\n\npublic void delete(String name) {\n    jdbcTemplate.update("DELETE FROM user WHERE name = ?", name);\n}\n\n\n修改数据\n\npublic void update(User user) {\n    jdbcTemplate.update("UPDATE USER SET name=?, age=? WHERE id=?", user.getName(), user.getAge(), user.getId());\n}\n\n\n批处理\n\npublic void batchInsert(List<User> users) {\n    String sql = "INSERT INTO user(name, age) VALUES(?, ?)";\n\n    List<Object[]> params = new ArrayList<>();\n\n    users.forEach(item -> {\n        params.add(new Object[] {item.getName(), item.getAge()});\n    });\n    jdbcTemplate.batchUpdate(sql, params);\n}\n\n\n\n# query\n\n查单个对象\n\npublic User queryByName(String name) {\n    try {\n        return jdbcTemplate\n            .queryForObject("SELECT * FROM user WHERE name = ?", new BeanPropertyRowMapper<>(User.class), name);\n    } catch (EmptyResultDataAccessException e) {\n        return null;\n    }\n}\n\n\n查多个对象\n\npublic List<User> list() {\n    return jdbcTemplate.query("select * from USER", new BeanPropertyRowMapper(User.class));\n}\n\n\n获取某个记录某列或者 count、avg、sum 等函数返回唯一值\n\npublic Integer count() {\n    try {\n        return jdbcTemplate.queryForObject("SELECT COUNT(*) FROM user", Integer.class);\n    } catch (EmptyResultDataAccessException e) {\n        return null;\n    }\n}\n\n\n\n# 实战\n\n\n# 配置数据源\n\n在 src/main/resource 目录下添加 application.properties 配置文件，内容如下：\n\nspring.datasource.url = jdbc:mysql://localhost:3306/spring_boot_tutorial?serverTimezone=UTC&useUnicode=true&characterEncoding=utf8&useSSL=false\nspring.datasource.username = root\nspring.datasource.password = root\nspring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver\n\n\n需要根据实际情况，替换 url、username、password。\n\n\n# 注入 JdbcTemplate\n\n@Service\npublic class UserDAOImpl implements UserDAO {\n\n    private JdbcTemplate jdbcTemplate;\n\n    @Autowired\n    public UserDAOImpl(JdbcTemplate jdbcTemplate) {\n        this.jdbcTemplate = jdbcTemplate;\n    }\n\n    // ...\n}\n\n\n\n# 完整示例\n\n请参考：源码\n\n\n# 引申和引用\n\n引申\n\n * Spring Boot 教程\n\n参考\n\n * Spring Boot 官方文档之 boot-features-data-jdbc',normalizedContent:'# springboot 之 jdbc\n\n\n# 简介\n\nspring data 包含对 jdbc 的存储库支持，并将自动为 crudrepository 上的方法生成 sql。对于更高级的查询，提供了 @query 注解。\n\n当 classpath 上存在必要的依赖项时，spring boot 将自动配置 spring data 的 jdbc 存储库。它们可以通过 spring-boot-starter-data-jdbc 的单一依赖项添加到项目中。如有必要，可以通过将 @enablejdbcrepositories 批注或 jdbcconfiguration 子类添加到应用程序来控制 spring data jdbc 的配置。\n\n> 更多 spring data jdbc 细节，可以参考 spring data jdbc 官方文档。\n\n\n# api\n\nspring-boot-starter-data-jdbc 引入了 spring-jdbc ，其 jdbc 特性就是基于 spring-jdbc。\n\n而 spring-jdbc 最核心的 api 无疑就是 jdbctemplate，可以说所有的 jdbc 数据访问，几乎都是围绕着这个类去工作的。\n\nspring 对数据库的操作在 jdbc 层面做了深层次的封装，利用依赖注入，把数据源配置装配到 jdbctemplate 中，再由 jdbctemplate 负责具体的数据访问。\n\njdbctemplate 主要提供以下几类方法：\n\n * execute 方法：可以用于执行任何 sql 语句，一般用于执行 ddl 语句；\n * update 方法及 batchupdate 方法：update 方法用于执行新增、修改、删除等语句；batchupdate 方法用于执行批处理相关语句；\n * query 方法及 queryforxxx 方法：用于执行查询相关语句；\n * call 方法：用于执行存储过程、函数相关语句。\n\n为了方便演示，以下增删改查操作都围绕一个名为 user 的表（该表的主键 id 是自增序列）进行，该表的数据实体如下：\n\npublic class user {\n    private integer id;\n    private string name;\n    private integer age;\n\n    // 省略 getter/setter\n}\n\n\n数据实体只要是一个纯粹的 java bean 即可，无需任何注解修饰。\n\n\n# execute\n\n使用 execute 执行 ddl 语句，创建一个名为 test 的数据库，并在此数据库下新建一个名为 user 的表。\n\npublic void recreatetable() {\n    jdbctemplate.execute("drop database if exists test");\n    jdbctemplate.execute("create database test");\n    jdbctemplate.execute("use test");\n    jdbctemplate.execute("drop table if exists user");\n    jdbctemplate.execute("drop table if exists user");\n    // @formatter:off\n    stringbuilder sb = new stringbuilder();\n    sb.append("create table user (id int (10) unsigned not null auto_increment,\\n")\n        .append("name varchar (64) not null default \'\',\\n")\n        .append("age tinyint (3) not null default 0,\\n")\n        .append("primary key (id));\\n");\n    // @formatter:on\n    jdbctemplate.execute(sb.tostring());\n}\n\n\n\n# update\n\n新增数据\n\npublic void insert(string name, integer age) {\n    jdbctemplate.update("insert into user(name, age) values(?, ?)", name, age);\n}\n\n\n删除数据\n\npublic void delete(string name) {\n    jdbctemplate.update("delete from user where name = ?", name);\n}\n\n\n修改数据\n\npublic void update(user user) {\n    jdbctemplate.update("update user set name=?, age=? where id=?", user.getname(), user.getage(), user.getid());\n}\n\n\n批处理\n\npublic void batchinsert(list<user> users) {\n    string sql = "insert into user(name, age) values(?, ?)";\n\n    list<object[]> params = new arraylist<>();\n\n    users.foreach(item -> {\n        params.add(new object[] {item.getname(), item.getage()});\n    });\n    jdbctemplate.batchupdate(sql, params);\n}\n\n\n\n# query\n\n查单个对象\n\npublic user querybyname(string name) {\n    try {\n        return jdbctemplate\n            .queryforobject("select * from user where name = ?", new beanpropertyrowmapper<>(user.class), name);\n    } catch (emptyresultdataaccessexception e) {\n        return null;\n    }\n}\n\n\n查多个对象\n\npublic list<user> list() {\n    return jdbctemplate.query("select * from user", new beanpropertyrowmapper(user.class));\n}\n\n\n获取某个记录某列或者 count、avg、sum 等函数返回唯一值\n\npublic integer count() {\n    try {\n        return jdbctemplate.queryforobject("select count(*) from user", integer.class);\n    } catch (emptyresultdataaccessexception e) {\n        return null;\n    }\n}\n\n\n\n# 实战\n\n\n# 配置数据源\n\n在 src/main/resource 目录下添加 application.properties 配置文件，内容如下：\n\nspring.datasource.url = jdbc:mysql://localhost:3306/spring_boot_tutorial?servertimezone=utc&useunicode=true&characterencoding=utf8&usessl=false\nspring.datasource.username = root\nspring.datasource.password = root\nspring.datasource.driver-class-name = com.mysql.cj.jdbc.driver\n\n\n需要根据实际情况，替换 url、username、password。\n\n\n# 注入 jdbctemplate\n\n@service\npublic class userdaoimpl implements userdao {\n\n    private jdbctemplate jdbctemplate;\n\n    @autowired\n    public userdaoimpl(jdbctemplate jdbctemplate) {\n        this.jdbctemplate = jdbctemplate;\n    }\n\n    // ...\n}\n\n\n\n# 完整示例\n\n请参考：源码\n\n\n# 引申和引用\n\n引申\n\n * spring boot 教程\n\n参考\n\n * spring boot 官方文档之 boot-features-data-jdbc',charsets:{cjk:!0},lastUpdated:"2022/06/14, 07:03:20",lastUpdatedTimestamp:16551614e5},{title:"SpringBoot 之集成 MyBatis",frontmatter:{title:"SpringBoot 之集成 MyBatis",date:"2019-05-09T17:09:25.000Z",categories:["Java","框架","SpringBoot","SpringBoot数据"],tags:["Java","框架","Spring","SpringBoot","MyBatis","PageHelper","Mapper"],permalink:"/pages/88219e/"},regularPath:"/10.Java/13.%E6%A1%86%E6%9E%B6/02.SpringBoot/03.SpringBoot%E6%95%B0%E6%8D%AE/11.SpringBoot%E4%B9%8BMybatis.html",relativePath:"10.Java/13.框架/02.SpringBoot/03.SpringBoot数据/11.SpringBoot之Mybatis.md",key:"v-8358fd22",path:"/pages/88219e/",headers:[{level:2,title:"新书《MyBatis 从入门到精通》",slug:"新书《mybatis-从入门到精通》",normalizedTitle:"新书《mybatis 从入门到精通》",charIndex:182},{level:2,title:"项目依赖",slug:"项目依赖",normalizedTitle:"项目依赖",charIndex:334},{level:2,title:"Spring DevTools 配置",slug:"spring-devtools-配置",normalizedTitle:"spring devtools 配置",charIndex:859},{level:2,title:"集成 MyBatis Generator",slug:"集成-mybatis-generator",normalizedTitle:"集成 mybatis generator",charIndex:1372},{level:2,title:"application.properties 配置",slug:"application-properties-配置",normalizedTitle:"application.properties 配置",charIndex:1541},{level:2,title:"application.yml 配置",slug:"application-yml-配置",normalizedTitle:"application.yml 配置",charIndex:1955},{level:2,title:"SSM 集成的基础项目",slug:"ssm-集成的基础项目",normalizedTitle:"ssm 集成的基础项目",charIndex:2510},{level:2,title:"MyBatis 工具 http://www.mybatis.tk",slug:"mybatis-工具-http-www-mybatis-tk",normalizedTitle:"mybatis 工具 http://www.mybatis.tk",charIndex:2571},{level:2,title:"作者信息",slug:"作者信息",normalizedTitle:"作者信息",charIndex:2751}],headersStr:"新书《MyBatis 从入门到精通》 项目依赖 Spring DevTools 配置 集成 MyBatis Generator application.properties 配置 application.yml 配置 SSM 集成的基础项目 MyBatis 工具 http://www.mybatis.tk 作者信息",content:"# SpringBoot 之集成 MyBatis, 分页插件 PageHelper, 通用 Mapper\n\n * Spring Boot 1.5.1.RELEASE\n * mybatis-spring-boot-starter\n * mapper-spring-boot-starter\n * pagehelper-spring-boot-starter\n\n\n# 新书《MyBatis 从入门到精通》\n\n\n\n预售地址：京东，当当，亚马逊\n\nCSDN 博客：http://blog.csdn.net/isea533/article/details/73555400\n\nGitHub 项目：https://github.com/mybatis-book/book\n\n\n# 项目依赖\n\n\x3c!--mybatis--\x3e\n<dependency>\n    <groupId>org.mybatis.spring.boot</groupId>\n    <artifactId>mybatis-spring-boot-starter</artifactId>\n    <version>1.3.1</version>\n</dependency>\n\x3c!--mapper--\x3e\n<dependency>\n    <groupId>tk.mybatis</groupId>\n    <artifactId>mapper-spring-boot-starter</artifactId>\n    <version>1.2.4</version>\n</dependency>\n\x3c!--pagehelper--\x3e\n<dependency>\n    <groupId>com.github.pagehelper</groupId>\n    <artifactId>pagehelper-spring-boot-starter</artifactId>\n    <version>1.2.3</version>\n</dependency>\n\n\n\n# Spring DevTools 配置\n\n感谢emf1002提供的解决方案。\n\n在使用 DevTools 时，通用 Mapper 经常会出现 class x.x.A cannot be cast to x.x.A。\n\n同一个类如果使用了不同的类加载器，就会产生这样的错误，所以解决方案就是让通用 Mapper 和实体类使用相同的类加载器即可。\n\nDevTools 默认会对 IDE 中引入的所有项目使用 restart 类加载器，对于引入的 jar 包使用 base 类加载器，因此只要保证通用 Mapper 的 jar 包使用 restart 类加载器即可。\n\n在 src/main/resources 中创建 META-INF 目录，在此目录下添加 spring-devtools.properties 配置，内容如下：\n\nrestart.include.mapper=/mapper-[\\\\w-\\\\.]+jar\nrestart.include.pagehelper=/pagehelper-[\\\\w-\\\\.]+jar\n\n\n使用这个配置后，就会使用 restart 类加载加载 include 进去的 jar 包。\n\n\n# 集成 MyBatis Generator\n\n通过 Maven 插件集成的，所以运行插件使用下面的命令：\n\n> mvn mybatis-generator:generate\n\nMybatis Geneator 详解:\n\n> http://blog.csdn.net/isea533/article/details/42102297\n\n\n# application.properties 配置\n\n#mybatis\nmybatis.type-aliases-package=tk.mybatis.springboot.model\nmybatis.mapper-locations=classpath:mapper/*.xml\n\n#mapper\n#mappers 多个接口时逗号隔开\nmapper.mappers=tk.mybatis.springboot.util.MyMapper\nmapper.not-empty=false\nmapper.identity=MYSQL\n\n#pagehelper\npagehelper.helperDialect=mysql\npagehelper.reasonable=true\npagehelper.supportMethodsArguments=true\npagehelper.params=count=countSql\n\n\n\n# application.yml 配置\n\n完整配置可以参考 src/main/resources/application-old.yml ，和 MyBatis 相关的部分配置如下：\n\nmybatis:\n  type-aliases-package: tk.mybatis.springboot.model\n  mapper-locations: classpath:mapper/*.xml\n\nmapper:\n  mappers:\n    - tk.mybatis.springboot.util.MyMapper\n  not-empty: false\n  identity: MYSQL\n\npagehelper:\n  helperDialect: mysql\n  reasonable: true\n  supportMethodsArguments: true\n  params: count=countSql\n\n\n注意 mapper 配置，因为参数名固定，所以接收参数使用的对象，按照 Spring Boot 配置规则，大写字母都变了带横线的小写字母。针对如 IDENTITY（对应 i-d-e-n-t-i-t-y）提供了全小写的 identity 配置，如果 IDE 能自动提示，看自动提示即可。\n\n\n# SSM 集成的基础项目\n\n> https://github.com/abel533/Mybatis-Spring\n\n\n# MyBatis 工具 http://www.mybatis.tk\n\n * 推荐使用 Mybatis 通用 Mapper3 https://github.com/abel533/Mapper\n * 推荐使用 Mybatis 分页插件 PageHelper https://github.com/pagehelper/Mybatis-PageHelper\n\n\n# 作者信息\n\n * 作者博客：http://blog.csdn.net/isea533\n * 作者邮箱：abel533@gmail.com\n * 如需加群，请通过 http://mybatis.tk 首页按钮加群。",normalizedContent:"# springboot 之集成 mybatis, 分页插件 pagehelper, 通用 mapper\n\n * spring boot 1.5.1.release\n * mybatis-spring-boot-starter\n * mapper-spring-boot-starter\n * pagehelper-spring-boot-starter\n\n\n# 新书《mybatis 从入门到精通》\n\n\n\n预售地址：京东，当当，亚马逊\n\ncsdn 博客：http://blog.csdn.net/isea533/article/details/73555400\n\ngithub 项目：https://github.com/mybatis-book/book\n\n\n# 项目依赖\n\n\x3c!--mybatis--\x3e\n<dependency>\n    <groupid>org.mybatis.spring.boot</groupid>\n    <artifactid>mybatis-spring-boot-starter</artifactid>\n    <version>1.3.1</version>\n</dependency>\n\x3c!--mapper--\x3e\n<dependency>\n    <groupid>tk.mybatis</groupid>\n    <artifactid>mapper-spring-boot-starter</artifactid>\n    <version>1.2.4</version>\n</dependency>\n\x3c!--pagehelper--\x3e\n<dependency>\n    <groupid>com.github.pagehelper</groupid>\n    <artifactid>pagehelper-spring-boot-starter</artifactid>\n    <version>1.2.3</version>\n</dependency>\n\n\n\n# spring devtools 配置\n\n感谢emf1002提供的解决方案。\n\n在使用 devtools 时，通用 mapper 经常会出现 class x.x.a cannot be cast to x.x.a。\n\n同一个类如果使用了不同的类加载器，就会产生这样的错误，所以解决方案就是让通用 mapper 和实体类使用相同的类加载器即可。\n\ndevtools 默认会对 ide 中引入的所有项目使用 restart 类加载器，对于引入的 jar 包使用 base 类加载器，因此只要保证通用 mapper 的 jar 包使用 restart 类加载器即可。\n\n在 src/main/resources 中创建 meta-inf 目录，在此目录下添加 spring-devtools.properties 配置，内容如下：\n\nrestart.include.mapper=/mapper-[\\\\w-\\\\.]+jar\nrestart.include.pagehelper=/pagehelper-[\\\\w-\\\\.]+jar\n\n\n使用这个配置后，就会使用 restart 类加载加载 include 进去的 jar 包。\n\n\n# 集成 mybatis generator\n\n通过 maven 插件集成的，所以运行插件使用下面的命令：\n\n> mvn mybatis-generator:generate\n\nmybatis geneator 详解:\n\n> http://blog.csdn.net/isea533/article/details/42102297\n\n\n# application.properties 配置\n\n#mybatis\nmybatis.type-aliases-package=tk.mybatis.springboot.model\nmybatis.mapper-locations=classpath:mapper/*.xml\n\n#mapper\n#mappers 多个接口时逗号隔开\nmapper.mappers=tk.mybatis.springboot.util.mymapper\nmapper.not-empty=false\nmapper.identity=mysql\n\n#pagehelper\npagehelper.helperdialect=mysql\npagehelper.reasonable=true\npagehelper.supportmethodsarguments=true\npagehelper.params=count=countsql\n\n\n\n# application.yml 配置\n\n完整配置可以参考 src/main/resources/application-old.yml ，和 mybatis 相关的部分配置如下：\n\nmybatis:\n  type-aliases-package: tk.mybatis.springboot.model\n  mapper-locations: classpath:mapper/*.xml\n\nmapper:\n  mappers:\n    - tk.mybatis.springboot.util.mymapper\n  not-empty: false\n  identity: mysql\n\npagehelper:\n  helperdialect: mysql\n  reasonable: true\n  supportmethodsarguments: true\n  params: count=countsql\n\n\n注意 mapper 配置，因为参数名固定，所以接收参数使用的对象，按照 spring boot 配置规则，大写字母都变了带横线的小写字母。针对如 identity（对应 i-d-e-n-t-i-t-y）提供了全小写的 identity 配置，如果 ide 能自动提示，看自动提示即可。\n\n\n# ssm 集成的基础项目\n\n> https://github.com/abel533/mybatis-spring\n\n\n# mybatis 工具 http://www.mybatis.tk\n\n * 推荐使用 mybatis 通用 mapper3 https://github.com/abel533/mapper\n * 推荐使用 mybatis 分页插件 pagehelper https://github.com/pagehelper/mybatis-pagehelper\n\n\n# 作者信息\n\n * 作者博客：http://blog.csdn.net/isea533\n * 作者邮箱：abel533@gmail.com\n * 如需加群，请通过 http://mybatis.tk 首页按钮加群。",charsets:{cjk:!0},lastUpdated:"2022/06/14, 07:03:20",lastUpdatedTimestamp:16551614e5},{title:"SpringBoot 之集成 Elasticsearch",frontmatter:{title:"SpringBoot 之集成 Elasticsearch",date:"2018-12-25T14:06:36.000Z",categories:["Java","框架","SpringBoot","SpringBoot数据"],tags:["Java","框架","Spring","SpringBoot","Elasticsearch"],permalink:"/pages/fac14c/"},regularPath:"/10.Java/13.%E6%A1%86%E6%9E%B6/02.SpringBoot/03.SpringBoot%E6%95%B0%E6%8D%AE/22.SpringBoot%E4%B9%8BElasticsearch.html",relativePath:"10.Java/13.框架/02.SpringBoot/03.SpringBoot数据/22.SpringBoot之Elasticsearch.md",key:"v-6db498ef",path:"/pages/fac14c/",headers:[{level:2,title:"简介",slug:"简介",normalizedTitle:"简介",charIndex:35},{level:3,title:"通过 REST 客户端连接 Elasticsearch",slug:"通过-rest-客户端连接-elasticsearch",normalizedTitle:"通过 rest 客户端连接 elasticsearch",charIndex:77},{level:3,title:"通过 Jest 连接 Elasticsearch",slug:"通过-jest-连接-elasticsearch",normalizedTitle:"通过 jest 连接 elasticsearch",charIndex:665},{level:3,title:"通过 Spring Data 访问 Elasticsearch",slug:"通过-spring-data-访问-elasticsearch",normalizedTitle:"通过 spring data 访问 elasticsearch",charIndex:1326},{level:3,title:"Elasticsearch Repositories",slug:"elasticsearch-repositories",normalizedTitle:"elasticsearch repositories",charIndex:1857},{level:2,title:"源码",slug:"源码",normalizedTitle:"源码",charIndex:2018},{level:2,title:"引申和引用",slug:"引申和引用",normalizedTitle:"引申和引用",charIndex:2116}],headersStr:"简介 通过 REST 客户端连接 Elasticsearch 通过 Jest 连接 Elasticsearch 通过 Spring Data 访问 Elasticsearch Elasticsearch Repositories 源码 引申和引用",content:"# SpringBoot 之集成 Elasticsearch\n\n\n# 简介\n\nElasticsearch 是一个开源的、分布式的搜索和分析引擎。\n\n\n# 通过 REST 客户端连接 Elasticsearch\n\n如果在 classpath 路径下存在 org.elasticsearch.client:elasticsearch-rest-client jar 包，Spring Boot 会自动配置并注册一个 RestClient Bean，它的默认访问路径为：localhost:9200。\n\n你可以使用如下方式进行定制：\n\nspring.elasticsearch.rest.uris=http://search.example.com:9200\nspring.elasticsearch.rest.username=user\nspring.elasticsearch.rest.password=secret\n\n\n您还可以注册实现任意数量的 RestClientBuilderCustomizer bean，以进行更高级的定制。要完全控制注册，请定义 RestClient bean。\n\n如果 classpath 路径有 org.elasticsearch.client：elasticsearch-rest-high-level-client jar 包，Spring Boot 将自动配置一个 RestHighLevelClient，它包装任何现有的 RestClient bean，重用其 HTTP 配置。\n\n\n# 通过 Jest 连接 Elasticsearch\n\n如果 classpath 上有 Jest，你可以注入一个自动配置的 JestClient，默认情况下是 localhost:9200。您可以进一步调整客户端的配置方式，如以下示例所示：\n\nspring.elasticsearch.jest.uris=http://search.example.com:9200\nspring.elasticsearch.jest.read-timeout=10000\nspring.elasticsearch.jest.username=user\nspring.elasticsearch.jest.password=secret\n\n\n您还可以注册实现任意数量的 HttpClientConfigBuilderCustomizer bean，以进行更高级的定制。以下示例调整为其他 HTTP 设置：\n\nstatic class HttpSettingsCustomizer implements HttpClientConfigBuilderCustomizer {\n\n\t@Override\n\tpublic void customize(HttpClientConfig.Builder builder) {\n\t\tbuilder.maxTotalConnection(100).defaultMaxTotalConnectionPerRoute(5);\n\t}\n\n}\n\n\n要完全控制注册，请定义 JestClient bean。\n\n\n# 通过 Spring Data 访问 Elasticsearch\n\n要连接到 Elasticsearch，您必须提供一个或多个集群节点的地址。可以通过将 spring.data.elasticsearch.cluster-nodes 属性设置为以逗号分隔的 host:port 列表来指定地址。使用此配置，可以像任何其他 Spring bean 一样注入 ElasticsearchTemplate 或 TransportClient，如以下示例所示：\n\nspring.data.elasticsearch.cluster-nodes=localhost:9300\n@Component\npublic class MyBean {\n\n\tprivate final ElasticsearchTemplate template;\n\n\tpublic MyBean(ElasticsearchTemplate template) {\n\t\tthis.template = template;\n\t}\n\n\t// ...\n\n}\n\n\n如果你添加了自定义的 ElasticsearchTemplate 或 TransportClient @Bean ，就会替换默认的配置。\n\n\n# Elasticsearch Repositories\n\nSpring Data 包含对 Elasticsearch 的 repository 支持。基本原则是根据方法名称自动为您构建查询。\n\n事实上，Spring Data JPA 和 Spring Data Elasticsearch 共享相同的通用基础架构。\n\n\n# 源码\n\n完整示例：源码\n\n使用方法：\n\nmvn clean package\ncd target\njava -jar spring-boot-data-elasticsearch.jar\n\n\n\n# 引申和引用\n\n引申\n\n * Spring Boot 教程\n\n参考\n\n * Spring Boot 官方文档之 boot-features-elasticsearch\n * Spring Data Elasticsearch Github\n * Spring Data Elasticsearch 官方文档",normalizedContent:"# springboot 之集成 elasticsearch\n\n\n# 简介\n\nelasticsearch 是一个开源的、分布式的搜索和分析引擎。\n\n\n# 通过 rest 客户端连接 elasticsearch\n\n如果在 classpath 路径下存在 org.elasticsearch.client:elasticsearch-rest-client jar 包，spring boot 会自动配置并注册一个 restclient bean，它的默认访问路径为：localhost:9200。\n\n你可以使用如下方式进行定制：\n\nspring.elasticsearch.rest.uris=http://search.example.com:9200\nspring.elasticsearch.rest.username=user\nspring.elasticsearch.rest.password=secret\n\n\n您还可以注册实现任意数量的 restclientbuildercustomizer bean，以进行更高级的定制。要完全控制注册，请定义 restclient bean。\n\n如果 classpath 路径有 org.elasticsearch.client：elasticsearch-rest-high-level-client jar 包，spring boot 将自动配置一个 resthighlevelclient，它包装任何现有的 restclient bean，重用其 http 配置。\n\n\n# 通过 jest 连接 elasticsearch\n\n如果 classpath 上有 jest，你可以注入一个自动配置的 jestclient，默认情况下是 localhost:9200。您可以进一步调整客户端的配置方式，如以下示例所示：\n\nspring.elasticsearch.jest.uris=http://search.example.com:9200\nspring.elasticsearch.jest.read-timeout=10000\nspring.elasticsearch.jest.username=user\nspring.elasticsearch.jest.password=secret\n\n\n您还可以注册实现任意数量的 httpclientconfigbuildercustomizer bean，以进行更高级的定制。以下示例调整为其他 http 设置：\n\nstatic class httpsettingscustomizer implements httpclientconfigbuildercustomizer {\n\n\t@override\n\tpublic void customize(httpclientconfig.builder builder) {\n\t\tbuilder.maxtotalconnection(100).defaultmaxtotalconnectionperroute(5);\n\t}\n\n}\n\n\n要完全控制注册，请定义 jestclient bean。\n\n\n# 通过 spring data 访问 elasticsearch\n\n要连接到 elasticsearch，您必须提供一个或多个集群节点的地址。可以通过将 spring.data.elasticsearch.cluster-nodes 属性设置为以逗号分隔的 host:port 列表来指定地址。使用此配置，可以像任何其他 spring bean 一样注入 elasticsearchtemplate 或 transportclient，如以下示例所示：\n\nspring.data.elasticsearch.cluster-nodes=localhost:9300\n@component\npublic class mybean {\n\n\tprivate final elasticsearchtemplate template;\n\n\tpublic mybean(elasticsearchtemplate template) {\n\t\tthis.template = template;\n\t}\n\n\t// ...\n\n}\n\n\n如果你添加了自定义的 elasticsearchtemplate 或 transportclient @bean ，就会替换默认的配置。\n\n\n# elasticsearch repositories\n\nspring data 包含对 elasticsearch 的 repository 支持。基本原则是根据方法名称自动为您构建查询。\n\n事实上，spring data jpa 和 spring data elasticsearch 共享相同的通用基础架构。\n\n\n# 源码\n\n完整示例：源码\n\n使用方法：\n\nmvn clean package\ncd target\njava -jar spring-boot-data-elasticsearch.jar\n\n\n\n# 引申和引用\n\n引申\n\n * spring boot 教程\n\n参考\n\n * spring boot 官方文档之 boot-features-elasticsearch\n * spring data elasticsearch github\n * spring data elasticsearch 官方文档",charsets:{cjk:!0},lastUpdated:"2022/06/14, 07:03:20",lastUpdatedTimestamp:16551614e5},{title:"SpringBoot 之集成 MongoDB",frontmatter:{title:"SpringBoot 之集成 MongoDB",date:"2018-12-15T17:29:36.000Z",categories:["Java","框架","SpringBoot","SpringBoot数据"],tags:["Java","框架","Spring","SpringBoot","MongoDB"],permalink:"/pages/db2a41/"},regularPath:"/10.Java/13.%E6%A1%86%E6%9E%B6/02.SpringBoot/03.SpringBoot%E6%95%B0%E6%8D%AE/23.SpringBoot%E4%B9%8BMongoDB.html",relativePath:"10.Java/13.框架/02.SpringBoot/03.SpringBoot数据/23.SpringBoot之MongoDB.md",key:"v-7c6d87af",path:"/pages/db2a41/",headers:[{level:2,title:"配置 mongodb",slug:"配置-mongodb",normalizedTitle:"配置 mongodb",charIndex:29},{level:3,title:"创建 admin",slug:"创建-admin",normalizedTitle:"创建 admin",charIndex:44},{level:3,title:"创建 root",slug:"创建-root",normalizedTitle:"创建 root",charIndex:189},{level:3,title:"创建用户自己的数据库的角色",slug:"创建用户自己的数据库的角色",normalizedTitle:"创建用户自己的数据库的角色",charIndex:306},{level:3,title:"查看用户",slug:"查看用户",normalizedTitle:"查看用户",charIndex:440},{level:3,title:"删除用户",slug:"删除用户",normalizedTitle:"删除用户",charIndex:485},{level:2,title:"Spring Boot 配置",slug:"spring-boot-配置",normalizedTitle:"spring boot 配置",charIndex:650},{level:2,title:"引用和引申",slug:"引用和引申",normalizedTitle:"引用和引申",charIndex:849}],headersStr:"配置 mongodb 创建 admin 创建 root 创建用户自己的数据库的角色 查看用户 删除用户 Spring Boot 配置 引用和引申",content:'# SpringBoot 之集成 MongoDB\n\n\n# 配置 mongodb\n\n\n# 创建 admin\n\nuse admin\ndb.createUser({\n  "user": "admin",\n  "pwd": "123456",\n  "roles": [{ "role": "userAdminAnyDatabase", "db": "admin" }]\n})\n\n\n\n# 创建 root\n\ndb.createUser({\n  "user": "root",\n  "pwd": "123456",\n  "roles": [{ "role": "root", "db": "admin" }]\n})\n\n\n\n# 创建用户自己的数据库的角色\n\nuse test\ndb.createUser({\n  "user": "test",\n  "pwd": "123456",\n  "roles": [{ "role": "dbOwner", "db": "test" }]\n})\n\n\n\n# 查看用户\n\ndb.system.users.find()\nshow users\n\n\n\n# 删除用户\n\n删除用户必须由账号管理员来删，所以，切换到 admin 角色\n\nuse admin\ndb.auth("admin","123456")\n\n# 删除单个用户\ndb.system.users.remove({user:"XXXXXX"})\n# 删除所有用户\ndb.system.users.remove({})\n\n\n\n# Spring Boot 配置\n\nspring.data.mongodb.host = localhost\nspring.data.mongodb.port = 27017\nspring.data.mongodb.database = test\nspring.data.mongodb.username = root\nspring.data.mongodb.password = root\n\n\n\n# 引用和引申\n\nhttps://spring.io/guides/gs/accessing-data-mongodb/',normalizedContent:'# springboot 之集成 mongodb\n\n\n# 配置 mongodb\n\n\n# 创建 admin\n\nuse admin\ndb.createuser({\n  "user": "admin",\n  "pwd": "123456",\n  "roles": [{ "role": "useradminanydatabase", "db": "admin" }]\n})\n\n\n\n# 创建 root\n\ndb.createuser({\n  "user": "root",\n  "pwd": "123456",\n  "roles": [{ "role": "root", "db": "admin" }]\n})\n\n\n\n# 创建用户自己的数据库的角色\n\nuse test\ndb.createuser({\n  "user": "test",\n  "pwd": "123456",\n  "roles": [{ "role": "dbowner", "db": "test" }]\n})\n\n\n\n# 查看用户\n\ndb.system.users.find()\nshow users\n\n\n\n# 删除用户\n\n删除用户必须由账号管理员来删，所以，切换到 admin 角色\n\nuse admin\ndb.auth("admin","123456")\n\n# 删除单个用户\ndb.system.users.remove({user:"xxxxxx"})\n# 删除所有用户\ndb.system.users.remove({})\n\n\n\n# spring boot 配置\n\nspring.data.mongodb.host = localhost\nspring.data.mongodb.port = 27017\nspring.data.mongodb.database = test\nspring.data.mongodb.username = root\nspring.data.mongodb.password = root\n\n\n\n# 引用和引申\n\nhttps://spring.io/guides/gs/accessing-data-mongodb/',charsets:{cjk:!0},lastUpdated:"2022/06/14, 07:03:20",lastUpdatedTimestamp:16551614e5},{title:"spring-boot-async",frontmatter:{title:"spring-boot-async",date:"2019-11-18T14:55:01.000Z",categories:["Java","框架","SpringBoot","SpringBootIO"],tags:["Java","框架","Spring","SpringBoot","异步"],permalink:"/pages/92add2/"},regularPath:"/10.Java/13.%E6%A1%86%E6%9E%B6/02.SpringBoot/04.SpringBootIO/01.SpringBoot%E4%B9%8B%E5%BC%82%E6%AD%A5%E8%AF%B7%E6%B1%82.html",relativePath:"10.Java/13.框架/02.SpringBoot/04.SpringBootIO/01.SpringBoot之异步请求.md",key:"v-7d425d92",path:"/pages/92add2/",headers:[{level:2,title:"@EnableAsync 注解",slug:"enableasync-注解",normalizedTitle:"@enableasync 注解",charIndex:27},{level:2,title:"@Async 注解",slug:"async-注解",normalizedTitle:"@async 注解",charIndex:192},{level:3,title:"支持的用法",slug:"支持的用法",normalizedTitle:"支持的用法",charIndex:206},{level:3,title:"不支持的用法",slug:"不支持的用法",normalizedTitle:"不支持的用法",charIndex:866},{level:2,title:"明确指定执行器",slug:"明确指定执行器",normalizedTitle:"明确指定执行器",charIndex:1355},{level:2,title:"管理 @Async 的异常",slug:"管理-async-的异常",normalizedTitle:"管理 @async 的异常",charIndex:1800},{level:2,title:"示例源码",slug:"示例源码",normalizedTitle:"示例源码",charIndex:2318},{level:2,title:"参考资料",slug:"参考资料",normalizedTitle:"参考资料",charIndex:2353}],headersStr:"@EnableAsync 注解 @Async 注解 支持的用法 不支持的用法 明确指定执行器 管理 @Async 的异常 示例源码 参考资料",content:'# SpringBoot 教程之处理异步请求\n\n\n# @EnableAsync 注解\n\n要使用 @Async，首先需要使用 @EnableAsync 注解开启 Spring Boot 中的异步特性。\n\n@Configuration\n@EnableAsync\npublic class AppConfig {\n}\n\n\n更详细的配置说明，可以参考：AsyncConfigurer\n\n\n# @Async 注解\n\n\n# 支持的用法\n\n（1）无入参无返回值方法\n\n您可以用 @Async 注解修饰方法，这表明这个方法是异步方式调用。换句话说，程序在调用此方法时会立即返回，而方法的实际执行发生在已提交给 Spring TaskExecutor 的任务中。在最简单的情况下，您可以将注解应用于返回 void 的方法，如以下示例所示：\n\n@Async\nvoid doSomething() {\n    // this will be executed asynchronously\n}\n\n\n（2）有入参无返回值方法\n\n与使用 @Scheduled 注释注释的方法不同，这些方法可以指定参数，因为它们在运行时由调用者以“正常”方式调用，而不是由容器管理的调度任务调用。例如，以下代码是 @Async 注解的合法应用：\n\n@Async\nvoid doSomething(String s) {\n    // this will be executed asynchronously\n}\n\n\n（3）有入参有返回值方法\n\n甚至可以异步调用返回值的方法。但是，这些方法需要具有 Future 类型的返回值。这仍然提供了异步执行的好处，以便调用者可以在调用 Future 上的 get() 之前执行其他任务。以下示例显示如何在返回值的方法上使用@Async：\n\n@Async\nFuture<String> returnSomething(int i) {\n    // this will be executed asynchronously\n}\n\n\n\n# 不支持的用法\n\n@Async 不能与生命周期回调一起使用，例如 @PostConstruct。\n\n要异步初始化 Spring bean，必须使用单独的初始化 Spring bean，然后在目标上调用 @Async 带注释的方法，如以下示例所示：\n\npublic class SampleBeanImpl implements SampleBean {\n\n    @Async\n    void doSomething() {\n        // ...\n    }\n\n}\n\npublic class SampleBeanInitializer {\n\n    private final SampleBean bean;\n\n    public SampleBeanInitializer(SampleBean bean) {\n        this.bean = bean;\n    }\n\n    @PostConstruct\n    public void initialize() {\n        bean.doSomething();\n    }\n\n}\n\n\n\n# 明确指定执行器\n\n默认情况下，在方法上指定 @Async 时，使用的执行器是在启用异步支持时配置的执行器，即如果使用 XML 或 AsyncConfigurer 实现（如果有），则为 annotation-driven 元素。但是，如果需要指示在执行给定方法时应使用默认值以外的执行器，则可以使用 @Async 注解的 value 属性。以下示例显示了如何执行此操作：\n\n@Async("otherExecutor")\nvoid doSomething(String s) {\n    // this will be executed asynchronously by "otherExecutor"\n}\n\n\n在这种情况下，“otherExecutor”可以是 Spring 容器中任何 Executor bean 的名称，也可以是与任何 Executor 关联的限定符的名称（例如，使用 <qualifier> 元素或 Spring 的 @Qualifier 注释指定） ）。\n\n\n# 管理 @Async 的异常\n\n当 @Async 方法的返回值类型为 Future 型时，很容易管理在方法执行期间抛出的异常，因为在调用 get 结果时会抛出此异常。但是，对于返回值类型为 void 型的方法，异常不会被捕获且无法传输。您可以提供 AsyncUncaughtExceptionHandler 来处理此类异常。以下示例显示了如何执行此操作：\n\npublic class MyAsyncUncaughtExceptionHandler implements AsyncUncaughtExceptionHandler {\n\n    @Override\n    public void handleUncaughtException(Throwable ex, Method method, Object... params) {\n        // handle exception\n    }\n}\n\n\n默认情况下，仅记录异常。您可以使用 AsyncConfigurer 或 <task：annotation-driven /> XML 元素定义自定义 AsyncUncaughtExceptionHandler。\n\n\n# 示例源码\n\n> 示例源码：spring-boot-async\n\n\n# 参考资料\n\n * Spring Boot 官方文档之 boot-features-external-config\n * Spring Boot 官方文档之 scheduling-annotation-support',normalizedContent:'# springboot 教程之处理异步请求\n\n\n# @enableasync 注解\n\n要使用 @async，首先需要使用 @enableasync 注解开启 spring boot 中的异步特性。\n\n@configuration\n@enableasync\npublic class appconfig {\n}\n\n\n更详细的配置说明，可以参考：asyncconfigurer\n\n\n# @async 注解\n\n\n# 支持的用法\n\n（1）无入参无返回值方法\n\n您可以用 @async 注解修饰方法，这表明这个方法是异步方式调用。换句话说，程序在调用此方法时会立即返回，而方法的实际执行发生在已提交给 spring taskexecutor 的任务中。在最简单的情况下，您可以将注解应用于返回 void 的方法，如以下示例所示：\n\n@async\nvoid dosomething() {\n    // this will be executed asynchronously\n}\n\n\n（2）有入参无返回值方法\n\n与使用 @scheduled 注释注释的方法不同，这些方法可以指定参数，因为它们在运行时由调用者以“正常”方式调用，而不是由容器管理的调度任务调用。例如，以下代码是 @async 注解的合法应用：\n\n@async\nvoid dosomething(string s) {\n    // this will be executed asynchronously\n}\n\n\n（3）有入参有返回值方法\n\n甚至可以异步调用返回值的方法。但是，这些方法需要具有 future 类型的返回值。这仍然提供了异步执行的好处，以便调用者可以在调用 future 上的 get() 之前执行其他任务。以下示例显示如何在返回值的方法上使用@async：\n\n@async\nfuture<string> returnsomething(int i) {\n    // this will be executed asynchronously\n}\n\n\n\n# 不支持的用法\n\n@async 不能与生命周期回调一起使用，例如 @postconstruct。\n\n要异步初始化 spring bean，必须使用单独的初始化 spring bean，然后在目标上调用 @async 带注释的方法，如以下示例所示：\n\npublic class samplebeanimpl implements samplebean {\n\n    @async\n    void dosomething() {\n        // ...\n    }\n\n}\n\npublic class samplebeaninitializer {\n\n    private final samplebean bean;\n\n    public samplebeaninitializer(samplebean bean) {\n        this.bean = bean;\n    }\n\n    @postconstruct\n    public void initialize() {\n        bean.dosomething();\n    }\n\n}\n\n\n\n# 明确指定执行器\n\n默认情况下，在方法上指定 @async 时，使用的执行器是在启用异步支持时配置的执行器，即如果使用 xml 或 asyncconfigurer 实现（如果有），则为 annotation-driven 元素。但是，如果需要指示在执行给定方法时应使用默认值以外的执行器，则可以使用 @async 注解的 value 属性。以下示例显示了如何执行此操作：\n\n@async("otherexecutor")\nvoid dosomething(string s) {\n    // this will be executed asynchronously by "otherexecutor"\n}\n\n\n在这种情况下，“otherexecutor”可以是 spring 容器中任何 executor bean 的名称，也可以是与任何 executor 关联的限定符的名称（例如，使用 <qualifier> 元素或 spring 的 @qualifier 注释指定） ）。\n\n\n# 管理 @async 的异常\n\n当 @async 方法的返回值类型为 future 型时，很容易管理在方法执行期间抛出的异常，因为在调用 get 结果时会抛出此异常。但是，对于返回值类型为 void 型的方法，异常不会被捕获且无法传输。您可以提供 asyncuncaughtexceptionhandler 来处理此类异常。以下示例显示了如何执行此操作：\n\npublic class myasyncuncaughtexceptionhandler implements asyncuncaughtexceptionhandler {\n\n    @override\n    public void handleuncaughtexception(throwable ex, method method, object... params) {\n        // handle exception\n    }\n}\n\n\n默认情况下，仅记录异常。您可以使用 asyncconfigurer 或 <task：annotation-driven /> xml 元素定义自定义 asyncuncaughtexceptionhandler。\n\n\n# 示例源码\n\n> 示例源码：spring-boot-async\n\n\n# 参考资料\n\n * spring boot 官方文档之 boot-features-external-config\n * spring boot 官方文档之 scheduling-annotation-support',charsets:{cjk:!0},lastUpdated:"2022/06/14, 07:03:20",lastUpdatedTimestamp:16551614e5},{title:"SpringBoot 之集成 Json",frontmatter:{title:"SpringBoot 之集成 Json",date:"2018-12-30T22:24:16.000Z",categories:["Java","框架","SpringBoot","SpringBootIO"],tags:["Java","框架","Spring","SpringBoot","JSON"],permalink:"/pages/676725/"},regularPath:"/10.Java/13.%E6%A1%86%E6%9E%B6/02.SpringBoot/04.SpringBootIO/02.SpringBoot%E4%B9%8BJson.html",relativePath:"10.Java/13.框架/02.SpringBoot/04.SpringBootIO/02.SpringBoot之Json.md",key:"v-2eb41fe5",path:"/pages/676725/",headers:[{level:2,title:"简介",slug:"简介",normalizedTitle:"简介",charIndex:26},{level:3,title:"Spring Boot 支持的 Json 库",slug:"spring-boot-支持的-json-库",normalizedTitle:"spring boot 支持的 json 库",charIndex:33},{level:3,title:"Spring Web 中的序列化、反序列化",slug:"spring-web-中的序列化、反序列化",normalizedTitle:"spring web 中的序列化、反序列化",charIndex:523},{level:4,title:"@ResponseBody",slug:"responsebody",normalizedTitle:"@responsebody",charIndex:575},{level:4,title:"@RequestBody",slug:"requestbody",normalizedTitle:"@requestbody",charIndex:939},{level:4,title:"@RestController",slug:"restcontroller",normalizedTitle:"@restcontroller",charIndex:1306},{level:2,title:"指定类的 Json 序列化、反序列化",slug:"指定类的-json-序列化、反序列化",normalizedTitle:"指定类的 json 序列化、反序列化",charIndex:1675},{level:2,title:"@JsonTest",slug:"jsontest",normalizedTitle:"@jsontest",charIndex:2609},{level:2,title:"Spring Boot 中的 json 配置",slug:"spring-boot-中的-json-配置",normalizedTitle:"spring boot 中的 json 配置",charIndex:4531},{level:3,title:"Jackson 配置",slug:"jackson-配置",normalizedTitle:"jackson 配置",charIndex:4558},{level:3,title:"GSON 配置",slug:"gson-配置",normalizedTitle:"gson 配置",charIndex:6030},{level:2,title:"Spring Boot 中使用 Fastjson",slug:"spring-boot-中使用-fastjson",normalizedTitle:"spring boot 中使用 fastjson",charIndex:7330},{level:2,title:"示例源码",slug:"示例源码",normalizedTitle:"示例源码",charIndex:9154},{level:2,title:"引申和引用",slug:"引申和引用",normalizedTitle:"引申和引用",charIndex:9172}],headersStr:"简介 Spring Boot 支持的 Json 库 Spring Web 中的序列化、反序列化 @ResponseBody @RequestBody @RestController 指定类的 Json 序列化、反序列化 @JsonTest Spring Boot 中的 json 配置 Jackson 配置 GSON 配置 Spring Boot 中使用 Fastjson 示例源码 引申和引用",content:'# SpringBoot 之集成 Json\n\n\n# 简介\n\n\n# Spring Boot 支持的 Json 库\n\nSpring Boot 支持三种 Json 库：\n\n * Gson\n * Jackson\n * JSON-B\n\nJackson 是 Spring Boot 官方推荐的默认库。\n\nSpring Boot 提供了 Jackson 的自动配置，Jackson 是 spring-boot-starter-json 的一部分。当 Jackson 在类路径上时，会自动配置 ObjectMapper bean。\n\nSpring Boot 提供了 Gson 的自动配置。当 Gson 在 classpath 上时，会自动配置 Gson bean。提供了几个 spring.gson.* 配置属性来自定义配置。为了获得更多控制，可以使用一个或多个 GsonBuilderCustomizer bean。\n\nSpring Boot 提供了 JSON-B 的自动配置。当 JSON-B API 在 classpath 上时，将自动配置 Jsonb bean。首选的 JSON-B 实现是 Apache Johnzon，它提供了依赖关系管理。\n\n\n# Spring Web 中的序列化、反序列化\n\n以下注解都是 spring-web 中提供的支持。\n\n# @ResponseBody\n\n@Responsebody 注解用于将 Controller 的方法返回的对象，通过适当的 HttpMessageConverter 转换为指定格式后，写入到 HTTP Response 对象的 body 数据区。一般在异步获取数据时使用。通常是在使用 @RequestMapping 后，返回值通常解析为跳转路径，加上 @Responsebody 后返回结果不会被解析为跳转路径，而是直接写入 HTTP 响应正文中。\n\n示例：\n\n@ResponseBody\n@RequestMapping(name = "/getInfo", method = RequestMethod.GET)\npublic InfoDTO getInfo() {\n\treturn new InfoDTO();\n}\n\n\n# @RequestBody\n\n@RequestBody 注解用于读取 HTTP Request 请求的 body 部分数据，使用系统默认配置的 HttpMessageConverter 进行解析，然后把相应的数据绑定到要返回的对象上；再把 HttpMessageConverter 返回的对象数据绑定到 controller 中方法的参数上。\n\nrequest 的 body 部分的数据编码格式由 header 部分的 Content-Type 指定。\n\n示例：\n\n@RequestMapping(name = "/postInfo", method = RequestMethod.POST)\npublic void postInfo(@RequestBody InfoDTO infoDTO) {\n    // ...\n}\n\n\n# @RestController\n\nSpring 4 以前：\n\n如果需要返回到指定页面，则需要用 @Controller 配合视图解析器 InternalResourceViewResolver 。\n\n如果需要返回 JSON，XML 或自定义 mediaType 内容到页面，则需要在对应的方法上加上 @ResponseBody 注解。\n\nSpring 4 以后，新增了 @RestController 注解：\n\n它相当于 @Controller + @RequestBody 。\n\n如果使用 @RestController 注解 Controller，则 Controller 中的方法无法返回 jsp 页面，或者 html，配置的视图解析器 InternalResourceViewResolver 将不起作用，直接返回内容。\n\n\n# 指定类的 Json 序列化、反序列化\n\n如果使用 Jackson 序列化和反序列化 JSON 数据，您可能需要编写自己的 JsonSerializer 和 JsonDeserializer 类。自定义序列化程序通常通过模块向 Jackson 注册，但 Spring Boot 提供了另一种 @JsonComponent 注释，可以更容易地直接注册 Spring Beans。\n\n您可以直接在 JsonSerializer 或 JsonDeserializer 实现上使用 @JsonComponent 注释。您还可以在包含序列化程序/反序列化程序作为内部类的类上使用它，如以下示例所示：\n\nimport java.io.*;\nimport com.fasterxml.jackson.core.*;\nimport com.fasterxml.jackson.databind.*;\nimport org.springframework.boot.jackson.*;\n\n@JsonComponent\npublic class Example {\n\n\tpublic static class Serializer extends JsonSerializer<SomeObject> {\n\t\t// ...\n\t}\n\n\tpublic static class Deserializer extends JsonDeserializer<SomeObject> {\n\t\t// ...\n\t}\n\n}\n\n\nApplicationContext 中的所有 @JsonComponent bean 都会自动注册到 Jackson。因为 @JsonComponent 是使用 @Component 进行元注释的，所以通常的组件扫描规则适用。\n\nSpring Boot 还提供了 JsonObjectSerializer 和 JsonObjectDeserializer 基类，它们在序列化对象时提供了标准 Jackson 版本的有用替代方法。有关详细信息，请参阅 Javadoc 中的 JsonObjectSerializer 和 JsonObjectDeserializer。\n\n\n# @JsonTest\n\n使用 @JsonTest 可以很方便的在 Spring Boot 中测试序列化、反序列化。\n\n使用 @JsonTest 相当于使用以下自动配置：\n\norg.springframework.boot.autoconfigure.cache.CacheAutoConfiguration org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration org.springframework.boot.test.autoconfigure.json.JsonTestersAutoConfiguration\n\n\n@JsonTest 使用示例：\n\n想试试完整示例，可以参考：源码\n\n@JsonTest\n@RunWith(SpringRunner.class)\npublic class SimpleJsonTest {\n\n    private final Logger log = LoggerFactory.getLogger(this.getClass());\n\n    @Autowired\n    private JacksonTester<InfoDTO> json;\n\n    @Test\n    public void testSerialize() throws Exception {\n        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");\n        InfoDTO infoDTO = new InfoDTO("JSON测试应用", "1.0.0", sdf.parse("2019-01-01 12:00:00"));\n        JsonContent<InfoDTO> jsonContent = json.write(infoDTO);\n        log.info("json content: {}", jsonContent.getJson());\n        // 或者使用基于JSON path的校验\n        assertThat(jsonContent).hasJsonPathStringValue("@.appName");\n        assertThat(jsonContent).extractingJsonPathStringValue("@.appName").isEqualTo("JSON测试应用");\n        assertThat(jsonContent).hasJsonPathStringValue("@.version");\n        assertThat(jsonContent).extractingJsonPathStringValue("@.version").isEqualTo("1.0.0");\n        assertThat(jsonContent).hasJsonPathStringValue("@.date");\n        assertThat(jsonContent).extractingJsonPathStringValue("@.date").isEqualTo("2019-01-01 12:00:00");\n    }\n\n    @Test\n    public void testDeserialize() throws Exception {\n        String content = "{\\"appName\\":\\"JSON测试应用\\",\\"version\\":\\"1.0.0\\",\\"date\\":\\"2019-01-01\\"}";\n        InfoDTO actual = json.parseObject(content);\n        assertThat(actual.getAppName()).isEqualTo("JSON测试应用");\n        assertThat(actual.getVersion()).isEqualTo("1.0.0");\n    }\n}\n\n\n\n# Spring Boot 中的 json 配置\n\n\n# Jackson 配置\n\n当 Spring Boot 的 json 库为 jackson 时，可以使用以下配置属性（对应 JacksonProperties 类）：\n\nspring.jackson.date-format= # Date format string or a fully-qualified date format class name. For instance, `yyyy-MM-dd HH:mm:ss`.\nspring.jackson.default-property-inclusion= # Controls the inclusion of properties during serialization. Configured with one of the values in Jackson\'s JsonInclude.Include enumeration.\nspring.jackson.deserialization.*= # Jackson on/off features that affect the way Java objects are deserialized.\nspring.jackson.generator.*= # Jackson on/off features for generators.\nspring.jackson.joda-date-time-format= # Joda date time format string. If not configured, "date-format" is used as a fallback if it is configured with a format string.\nspring.jackson.locale= # Locale used for formatting.\nspring.jackson.mapper.*= # Jackson general purpose on/off features.\nspring.jackson.parser.*= # Jackson on/off features for parsers.\nspring.jackson.property-naming-strategy= # One of the constants on Jackson\'s PropertyNamingStrategy. Can also be a fully-qualified class name of a PropertyNamingStrategy subclass.\nspring.jackson.serialization.*= # Jackson on/off features that affect the way Java objects are serialized.\nspring.jackson.time-zone= #  Time zone used when formatting dates. For instance, "America/Los_Angeles" or "GMT+10".\nspring.jackson.visibility.*= # Jackson visibility thresholds that can be used to limit which methods (and fields) are auto-detected.\n\n\n\n# GSON 配置\n\n当 Spring Boot 的 json 库为 gson 时，可以使用以下配置属性（对应 GsonProperties 类）：\n\nspring.gson.date-format= # Format to use when serializing Date objects.\nspring.gson.disable-html-escaping= # Whether to disable the escaping of HTML characters such as \'<\', \'>\', etc.\nspring.gson.disable-inner-class-serialization= # Whether to exclude inner classes during serialization.\nspring.gson.enable-complex-map-key-serialization= # Whether to enable serialization of complex map keys (i.e. non-primitives).\nspring.gson.exclude-fields-without-expose-annotation= # Whether to exclude all fields from consideration for serialization or deserialization that do not have the "Expose" annotation.\nspring.gson.field-naming-policy= # Naming policy that should be applied to an object\'s field during serialization and deserialization.\nspring.gson.generate-non-executable-json= # Whether to generate non executable JSON by prefixing the output with some special text.\nspring.gson.lenient= # Whether to be lenient about parsing JSON that doesn\'t conform to RFC 4627.\nspring.gson.long-serialization-policy= # Serialization policy for Long and long types.\nspring.gson.pretty-printing= # Whether to output serialized JSON that fits in a page for pretty printing.\nspring.gson.serialize-nulls= # Whether to serialize null fields.\n\n\n\n# Spring Boot 中使用 Fastjson\n\n国内很多的 Java 程序员更喜欢使用阿里的 fastjson 作为 json lib。那么，如何在 Spring Boot 中将其替换默认的 jackson 库呢？\n\n你需要做如下处理：\n\n（1）引入 fastjson jar 包：\n\n<dependency>\n\t<groupId>com.alibaba</groupId>\n\t<artifactId>fastjson</artifactId>\n\t<version>1.2.54</version>\n</dependency>\n\n\n（2）实现 WebMvcConfigurer 接口，自定义 configureMessageConverters 接口。如下所示：\n\n@Configuration\npublic class WebMvcConfig implements WebMvcConfigurer {\n\n    private final Logger log = LoggerFactory.getLogger(this.getClass());\n\n    /**\n     * 自定义消息转换器\n     * @param converters\n     */\n    @Override\n    public void configureMessageConverters(List<HttpMessageConverter<?>> converters) {\n        // 清除默认 Json 转换器\n        converters.removeIf(converter -> converter instanceof MappingJackson2HttpMessageConverter);\n\n        // 配置 FastJson\n        FastJsonConfig config = new FastJsonConfig();\n        config.setSerializerFeatures(SerializerFeature.QuoteFieldNames, SerializerFeature.WriteEnumUsingToString,\n            SerializerFeature.WriteMapNullValue, SerializerFeature.WriteDateUseDateFormat,\n            SerializerFeature.DisableCircularReferenceDetect);\n\n        // 添加 FastJsonHttpMessageConverter\n        FastJsonHttpMessageConverter fastJsonHttpMessageConverter = new FastJsonHttpMessageConverter();\n        fastJsonHttpMessageConverter.setFastJsonConfig(config);\n        List<MediaType> fastMediaTypes = new ArrayList<>();\n        fastMediaTypes.add(MediaType.APPLICATION_JSON_UTF8);\n        fastJsonHttpMessageConverter.setSupportedMediaTypes(fastMediaTypes);\n        converters.add(fastJsonHttpMessageConverter);\n\n        // 添加 StringHttpMessageConverter，解决中文乱码问题\n        StringHttpMessageConverter stringHttpMessageConverter = new StringHttpMessageConverter(Charset.forName("UTF-8"));\n        converters.add(stringHttpMessageConverter);\n    }\n\n    // ...\n}\n\n\n\n# 示例源码\n\n完整示例：源码\n\n\n# 引申和引用\n\n引申\n\n * Spring Boot 教程\n\n引用\n\n * Spring Boot 官方文档之 boot-features-json',normalizedContent:'# springboot 之集成 json\n\n\n# 简介\n\n\n# spring boot 支持的 json 库\n\nspring boot 支持三种 json 库：\n\n * gson\n * jackson\n * json-b\n\njackson 是 spring boot 官方推荐的默认库。\n\nspring boot 提供了 jackson 的自动配置，jackson 是 spring-boot-starter-json 的一部分。当 jackson 在类路径上时，会自动配置 objectmapper bean。\n\nspring boot 提供了 gson 的自动配置。当 gson 在 classpath 上时，会自动配置 gson bean。提供了几个 spring.gson.* 配置属性来自定义配置。为了获得更多控制，可以使用一个或多个 gsonbuildercustomizer bean。\n\nspring boot 提供了 json-b 的自动配置。当 json-b api 在 classpath 上时，将自动配置 jsonb bean。首选的 json-b 实现是 apache johnzon，它提供了依赖关系管理。\n\n\n# spring web 中的序列化、反序列化\n\n以下注解都是 spring-web 中提供的支持。\n\n# @responsebody\n\n@responsebody 注解用于将 controller 的方法返回的对象，通过适当的 httpmessageconverter 转换为指定格式后，写入到 http response 对象的 body 数据区。一般在异步获取数据时使用。通常是在使用 @requestmapping 后，返回值通常解析为跳转路径，加上 @responsebody 后返回结果不会被解析为跳转路径，而是直接写入 http 响应正文中。\n\n示例：\n\n@responsebody\n@requestmapping(name = "/getinfo", method = requestmethod.get)\npublic infodto getinfo() {\n\treturn new infodto();\n}\n\n\n# @requestbody\n\n@requestbody 注解用于读取 http request 请求的 body 部分数据，使用系统默认配置的 httpmessageconverter 进行解析，然后把相应的数据绑定到要返回的对象上；再把 httpmessageconverter 返回的对象数据绑定到 controller 中方法的参数上。\n\nrequest 的 body 部分的数据编码格式由 header 部分的 content-type 指定。\n\n示例：\n\n@requestmapping(name = "/postinfo", method = requestmethod.post)\npublic void postinfo(@requestbody infodto infodto) {\n    // ...\n}\n\n\n# @restcontroller\n\nspring 4 以前：\n\n如果需要返回到指定页面，则需要用 @controller 配合视图解析器 internalresourceviewresolver 。\n\n如果需要返回 json，xml 或自定义 mediatype 内容到页面，则需要在对应的方法上加上 @responsebody 注解。\n\nspring 4 以后，新增了 @restcontroller 注解：\n\n它相当于 @controller + @requestbody 。\n\n如果使用 @restcontroller 注解 controller，则 controller 中的方法无法返回 jsp 页面，或者 html，配置的视图解析器 internalresourceviewresolver 将不起作用，直接返回内容。\n\n\n# 指定类的 json 序列化、反序列化\n\n如果使用 jackson 序列化和反序列化 json 数据，您可能需要编写自己的 jsonserializer 和 jsondeserializer 类。自定义序列化程序通常通过模块向 jackson 注册，但 spring boot 提供了另一种 @jsoncomponent 注释，可以更容易地直接注册 spring beans。\n\n您可以直接在 jsonserializer 或 jsondeserializer 实现上使用 @jsoncomponent 注释。您还可以在包含序列化程序/反序列化程序作为内部类的类上使用它，如以下示例所示：\n\nimport java.io.*;\nimport com.fasterxml.jackson.core.*;\nimport com.fasterxml.jackson.databind.*;\nimport org.springframework.boot.jackson.*;\n\n@jsoncomponent\npublic class example {\n\n\tpublic static class serializer extends jsonserializer<someobject> {\n\t\t// ...\n\t}\n\n\tpublic static class deserializer extends jsondeserializer<someobject> {\n\t\t// ...\n\t}\n\n}\n\n\napplicationcontext 中的所有 @jsoncomponent bean 都会自动注册到 jackson。因为 @jsoncomponent 是使用 @component 进行元注释的，所以通常的组件扫描规则适用。\n\nspring boot 还提供了 jsonobjectserializer 和 jsonobjectdeserializer 基类，它们在序列化对象时提供了标准 jackson 版本的有用替代方法。有关详细信息，请参阅 javadoc 中的 jsonobjectserializer 和 jsonobjectdeserializer。\n\n\n# @jsontest\n\n使用 @jsontest 可以很方便的在 spring boot 中测试序列化、反序列化。\n\n使用 @jsontest 相当于使用以下自动配置：\n\norg.springframework.boot.autoconfigure.cache.cacheautoconfiguration org.springframework.boot.autoconfigure.gson.gsonautoconfiguration org.springframework.boot.autoconfigure.jackson.jacksonautoconfiguration org.springframework.boot.autoconfigure.jsonb.jsonbautoconfiguration org.springframework.boot.test.autoconfigure.json.jsontestersautoconfiguration\n\n\n@jsontest 使用示例：\n\n想试试完整示例，可以参考：源码\n\n@jsontest\n@runwith(springrunner.class)\npublic class simplejsontest {\n\n    private final logger log = loggerfactory.getlogger(this.getclass());\n\n    @autowired\n    private jacksontester<infodto> json;\n\n    @test\n    public void testserialize() throws exception {\n        simpledateformat sdf = new simpledateformat("yyyy-mm-dd hh:mm:ss");\n        infodto infodto = new infodto("json测试应用", "1.0.0", sdf.parse("2019-01-01 12:00:00"));\n        jsoncontent<infodto> jsoncontent = json.write(infodto);\n        log.info("json content: {}", jsoncontent.getjson());\n        // 或者使用基于json path的校验\n        assertthat(jsoncontent).hasjsonpathstringvalue("@.appname");\n        assertthat(jsoncontent).extractingjsonpathstringvalue("@.appname").isequalto("json测试应用");\n        assertthat(jsoncontent).hasjsonpathstringvalue("@.version");\n        assertthat(jsoncontent).extractingjsonpathstringvalue("@.version").isequalto("1.0.0");\n        assertthat(jsoncontent).hasjsonpathstringvalue("@.date");\n        assertthat(jsoncontent).extractingjsonpathstringvalue("@.date").isequalto("2019-01-01 12:00:00");\n    }\n\n    @test\n    public void testdeserialize() throws exception {\n        string content = "{\\"appname\\":\\"json测试应用\\",\\"version\\":\\"1.0.0\\",\\"date\\":\\"2019-01-01\\"}";\n        infodto actual = json.parseobject(content);\n        assertthat(actual.getappname()).isequalto("json测试应用");\n        assertthat(actual.getversion()).isequalto("1.0.0");\n    }\n}\n\n\n\n# spring boot 中的 json 配置\n\n\n# jackson 配置\n\n当 spring boot 的 json 库为 jackson 时，可以使用以下配置属性（对应 jacksonproperties 类）：\n\nspring.jackson.date-format= # date format string or a fully-qualified date format class name. for instance, `yyyy-mm-dd hh:mm:ss`.\nspring.jackson.default-property-inclusion= # controls the inclusion of properties during serialization. configured with one of the values in jackson\'s jsoninclude.include enumeration.\nspring.jackson.deserialization.*= # jackson on/off features that affect the way java objects are deserialized.\nspring.jackson.generator.*= # jackson on/off features for generators.\nspring.jackson.joda-date-time-format= # joda date time format string. if not configured, "date-format" is used as a fallback if it is configured with a format string.\nspring.jackson.locale= # locale used for formatting.\nspring.jackson.mapper.*= # jackson general purpose on/off features.\nspring.jackson.parser.*= # jackson on/off features for parsers.\nspring.jackson.property-naming-strategy= # one of the constants on jackson\'s propertynamingstrategy. can also be a fully-qualified class name of a propertynamingstrategy subclass.\nspring.jackson.serialization.*= # jackson on/off features that affect the way java objects are serialized.\nspring.jackson.time-zone= #  time zone used when formatting dates. for instance, "america/los_angeles" or "gmt+10".\nspring.jackson.visibility.*= # jackson visibility thresholds that can be used to limit which methods (and fields) are auto-detected.\n\n\n\n# gson 配置\n\n当 spring boot 的 json 库为 gson 时，可以使用以下配置属性（对应 gsonproperties 类）：\n\nspring.gson.date-format= # format to use when serializing date objects.\nspring.gson.disable-html-escaping= # whether to disable the escaping of html characters such as \'<\', \'>\', etc.\nspring.gson.disable-inner-class-serialization= # whether to exclude inner classes during serialization.\nspring.gson.enable-complex-map-key-serialization= # whether to enable serialization of complex map keys (i.e. non-primitives).\nspring.gson.exclude-fields-without-expose-annotation= # whether to exclude all fields from consideration for serialization or deserialization that do not have the "expose" annotation.\nspring.gson.field-naming-policy= # naming policy that should be applied to an object\'s field during serialization and deserialization.\nspring.gson.generate-non-executable-json= # whether to generate non executable json by prefixing the output with some special text.\nspring.gson.lenient= # whether to be lenient about parsing json that doesn\'t conform to rfc 4627.\nspring.gson.long-serialization-policy= # serialization policy for long and long types.\nspring.gson.pretty-printing= # whether to output serialized json that fits in a page for pretty printing.\nspring.gson.serialize-nulls= # whether to serialize null fields.\n\n\n\n# spring boot 中使用 fastjson\n\n国内很多的 java 程序员更喜欢使用阿里的 fastjson 作为 json lib。那么，如何在 spring boot 中将其替换默认的 jackson 库呢？\n\n你需要做如下处理：\n\n（1）引入 fastjson jar 包：\n\n<dependency>\n\t<groupid>com.alibaba</groupid>\n\t<artifactid>fastjson</artifactid>\n\t<version>1.2.54</version>\n</dependency>\n\n\n（2）实现 webmvcconfigurer 接口，自定义 configuremessageconverters 接口。如下所示：\n\n@configuration\npublic class webmvcconfig implements webmvcconfigurer {\n\n    private final logger log = loggerfactory.getlogger(this.getclass());\n\n    /**\n     * 自定义消息转换器\n     * @param converters\n     */\n    @override\n    public void configuremessageconverters(list<httpmessageconverter<?>> converters) {\n        // 清除默认 json 转换器\n        converters.removeif(converter -> converter instanceof mappingjackson2httpmessageconverter);\n\n        // 配置 fastjson\n        fastjsonconfig config = new fastjsonconfig();\n        config.setserializerfeatures(serializerfeature.quotefieldnames, serializerfeature.writeenumusingtostring,\n            serializerfeature.writemapnullvalue, serializerfeature.writedateusedateformat,\n            serializerfeature.disablecircularreferencedetect);\n\n        // 添加 fastjsonhttpmessageconverter\n        fastjsonhttpmessageconverter fastjsonhttpmessageconverter = new fastjsonhttpmessageconverter();\n        fastjsonhttpmessageconverter.setfastjsonconfig(config);\n        list<mediatype> fastmediatypes = new arraylist<>();\n        fastmediatypes.add(mediatype.application_json_utf8);\n        fastjsonhttpmessageconverter.setsupportedmediatypes(fastmediatypes);\n        converters.add(fastjsonhttpmessageconverter);\n\n        // 添加 stringhttpmessageconverter，解决中文乱码问题\n        stringhttpmessageconverter stringhttpmessageconverter = new stringhttpmessageconverter(charset.forname("utf-8"));\n        converters.add(stringhttpmessageconverter);\n    }\n\n    // ...\n}\n\n\n\n# 示例源码\n\n完整示例：源码\n\n\n# 引申和引用\n\n引申\n\n * spring boot 教程\n\n引用\n\n * spring boot 官方文档之 boot-features-json',charsets:{cjk:!0},lastUpdated:"2022/06/14, 07:03:20",lastUpdatedTimestamp:16551614e5},{title:"SpringBoot 之发送邮件",frontmatter:{title:"SpringBoot 之发送邮件",date:"2019-11-20T15:20:44.000Z",categories:["Java","框架","SpringBoot","SpringBootIO"],tags:["Java","框架","Spring","SpringBoot","邮件"],permalink:"/pages/2586f1/"},regularPath:"/10.Java/13.%E6%A1%86%E6%9E%B6/02.SpringBoot/04.SpringBootIO/03.SpringBoot%E4%B9%8B%E9%82%AE%E4%BB%B6.html",relativePath:"10.Java/13.框架/02.SpringBoot/04.SpringBootIO/03.SpringBoot之邮件.md",key:"v-519134e6",path:"/pages/2586f1/",headers:[{level:2,title:"简介",slug:"简介",normalizedTitle:"简介",charIndex:23},{level:2,title:"API",slug:"api",normalizedTitle:"api",charIndex:304},{level:2,title:"配置",slug:"配置",normalizedTitle:"配置",charIndex:414},{level:2,title:"实战",slug:"实战",normalizedTitle:"实战",charIndex:1591},{level:3,title:"引入依赖",slug:"引入依赖",normalizedTitle:"引入依赖",charIndex:1598},{level:3,title:"配置邮件属性",slug:"配置邮件属性",normalizedTitle:"配置邮件属性",charIndex:2200},{level:3,title:"Java 代码",slug:"java-代码",normalizedTitle:"java 代码",charIndex:2882},{level:2,title:"示例源码",slug:"示例源码",normalizedTitle:"示例源码",charIndex:6562},{level:2,title:"参考资料",slug:"参考资料",normalizedTitle:"参考资料",charIndex:6596}],headersStr:"简介 API 配置 实战 引入依赖 配置邮件属性 Java 代码 示例源码 参考资料",content:'# SpringBoot 之发送邮件\n\n\n# 简介\n\nSpring Boot 收发邮件最简便方式是通过 spring-boot-starter-mail。\n\n<dependency>\n  <groupId>org.springframework.boot</groupId>\n  <artifactId>spring-boot-starter-mail</artifactId>\n</dependency>\n\n\nspring-boot-starter-mail 本质上是使用 JavaMail(javax.mail)。如果想对 JavaMail 有进一步了解，可以参考： JavaMail 使用指南\n\n\n# API\n\nSpring Framework 提供了一个使用 JavaMailSender 接口发送电子邮件的简单抽象，这是发送邮件的核心 API。\n\nJavaMailSender 接口提供的 API 如下：\n\n\n\n\n# 配置\n\nSpring Boot 为 JavaMailSender 提供了自动配置以及启动器模块。\n\n如果 spring.mail.host 和相关库（由 spring-boot-starter-mail 定义）可用，则 Spring Boot 会创建默认 JavaMailSender（如果不存在）。可以通过 spring.mail 命名空间中的配置项进一步自定义发件人。 特别是，某些默认超时值是无限的，您可能希望更改它以避免线程被无响应的邮件服务器阻塞，如以下示例所示：\n\nspring.mail.properties.mail.smtp.connectiontimeout=5000\nspring.mail.properties.mail.smtp.timeout=3000\nspring.mail.properties.mail.smtp.writetimeout=5000\n\n\n也可以使用 JNDI 中的现有会话配置 JavaMailSender：\n\nspring.mail.jndi-name=mail/Session\n\n\n以下为 Spring Boot 关于 Mail 的配置：\n\n有关更多详细信息，请参阅 MailProperties。\n\n# Email (MailProperties)\nspring.mail.default-encoding=UTF-8 # Default MimeMessage encoding.\nspring.mail.host= # SMTP server host. For instance, `smtp.example.com`.\nspring.mail.jndi-name= # Session JNDI name. When set, takes precedence over other Session settings.\nspring.mail.password= # Login password of the SMTP server.\nspring.mail.port= # SMTP server port.\nspring.mail.properties.*= # Additional JavaMail Session properties.\nspring.mail.protocol=smtp # Protocol used by the SMTP server.\nspring.mail.test-connection=false # Whether to test that the mail server is available on startup.\nspring.mail.username= # Login user of the SMTP server.\n\n\n\n# 实战\n\n\n# 引入依赖\n\n<dependencies>\n  <dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-mail</artifactId>\n  </dependency>\n  <dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-test</artifactId>\n    <scope>test</scope>\n  </dependency>\n\n  <dependency>\n    <groupId>org.projectlombok</groupId>\n    <artifactId>lombok</artifactId>\n  </dependency>\n  <dependency>\n    <groupId>com.github.dozermapper</groupId>\n    <artifactId>dozer-spring-boot-starter</artifactId>\n    <version>6.4.0</version>\n  </dependency>\n</dependencies>\n\n\n\n# 配置邮件属性\n\n在 src/main/resources 目录下添加 application-163.properties 配置文件，内容如下：\n\nspring.mail.host = smtp.163.com\nspring.mail.username = xxxxxx\nspring.mail.password = xxxxxx\nspring.mail.properties.mail.smtp.auth = true\nspring.mail.properties.mail.smtp.starttls.enable = true\nspring.mail.properties.mail.smtp.starttls.required = true\nspring.mail.default-encoding = UTF-8\n\nmail.domain = 163.com\nmail.from = ${spring.mail.username}@${mail.domain}\n\n\n注：需替换有效的 spring.mail.username、spring.mail.password。\n\napplication-163.properties 配置文件表示使用 163 邮箱时的配置，为了使之生效，需要通过 spring.profiles.active = 163 来激活它。\n\n在 src/main/resources 目录下添加 application.properties 配置文件，内容如下：\n\nspring.profiles.active = 163\n\n\n\n# Java 代码\n\n首先，需要读取部分配置属性，方法如下：\n\nimport org.springframework.boot.context.properties.ConfigurationProperties;\nimport org.springframework.stereotype.Component;\nimport org.springframework.validation.annotation.Validated;\n\n@Validated\n@Component\n@ConfigurationProperties(prefix = "mail")\npublic class MailProperties {\n    private String domain;\n    private String from;\n\n    public String getDomain() {\n        return domain;\n    }\n\n    public void setDomain(String domain) {\n        this.domain = domain;\n    }\n\n    public String getFrom() {\n        return from;\n    }\n\n    public void setFrom(String from) {\n        this.from = from;\n    }\n}\n\n\n接着，定义一个邮件参数实体类（使用 lombok 简化了 getter、setter）：\n\nimport lombok.Data;\nimport java.util.Date;\n\n@Data\npublic class MailDTO {\n    private String from;\n    private String replyTo;\n    private String[] to;\n    private String[] cc;\n    private String[] bcc;\n    private Date sentDate;\n    private String subject;\n    private String text;\n    private String[] filenames;\n}\n\n\n接着，实现发送邮件的功能接口：\n\nimport com.github.dozermapper.core.Mapper;\nimport org.apache.commons.lang3.StringUtils;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.mail.SimpleMailMessage;\nimport org.springframework.mail.javamail.JavaMailSender;\nimport org.springframework.mail.javamail.MimeMessageHelper;\nimport org.springframework.stereotype.Service;\n\nimport javax.mail.MessagingException;\nimport javax.mail.internet.MimeBodyPart;\nimport javax.mail.internet.MimeMessage;\nimport javax.mail.internet.MimeMultipart;\nimport java.io.IOException;\n\n@Service\npublic class MailService {\n\n    private final Logger log = LoggerFactory.getLogger(this.getClass());\n\n    @Autowired\n    private MailProperties mailProperties;\n\n    @Autowired\n    private JavaMailSender javaMailSender;\n\n    @Autowired\n    private Mapper mapper;\n\n    public void sendSimpleMailMessage(MailDTO mailDTO) {\n        SimpleMailMessage simpleMailMessage = mapper.map(mailDTO, SimpleMailMessage.class);\n        if (StringUtils.isEmpty(mailDTO.getFrom())) {\n            mailDTO.setFrom(mailProperties.getFrom());\n        }\n        javaMailSender.send(simpleMailMessage);\n    }\n\n    public void sendMimeMessage(MailDTO mailDTO) {\n\n        MimeMessage mimeMessage = javaMailSender.createMimeMessage();\n        MimeMessageHelper messageHelper;\n        try {\n            messageHelper = new MimeMessageHelper(mimeMessage, true);\n\n            if (StringUtils.isEmpty(mailDTO.getFrom())) {\n                messageHelper.setFrom(mailProperties.getFrom());\n            }\n            messageHelper.setTo(mailDTO.getTo());\n            messageHelper.setSubject(mailDTO.getSubject());\n\n            mimeMessage = messageHelper.getMimeMessage();\n            MimeBodyPart mimeBodyPart = new MimeBodyPart();\n            mimeBodyPart.setContent(mailDTO.getText(), "text/html;charset=UTF-8");\n\n            // 描述数据关系\n            MimeMultipart mm = new MimeMultipart();\n            mm.setSubType("related");\n            mm.addBodyPart(mimeBodyPart);\n\n            // 添加邮件附件\n            for (String filename : mailDTO.getFilenames()) {\n                MimeBodyPart attachPart = new MimeBodyPart();\n                try {\n                    attachPart.attachFile(filename);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                mm.addBodyPart(attachPart);\n            }\n            mimeMessage.setContent(mm);\n            mimeMessage.saveChanges();\n\n        } catch (MessagingException e) {\n            e.printStackTrace();\n        }\n\n        javaMailSender.send(mimeMessage);\n    }\n}\n\n\n\n# 示例源码\n\n> 示例源码：spring-boot-mail\n\n\n# 参考资料\n\n * Spring Boot 官方文档之 Sending Email',normalizedContent:'# springboot 之发送邮件\n\n\n# 简介\n\nspring boot 收发邮件最简便方式是通过 spring-boot-starter-mail。\n\n<dependency>\n  <groupid>org.springframework.boot</groupid>\n  <artifactid>spring-boot-starter-mail</artifactid>\n</dependency>\n\n\nspring-boot-starter-mail 本质上是使用 javamail(javax.mail)。如果想对 javamail 有进一步了解，可以参考： javamail 使用指南\n\n\n# api\n\nspring framework 提供了一个使用 javamailsender 接口发送电子邮件的简单抽象，这是发送邮件的核心 api。\n\njavamailsender 接口提供的 api 如下：\n\n\n\n\n# 配置\n\nspring boot 为 javamailsender 提供了自动配置以及启动器模块。\n\n如果 spring.mail.host 和相关库（由 spring-boot-starter-mail 定义）可用，则 spring boot 会创建默认 javamailsender（如果不存在）。可以通过 spring.mail 命名空间中的配置项进一步自定义发件人。 特别是，某些默认超时值是无限的，您可能希望更改它以避免线程被无响应的邮件服务器阻塞，如以下示例所示：\n\nspring.mail.properties.mail.smtp.connectiontimeout=5000\nspring.mail.properties.mail.smtp.timeout=3000\nspring.mail.properties.mail.smtp.writetimeout=5000\n\n\n也可以使用 jndi 中的现有会话配置 javamailsender：\n\nspring.mail.jndi-name=mail/session\n\n\n以下为 spring boot 关于 mail 的配置：\n\n有关更多详细信息，请参阅 mailproperties。\n\n# email (mailproperties)\nspring.mail.default-encoding=utf-8 # default mimemessage encoding.\nspring.mail.host= # smtp server host. for instance, `smtp.example.com`.\nspring.mail.jndi-name= # session jndi name. when set, takes precedence over other session settings.\nspring.mail.password= # login password of the smtp server.\nspring.mail.port= # smtp server port.\nspring.mail.properties.*= # additional javamail session properties.\nspring.mail.protocol=smtp # protocol used by the smtp server.\nspring.mail.test-connection=false # whether to test that the mail server is available on startup.\nspring.mail.username= # login user of the smtp server.\n\n\n\n# 实战\n\n\n# 引入依赖\n\n<dependencies>\n  <dependency>\n    <groupid>org.springframework.boot</groupid>\n    <artifactid>spring-boot-starter-mail</artifactid>\n  </dependency>\n  <dependency>\n    <groupid>org.springframework.boot</groupid>\n    <artifactid>spring-boot-starter-test</artifactid>\n    <scope>test</scope>\n  </dependency>\n\n  <dependency>\n    <groupid>org.projectlombok</groupid>\n    <artifactid>lombok</artifactid>\n  </dependency>\n  <dependency>\n    <groupid>com.github.dozermapper</groupid>\n    <artifactid>dozer-spring-boot-starter</artifactid>\n    <version>6.4.0</version>\n  </dependency>\n</dependencies>\n\n\n\n# 配置邮件属性\n\n在 src/main/resources 目录下添加 application-163.properties 配置文件，内容如下：\n\nspring.mail.host = smtp.163.com\nspring.mail.username = xxxxxx\nspring.mail.password = xxxxxx\nspring.mail.properties.mail.smtp.auth = true\nspring.mail.properties.mail.smtp.starttls.enable = true\nspring.mail.properties.mail.smtp.starttls.required = true\nspring.mail.default-encoding = utf-8\n\nmail.domain = 163.com\nmail.from = ${spring.mail.username}@${mail.domain}\n\n\n注：需替换有效的 spring.mail.username、spring.mail.password。\n\napplication-163.properties 配置文件表示使用 163 邮箱时的配置，为了使之生效，需要通过 spring.profiles.active = 163 来激活它。\n\n在 src/main/resources 目录下添加 application.properties 配置文件，内容如下：\n\nspring.profiles.active = 163\n\n\n\n# java 代码\n\n首先，需要读取部分配置属性，方法如下：\n\nimport org.springframework.boot.context.properties.configurationproperties;\nimport org.springframework.stereotype.component;\nimport org.springframework.validation.annotation.validated;\n\n@validated\n@component\n@configurationproperties(prefix = "mail")\npublic class mailproperties {\n    private string domain;\n    private string from;\n\n    public string getdomain() {\n        return domain;\n    }\n\n    public void setdomain(string domain) {\n        this.domain = domain;\n    }\n\n    public string getfrom() {\n        return from;\n    }\n\n    public void setfrom(string from) {\n        this.from = from;\n    }\n}\n\n\n接着，定义一个邮件参数实体类（使用 lombok 简化了 getter、setter）：\n\nimport lombok.data;\nimport java.util.date;\n\n@data\npublic class maildto {\n    private string from;\n    private string replyto;\n    private string[] to;\n    private string[] cc;\n    private string[] bcc;\n    private date sentdate;\n    private string subject;\n    private string text;\n    private string[] filenames;\n}\n\n\n接着，实现发送邮件的功能接口：\n\nimport com.github.dozermapper.core.mapper;\nimport org.apache.commons.lang3.stringutils;\nimport org.slf4j.logger;\nimport org.slf4j.loggerfactory;\nimport org.springframework.beans.factory.annotation.autowired;\nimport org.springframework.mail.simplemailmessage;\nimport org.springframework.mail.javamail.javamailsender;\nimport org.springframework.mail.javamail.mimemessagehelper;\nimport org.springframework.stereotype.service;\n\nimport javax.mail.messagingexception;\nimport javax.mail.internet.mimebodypart;\nimport javax.mail.internet.mimemessage;\nimport javax.mail.internet.mimemultipart;\nimport java.io.ioexception;\n\n@service\npublic class mailservice {\n\n    private final logger log = loggerfactory.getlogger(this.getclass());\n\n    @autowired\n    private mailproperties mailproperties;\n\n    @autowired\n    private javamailsender javamailsender;\n\n    @autowired\n    private mapper mapper;\n\n    public void sendsimplemailmessage(maildto maildto) {\n        simplemailmessage simplemailmessage = mapper.map(maildto, simplemailmessage.class);\n        if (stringutils.isempty(maildto.getfrom())) {\n            maildto.setfrom(mailproperties.getfrom());\n        }\n        javamailsender.send(simplemailmessage);\n    }\n\n    public void sendmimemessage(maildto maildto) {\n\n        mimemessage mimemessage = javamailsender.createmimemessage();\n        mimemessagehelper messagehelper;\n        try {\n            messagehelper = new mimemessagehelper(mimemessage, true);\n\n            if (stringutils.isempty(maildto.getfrom())) {\n                messagehelper.setfrom(mailproperties.getfrom());\n            }\n            messagehelper.setto(maildto.getto());\n            messagehelper.setsubject(maildto.getsubject());\n\n            mimemessage = messagehelper.getmimemessage();\n            mimebodypart mimebodypart = new mimebodypart();\n            mimebodypart.setcontent(maildto.gettext(), "text/html;charset=utf-8");\n\n            // 描述数据关系\n            mimemultipart mm = new mimemultipart();\n            mm.setsubtype("related");\n            mm.addbodypart(mimebodypart);\n\n            // 添加邮件附件\n            for (string filename : maildto.getfilenames()) {\n                mimebodypart attachpart = new mimebodypart();\n                try {\n                    attachpart.attachfile(filename);\n                } catch (ioexception e) {\n                    e.printstacktrace();\n                }\n                mm.addbodypart(attachpart);\n            }\n            mimemessage.setcontent(mm);\n            mimemessage.savechanges();\n\n        } catch (messagingexception e) {\n            e.printstacktrace();\n        }\n\n        javamailsender.send(mimemessage);\n    }\n}\n\n\n\n# 示例源码\n\n> 示例源码：spring-boot-mail\n\n\n# 参考资料\n\n * spring boot 官方文档之 sending email',charsets:{cjk:!0},lastUpdated:"2022/06/14, 07:03:20",lastUpdatedTimestamp:16551614e5},{title:"SpringBoot 之安全快速入门",frontmatter:{title:"SpringBoot 之安全快速入门",date:"2021-05-13T18:21:56.000Z",categories:["Java","框架","SpringBoot","SpringBoot安全"],tags:["Java","框架","Spring","SpringBoot","安全"],permalink:"/pages/568352/"},regularPath:"/10.Java/13.%E6%A1%86%E6%9E%B6/02.SpringBoot/10.SpringBoot%E5%AE%89%E5%85%A8/01.SpringBoot%E4%B9%8B%E5%AE%89%E5%85%A8%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8.html",relativePath:"10.Java/13.框架/02.SpringBoot/10.SpringBoot安全/01.SpringBoot之安全快速入门.md",key:"v-072218bc",path:"/pages/568352/",headers:[{level:2,title:"QuickStart",slug:"quickstart",normalizedTitle:"quickstart",charIndex:25}],headersStr:"QuickStart",content:"# SpringBoot 之安全快速入门\n\n\n# QuickStart\n\n（1）添加依赖\n\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-security</artifactId>\n\t\t</dependency>\n\n\n（2）添加配置\n\nspring.security.user.name = root\nspring.security.user.password = root\nspring.security.user.roles = USER\n\n\n（3）启动应用后，访问任意路径，都会出现以下页面，提示你先执行登录操作。输入配置的用户名、密码（root/root）即可访问应用页面。\n\n",normalizedContent:"# springboot 之安全快速入门\n\n\n# quickstart\n\n（1）添加依赖\n\n\t\t<dependency>\n\t\t\t<groupid>org.springframework.boot</groupid>\n\t\t\t<artifactid>spring-boot-starter-web</artifactid>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupid>org.springframework.boot</groupid>\n\t\t\t<artifactid>spring-boot-starter-security</artifactid>\n\t\t</dependency>\n\n\n（2）添加配置\n\nspring.security.user.name = root\nspring.security.user.password = root\nspring.security.user.roles = user\n\n\n（3）启动应用后，访问任意路径，都会出现以下页面，提示你先执行登录操作。输入配置的用户名、密码（root/root）即可访问应用页面。\n\n",charsets:{cjk:!0},lastUpdated:"2022/06/14, 07:03:20",lastUpdatedTimestamp:16551614e5},{title:"SpringBoot 之 banner 定制",frontmatter:{title:"SpringBoot 之 banner 定制",date:"2018-12-21T23:22:44.000Z",categories:["Java","框架","SpringBoot","SpringBoot其他"],tags:["Java","框架","Spring","SpringBoot"],permalink:"/pages/bac2ce/"},regularPath:"/10.Java/13.%E6%A1%86%E6%9E%B6/02.SpringBoot/99.SpringBoot%E5%85%B6%E4%BB%96/01.SpringBoot%E4%B9%8Bbanner%E5%AE%9A%E5%88%B6.html",relativePath:"10.Java/13.框架/02.SpringBoot/99.SpringBoot其他/01.SpringBoot之banner定制.md",key:"v-9d3d12d8",path:"/pages/bac2ce/",headers:[{level:2,title:"简介",slug:"简介",normalizedTitle:"简介",charIndex:29},{level:2,title:"变量",slug:"变量",normalizedTitle:"变量",charIndex:632},{level:2,title:"配置",slug:"配置",normalizedTitle:"配置",charIndex:2202},{level:2,title:"编程",slug:"编程",normalizedTitle:"编程",charIndex:2849},{level:2,title:"示例源码",slug:"示例源码",normalizedTitle:"示例源码",charIndex:3070},{level:2,title:"参考资料",slug:"参考资料",normalizedTitle:"参考资料",charIndex:3106}],headersStr:"简介 变量 配置 编程 示例源码 参考资料",content:"# SpringBoot 之 banner 定制\n\n\n# 简介\n\nSpring Boot 启动时默认会显示以下 LOGO：\n\n  .   ____          _            __ _ _\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n :: Spring Boot ::        (v2.1.1.RELEASE)\n\n\n实际上，Spring Boot 支持自定义 logo 的功能。\n\n让我们来看看如何实现的。\n\n只要你在 resources 目录下放置名为 banner.txt、banner.gif 、banner.jpg 或 banner.png 的文件，Spring Boot 会自动加载，将其作为启动时打印的 logo。\n\n * 对于文本文件，Spring Boot 会将其直接输出。\n * 对于图像文件（ banner.gif 、banner.jpg 或 banner.png ），Spring Boot 会将图像转为 ASCII 字符，然后输出。\n\n\n# 变量\n\nbanner.txt 文件中还可以使用变量来设置字体、颜色、版本号。\n\n变量                                                            描述\n${application.version}                                        MANIFEST.MF 中定义的版本。如：1.0\n${application.formatted-version}                              MANIFEST.MF 中定义的版本，并添加一个 v 前缀。如：v1.0\n${spring-boot.version}                                        Spring Boot 版本。如：2.1.1.RELEASE.\n${spring-boot.formatted-version}                              Spring Boot 版本，并添加一个 v 前缀。如：v2.1.1.RELEASE\n${Ansi.NAME} (or ${AnsiColor.NAME}, ${AnsiBackground.NAME},   ANSI 颜色、字体。更多细节，参考：AnsiPropertySource。\n${AnsiStyle.NAME})\n${application.title}                                          MANIFEST.MF 中定义的应用名。\n\n示例：\n\n在 Spring Boot 项目中的 resources 目录下添加一个名为 banner.txt 的文件，内容如下：\n\n${AnsiColor.BRIGHT_YELLOW}${AnsiStyle.BOLD}\n ________  ___  ___  ________   ___       __   ___  ___\n|\\   ___ \\|\\  \\|\\  \\|\\   ___  \\|\\  \\     |\\  \\|\\  \\|\\  \\\n\\ \\  \\_|\\ \\ \\  \\\\\\  \\ \\  \\\\ \\  \\ \\  \\    \\ \\  \\ \\  \\\\\\  \\\n \\ \\  \\ \\\\ \\ \\  \\\\\\  \\ \\  \\\\ \\  \\ \\  \\  __\\ \\  \\ \\  \\\\\\  \\\n  \\ \\  \\_\\\\ \\ \\  \\\\\\  \\ \\  \\\\ \\  \\ \\  \\|\\__\\_\\  \\ \\  \\\\\\  \\\n   \\ \\_______\\ \\_______\\ \\__\\\\ \\__\\ \\____________\\ \\_______\\\n    \\|_______|\\|_______|\\|__| \\|__|\\|____________|\\|_______|\n${AnsiBackground.WHITE}${AnsiColor.RED}${AnsiStyle.UNDERLINE}\n:: Spring Boot ::             (v${spring-boot.version})\n:: Spring Boot Tutorial ::    (v1.0.0)\n\n\n> 注：${} 设置字体颜色的变量之间不能换行或空格分隔，否则会导致除最后一个变量外，都不生效。\n\n启动应用后，控制台将打印如下 logo：\n\n推荐两个生成字符画的网站，可以将生成的字符串放入这个banner.txt 文件：\n\n * http://www.network-science.de/ascii/\n * http://patorjk.com/software/taag/\n\n\n# 配置\n\napplication.properties 中与 Banner 相关的配置：\n\n# banner 模式。有三种模式：console/log/off\n# console 打印到控制台（通过 System.out）\n# log - 打印到日志中\n# off - 关闭打印\nspring.main.banner-mode = off\n# banner 文件编码\nspring.banner.charset = UTF-8\n# banner 文本文件路径\nspring.banner.location = classpath:banner.txt\n# banner 图像文件路径（可以选择 png,jpg,gif 文件）\nspring.banner.image.location = classpath:banner.gif\nused).\n# 图像 banner 的宽度（字符数）\nspring.banner.image.width = 76\n# 图像 banner 的高度（字符数）\nspring.banner.image.height =\n# 图像 banner 的左边界（字符数）\nspring.banner.image.margin = 2\n# 是否将图像转为黑色控制台主题\nspring.banner.image.invert = false\n\n\n当然，你也可以在 YAML 文件中配置，例如：\n\nspring:\n  main:\n    banner-mode: off\n\n\n\n# 编程\n\n默认，Spring Boot 会注册一个 SpringBootBanner 的单例 Bean，用来负责打印 Banner。\n\n如果想完全个人定制 Banner，可以这么做：先实现 org.springframework.boot.Banner#printBanner 接口来自己定制 Banner。在将这个 Banner 通过 SpringApplication.setBanner(…) 方法注入 Spring Boot。\n\n\n# 示例源码\n\n> 示例源码：spring-boot-banner\n\n\n# 参考资料\n\n * Spring Boot 官方文档之 Customizing the Banner",normalizedContent:"# springboot 之 banner 定制\n\n\n# 简介\n\nspring boot 启动时默认会显示以下 logo：\n\n  .   ____          _            __ _ _\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n :: spring boot ::        (v2.1.1.release)\n\n\n实际上，spring boot 支持自定义 logo 的功能。\n\n让我们来看看如何实现的。\n\n只要你在 resources 目录下放置名为 banner.txt、banner.gif 、banner.jpg 或 banner.png 的文件，spring boot 会自动加载，将其作为启动时打印的 logo。\n\n * 对于文本文件，spring boot 会将其直接输出。\n * 对于图像文件（ banner.gif 、banner.jpg 或 banner.png ），spring boot 会将图像转为 ascii 字符，然后输出。\n\n\n# 变量\n\nbanner.txt 文件中还可以使用变量来设置字体、颜色、版本号。\n\n变量                                                            描述\n${application.version}                                        manifest.mf 中定义的版本。如：1.0\n${application.formatted-version}                              manifest.mf 中定义的版本，并添加一个 v 前缀。如：v1.0\n${spring-boot.version}                                        spring boot 版本。如：2.1.1.release.\n${spring-boot.formatted-version}                              spring boot 版本，并添加一个 v 前缀。如：v2.1.1.release\n${ansi.name} (or ${ansicolor.name}, ${ansibackground.name},   ansi 颜色、字体。更多细节，参考：ansipropertysource。\n${ansistyle.name})\n${application.title}                                          manifest.mf 中定义的应用名。\n\n示例：\n\n在 spring boot 项目中的 resources 目录下添加一个名为 banner.txt 的文件，内容如下：\n\n${ansicolor.bright_yellow}${ansistyle.bold}\n ________  ___  ___  ________   ___       __   ___  ___\n|\\   ___ \\|\\  \\|\\  \\|\\   ___  \\|\\  \\     |\\  \\|\\  \\|\\  \\\n\\ \\  \\_|\\ \\ \\  \\\\\\  \\ \\  \\\\ \\  \\ \\  \\    \\ \\  \\ \\  \\\\\\  \\\n \\ \\  \\ \\\\ \\ \\  \\\\\\  \\ \\  \\\\ \\  \\ \\  \\  __\\ \\  \\ \\  \\\\\\  \\\n  \\ \\  \\_\\\\ \\ \\  \\\\\\  \\ \\  \\\\ \\  \\ \\  \\|\\__\\_\\  \\ \\  \\\\\\  \\\n   \\ \\_______\\ \\_______\\ \\__\\\\ \\__\\ \\____________\\ \\_______\\\n    \\|_______|\\|_______|\\|__| \\|__|\\|____________|\\|_______|\n${ansibackground.white}${ansicolor.red}${ansistyle.underline}\n:: spring boot ::             (v${spring-boot.version})\n:: spring boot tutorial ::    (v1.0.0)\n\n\n> 注：${} 设置字体颜色的变量之间不能换行或空格分隔，否则会导致除最后一个变量外，都不生效。\n\n启动应用后，控制台将打印如下 logo：\n\n推荐两个生成字符画的网站，可以将生成的字符串放入这个banner.txt 文件：\n\n * http://www.network-science.de/ascii/\n * http://patorjk.com/software/taag/\n\n\n# 配置\n\napplication.properties 中与 banner 相关的配置：\n\n# banner 模式。有三种模式：console/log/off\n# console 打印到控制台（通过 system.out）\n# log - 打印到日志中\n# off - 关闭打印\nspring.main.banner-mode = off\n# banner 文件编码\nspring.banner.charset = utf-8\n# banner 文本文件路径\nspring.banner.location = classpath:banner.txt\n# banner 图像文件路径（可以选择 png,jpg,gif 文件）\nspring.banner.image.location = classpath:banner.gif\nused).\n# 图像 banner 的宽度（字符数）\nspring.banner.image.width = 76\n# 图像 banner 的高度（字符数）\nspring.banner.image.height =\n# 图像 banner 的左边界（字符数）\nspring.banner.image.margin = 2\n# 是否将图像转为黑色控制台主题\nspring.banner.image.invert = false\n\n\n当然，你也可以在 yaml 文件中配置，例如：\n\nspring:\n  main:\n    banner-mode: off\n\n\n\n# 编程\n\n默认，spring boot 会注册一个 springbootbanner 的单例 bean，用来负责打印 banner。\n\n如果想完全个人定制 banner，可以这么做：先实现 org.springframework.boot.banner#printbanner 接口来自己定制 banner。在将这个 banner 通过 springapplication.setbanner(…) 方法注入 spring boot。\n\n\n# 示例源码\n\n> 示例源码：spring-boot-banner\n\n\n# 参考资料\n\n * spring boot 官方文档之 customizing the banner",charsets:{cjk:!0},lastUpdated:"2022/06/14, 07:03:20",lastUpdatedTimestamp:16551614e5},{title:"归档",frontmatter:{archivesPage:!0,title:"归档",permalink:"/archives/",article:!1},regularPath:"/@pages/archivesPage.html",relativePath:"@pages/archivesPage.md",key:"v-7aea93b6",path:"/archives/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/14, 07:03:20",lastUpdatedTimestamp:16551614e5},{title:"分类",frontmatter:{categoriesPage:!0,title:"分类",permalink:"/categories/",article:!1},regularPath:"/@pages/categoriesPage.html",relativePath:"@pages/categoriesPage.md",key:"v-3e6f3cf6",path:"/categories/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/14, 07:03:20",lastUpdatedTimestamp:16551614e5},{title:"标签",frontmatter:{tagsPage:!0,title:"标签",permalink:"/tags/",article:!1},regularPath:"/@pages/tagsPage.html",relativePath:"@pages/tagsPage.md",key:"v-f2d688b6",path:"/tags/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/14, 07:03:20",lastUpdatedTimestamp:16551614e5},{title:"Home",frontmatter:{home:!0,heroImage:"img/bg.gif",heroText:"Spring Boot Tutorial",tagline:"☕ `spring-boot-tutorial` 是一个 Spring Boot 实战教程，通过大量丰富的示例，展示 Spring Boot 在各个应用领域的应用。本项目旨在覆盖 Java 应用的各领域。",bannerBg:"none",postList:"none",footer:"CC-BY-SA-4.0 Licensed | Copyright © 2018-Now Dunwu"},regularPath:"/",relativePath:"README.md",key:"v-ea4028d4",path:"/",headers:[{level:2,title:"🔰 准备",slug:"🔰-准备",normalizedTitle:"🔰 准备",charIndex:233},{level:2,title:"🎯 示例",slug:"🎯-示例",normalizedTitle:"🎯 示例",charIndex:457},{level:3,title:"Spring Boot 基础",slug:"spring-boot-基础",normalizedTitle:"spring boot 基础",charIndex:467},{level:3,title:"Spring Boot 访问存储",slug:"spring-boot-访问存储",normalizedTitle:"spring boot 访问存储",charIndex:1009},{level:4,title:"关系型数据库",slug:"关系型数据库",normalizedTitle:"关系型数据库",charIndex:1029},{level:4,title:"Nosql 数据库",slug:"nosql-数据库",normalizedTitle:"nosql 数据库",charIndex:1628},{level:4,title:"缓存",slug:"缓存",normalizedTitle:"缓存",charIndex:2011},{level:3,title:"Spring Boot 访问消息队列",slug:"spring-boot-访问消息队列",normalizedTitle:"spring boot 访问消息队列",charIndex:2222},{level:3,title:"Spring Boot 集成安全框架",slug:"spring-boot-集成安全框架",normalizedTitle:"spring boot 集成安全框架",charIndex:2429},{level:3,title:"Spring Boot + Web",slug:"spring-boot-web",normalizedTitle:"spring boot + web",charIndex:2558},{level:3,title:"Spring Boot 使用模板引擎",slug:"spring-boot-使用模板引擎",normalizedTitle:"spring boot 使用模板引擎",charIndex:3183},{level:3,title:"Spring Boot 集成各种框架",slug:"spring-boot-集成各种框架",normalizedTitle:"spring boot 集成各种框架",charIndex:3492},{level:2,title:"📖 文档",slug:"📖-文档",normalizedTitle:"📖 文档",charIndex:4055},{level:3,title:"Spring Boot 基础篇",slug:"spring-boot-基础篇",normalizedTitle:"spring boot 基础篇",charIndex:4065},{level:3,title:"Spring Boot 基础篇",slug:"spring-boot-基础篇-2",normalizedTitle:"spring boot 基础篇",charIndex:4065},{level:3,title:"Spring Boot 数据篇",slug:"spring-boot-数据篇",normalizedTitle:"spring boot 数据篇",charIndex:4211},{level:3,title:"Spring Boot IO 篇",slug:"spring-boot-io-篇",normalizedTitle:"spring boot io 篇",charIndex:4331},{level:2,title:"License",slug:"license",normalizedTitle:"license",charIndex:4412}],headersStr:"🔰 准备 🎯 示例 Spring Boot 基础 Spring Boot 访问存储 关系型数据库 Nosql 数据库 缓存 Spring Boot 访问消息队列 Spring Boot 集成安全框架 Spring Boot + Web Spring Boot 使用模板引擎 Spring Boot 集成各种框架 📖 文档 Spring Boot 基础篇 Spring Boot 基础篇 Spring Boot 数据篇 Spring Boot IO 篇 License",content:"> spring-boot-tutorial 是一个 Spring Boot 实战教程，通过大量丰富的示例，展示 Spring Boot 在各个应用领域的应用。本项目旨在覆盖 Java 应用的各领域。\n> \n> 本项目的源码使用 maven 进行构建管理，任意 maven module 都可以独立编译运行。\n> \n>  * 🔁 项目同步维护：Github | Gitee\n>  * 📖 电子书阅读：Github Pages | Gitee Pages\n\n\n# 🔰 准备\n\n * java-tutorial - java-tutorial 是一个全面的 Java 教程。如果你还不熟悉 Java 编程，学习 Spring Boot 之前，不妨先学习一下。\n * spring-tutorial - spring-tutorial 是一个 Spring 实战教程。Spring 是 Spring Boot 的基石，如果想更深入了解 SpringBoot，还是很有必要了解一下 Spring 框架机制。\n\n\n# 🎯 示例\n\n\n# Spring Boot 基础\n\n * spring-boot-actuator - 展示 Spring Boot 应用监控。\n * spring-boot-aop - 展示 Spring Boot 中应用 AOP 编程。\n * spring-boot-async - 展示在 Spring Boot 中使用异步接口。\n * spring-boot-banner - 展示在 Spring Boot 中定制启动时的输出 Logo。\n * spring-boot-bean - 展示 Spring Boot 中应用 Lombok，简化大量的 getter、setter 、toString 等模板化代码；以及应用 Dozer 来简化大量的 JavaBean 互相转换代码。\n * spring-boot-profile - 展示 Spring Boot 中根据 profile 使程序在不同的环境下执行不同的行为。\n * spring-boot-property - 全方位的演示 Spring Boot 加载属性的方式：记载 properties 和 yaml 两种文件；通过 @Value、@ConfigurationProperties、Environment 读取属性。\n\n\n# Spring Boot 访问存储\n\n# 关系型数据库\n\n * spring-boot-data-jdbc - 演示 Spring Boot + JDBC 访问关系型数据库，执行基本的 CRUD 操作。\n * spring-boot-data-jdbc-multi-datasource - 演示 Spring Boot + JDBC 访问多数据源（可以是多个数据库服务器，也可以是多个截然不同的数据库）。\n * spring-boot-data-jpa - 演示 Spring Boot + JPA 访问关系型数据库，支持基本的 CRUD 操作以及直接支持 REST 接口方式访问数据。\n * spring-boot-data-mybatis-multi-datasource - Spring Boot + Mybatis Plus 访问多数据源。\n * spring-boot-data-mybatis-plus - Spring Boot + Mybatis Plus 访问数据。\n * spring-boot-data-flyway - Spring Boot 中通过 flyway 控制 sql 版本。\n * spring-boot-data-mybatis-sharding - Spring Boot + Mybatis Plus + ShardingSphere (sharding-jdbc) 访问分库分表数据。\n\n# Nosql 数据库\n\n * spring-boot-data-redis - 展示 Spring Boot 中访问 Redis。\n * spring-boot-data-redis-cluster - 展示 Spring Boot 中访问 Redis 集群。\n * spring-boot-data-mongodb - 展示 Spring Boot 中访问 MongoDB。\n * spring-boot-data-elasticsearch - 展示 Spring Boot 中访问 elasticsearch 数据（TCP 方式访问 9300 服务端口）。\n * spring-boot-data-elasticsearch-jest - 展示 Spring Boot 中访问 elasticsearch 数据（HTTP 方式访问 9200 服务端口）。\n\n# 缓存\n\n * spring-boot-data-cache - 展示 Spring Boot 中如何使用简单的应用缓存。\n * spring-boot-data-cache-j2cache - 展示 Spring Boot + Jetcache 实现分布式二级缓存。\n * spring-boot-data-cache-jetcache - 展示 Spring Boot + J2Cache 实现分布式二级缓存。\n\n\n# Spring Boot 访问消息队列\n\n * spring-boot-mq-activemq - 展示 Spring Boot 中使用 ActiveMQ 作为消息队列。\n * spring-boot-mq-kafka - 展示 Spring Boot 中使用 Kafka 作为消息队列。\n * spring-boot-mq-redis - 展示 Spring Boot 中使用 Redis 作为消息队列。\n\n\n# Spring Boot 集成安全框架\n\n * spring-boot-security-authentication\n * spring-boot-security-checkcode\n * spring-boot-security-session\n\n\n# Spring Boot + Web\n\n * spring-boot-web-fastjson - 展示 Spring Boot Web 应用中如何集成 Fastjson （默认的 JSON 库为 ）并定制序列化、反序列化方式。\n * spring-boot-web-form - 展示 Spring Boot Web 应用中表单如何提交、校验。\n * spring-boot-web-helloworld - 展示 Spring Boot Web 应用的 Hello World 示例。\n * spring-boot-web-helloworld - 展示 Spring Boot 如何开发一个 HTTPS 应用。\n * spring-boot-web-multi-connectors - 展示 Spring Boot Web 应用如何同时支持 HTTP 协议和 HTTPS 协议访问。\n * spring-boot-web-ui - 展示 Spring Boot 和多种不同前端技术的交互。\n * spring-boot-web-uploading - 展示 Spring Boot Web 应用中如何支持文件上传下载服务。\n * spring-boot-web-websocket - 展示 Spring Boot Web 应用中如何运行 WebSocket，提供 3 种服务器的整合示例：Tomcat、Jetty、Undertow。\n\n\n# Spring Boot 使用模板引擎\n\n * spring-boot-templ-jsp - 展示 Spring Boot Web 应用中如何运行 JSP，提供 2 种服务器的整合示例：Tomcat、 Jetty。\n * spring-boot-tmpl-freemark - 展示 Spring Boot 中使用 Freemark 模板引擎。\n * spring-boot-tmpl-thymeleaf - 展示 Spring Boot 中使用 Thymeleaf 模板引擎。\n * spring-boot-tmpl-velocity - 展示 Spring Boot 中使用 Velocity 模板引擎。\n\n\n# Spring Boot 集成各种框架\n\n * spring-boot-docker - 展示 Spring Boot 如何通过 Docker 部署应用。\n * spring-boot-logging - 展示 Spring Boot 集成日志组件。示例可以通过切换 profile 分别集成 logback、log4j2、log4j 三种日志库。\n * spring-boot-mail - 展示 Spring Boot 中如何收发邮件。\n * spring-boot-scheduler - 展示 Spring Boot 如何使用自带的调度器来执行简单的调度任务场景。\n * spring-boot-scheduler-quartz - 展示 Spring Boot 集成 Quartz 来管理、调度较为复杂的调度任务场景。\n * spring-boot-statemachine - 展示 Spring Boot 如何使用状态机控制工作流。\n * spring-boot-swagger - 展示 Spring Boot 集成 Swagger 来自动生成漂亮的 REST 接口在线文档。\n * spring-boot-test-junit5 - 展示 Spring Boot 中使用 JUnit5 进行单元测试。\n\n\n# 📖 文档\n\n\n# Spring Boot 基础篇\n\n * SpringBoot 知识图谱\n * SpringBoot 基本原理\n\n\n# Spring Boot 基础篇\n\n * SpringBoot 教程之快速入门\n * SpringBoot 之属性加载\n * SpringBoot 之 Profile\n\n\n# Spring Boot 数据篇\n\n * SpringBoot 之 JDBC\n * SpringBoot 之 Mybatis\n * SpringBoot 之 Elasticsearch\n * SpringBoot 之 MongoDB\n\n\n# Spring Boot IO 篇\n\n * SpringBoot 之异步请求\n * SpringBoot 之 Json\n * SpringBoot 之邮件\n\n\n# License\n\n本博客所有文章除特别声明外，均采用 许可协议。",normalizedContent:"> spring-boot-tutorial 是一个 spring boot 实战教程，通过大量丰富的示例，展示 spring boot 在各个应用领域的应用。本项目旨在覆盖 java 应用的各领域。\n> \n> 本项目的源码使用 maven 进行构建管理，任意 maven module 都可以独立编译运行。\n> \n>  * 🔁 项目同步维护：github | gitee\n>  * 📖 电子书阅读：github pages | gitee pages\n\n\n# 🔰 准备\n\n * java-tutorial - java-tutorial 是一个全面的 java 教程。如果你还不熟悉 java 编程，学习 spring boot 之前，不妨先学习一下。\n * spring-tutorial - spring-tutorial 是一个 spring 实战教程。spring 是 spring boot 的基石，如果想更深入了解 springboot，还是很有必要了解一下 spring 框架机制。\n\n\n# 🎯 示例\n\n\n# spring boot 基础\n\n * spring-boot-actuator - 展示 spring boot 应用监控。\n * spring-boot-aop - 展示 spring boot 中应用 aop 编程。\n * spring-boot-async - 展示在 spring boot 中使用异步接口。\n * spring-boot-banner - 展示在 spring boot 中定制启动时的输出 logo。\n * spring-boot-bean - 展示 spring boot 中应用 lombok，简化大量的 getter、setter 、tostring 等模板化代码；以及应用 dozer 来简化大量的 javabean 互相转换代码。\n * spring-boot-profile - 展示 spring boot 中根据 profile 使程序在不同的环境下执行不同的行为。\n * spring-boot-property - 全方位的演示 spring boot 加载属性的方式：记载 properties 和 yaml 两种文件；通过 @value、@configurationproperties、environment 读取属性。\n\n\n# spring boot 访问存储\n\n# 关系型数据库\n\n * spring-boot-data-jdbc - 演示 spring boot + jdbc 访问关系型数据库，执行基本的 crud 操作。\n * spring-boot-data-jdbc-multi-datasource - 演示 spring boot + jdbc 访问多数据源（可以是多个数据库服务器，也可以是多个截然不同的数据库）。\n * spring-boot-data-jpa - 演示 spring boot + jpa 访问关系型数据库，支持基本的 crud 操作以及直接支持 rest 接口方式访问数据。\n * spring-boot-data-mybatis-multi-datasource - spring boot + mybatis plus 访问多数据源。\n * spring-boot-data-mybatis-plus - spring boot + mybatis plus 访问数据。\n * spring-boot-data-flyway - spring boot 中通过 flyway 控制 sql 版本。\n * spring-boot-data-mybatis-sharding - spring boot + mybatis plus + shardingsphere (sharding-jdbc) 访问分库分表数据。\n\n# nosql 数据库\n\n * spring-boot-data-redis - 展示 spring boot 中访问 redis。\n * spring-boot-data-redis-cluster - 展示 spring boot 中访问 redis 集群。\n * spring-boot-data-mongodb - 展示 spring boot 中访问 mongodb。\n * spring-boot-data-elasticsearch - 展示 spring boot 中访问 elasticsearch 数据（tcp 方式访问 9300 服务端口）。\n * spring-boot-data-elasticsearch-jest - 展示 spring boot 中访问 elasticsearch 数据（http 方式访问 9200 服务端口）。\n\n# 缓存\n\n * spring-boot-data-cache - 展示 spring boot 中如何使用简单的应用缓存。\n * spring-boot-data-cache-j2cache - 展示 spring boot + jetcache 实现分布式二级缓存。\n * spring-boot-data-cache-jetcache - 展示 spring boot + j2cache 实现分布式二级缓存。\n\n\n# spring boot 访问消息队列\n\n * spring-boot-mq-activemq - 展示 spring boot 中使用 activemq 作为消息队列。\n * spring-boot-mq-kafka - 展示 spring boot 中使用 kafka 作为消息队列。\n * spring-boot-mq-redis - 展示 spring boot 中使用 redis 作为消息队列。\n\n\n# spring boot 集成安全框架\n\n * spring-boot-security-authentication\n * spring-boot-security-checkcode\n * spring-boot-security-session\n\n\n# spring boot + web\n\n * spring-boot-web-fastjson - 展示 spring boot web 应用中如何集成 fastjson （默认的 json 库为 ）并定制序列化、反序列化方式。\n * spring-boot-web-form - 展示 spring boot web 应用中表单如何提交、校验。\n * spring-boot-web-helloworld - 展示 spring boot web 应用的 hello world 示例。\n * spring-boot-web-helloworld - 展示 spring boot 如何开发一个 https 应用。\n * spring-boot-web-multi-connectors - 展示 spring boot web 应用如何同时支持 http 协议和 https 协议访问。\n * spring-boot-web-ui - 展示 spring boot 和多种不同前端技术的交互。\n * spring-boot-web-uploading - 展示 spring boot web 应用中如何支持文件上传下载服务。\n * spring-boot-web-websocket - 展示 spring boot web 应用中如何运行 websocket，提供 3 种服务器的整合示例：tomcat、jetty、undertow。\n\n\n# spring boot 使用模板引擎\n\n * spring-boot-templ-jsp - 展示 spring boot web 应用中如何运行 jsp，提供 2 种服务器的整合示例：tomcat、 jetty。\n * spring-boot-tmpl-freemark - 展示 spring boot 中使用 freemark 模板引擎。\n * spring-boot-tmpl-thymeleaf - 展示 spring boot 中使用 thymeleaf 模板引擎。\n * spring-boot-tmpl-velocity - 展示 spring boot 中使用 velocity 模板引擎。\n\n\n# spring boot 集成各种框架\n\n * spring-boot-docker - 展示 spring boot 如何通过 docker 部署应用。\n * spring-boot-logging - 展示 spring boot 集成日志组件。示例可以通过切换 profile 分别集成 logback、log4j2、log4j 三种日志库。\n * spring-boot-mail - 展示 spring boot 中如何收发邮件。\n * spring-boot-scheduler - 展示 spring boot 如何使用自带的调度器来执行简单的调度任务场景。\n * spring-boot-scheduler-quartz - 展示 spring boot 集成 quartz 来管理、调度较为复杂的调度任务场景。\n * spring-boot-statemachine - 展示 spring boot 如何使用状态机控制工作流。\n * spring-boot-swagger - 展示 spring boot 集成 swagger 来自动生成漂亮的 rest 接口在线文档。\n * spring-boot-test-junit5 - 展示 spring boot 中使用 junit5 进行单元测试。\n\n\n# 📖 文档\n\n\n# spring boot 基础篇\n\n * springboot 知识图谱\n * springboot 基本原理\n\n\n# spring boot 基础篇\n\n * springboot 教程之快速入门\n * springboot 之属性加载\n * springboot 之 profile\n\n\n# spring boot 数据篇\n\n * springboot 之 jdbc\n * springboot 之 mybatis\n * springboot 之 elasticsearch\n * springboot 之 mongodb\n\n\n# spring boot io 篇\n\n * springboot 之异步请求\n * springboot 之 json\n * springboot 之邮件\n\n\n# license\n\n本博客所有文章除特别声明外，均采用 许可协议。",charsets:{cjk:!0},lastUpdated:"2022/06/14, 07:03:20",lastUpdatedTimestamp:16551614e5}],themeConfig:{nav:[],sidebarDepth:2,logo:"https://raw.githubusercontent.com/dunwu/images/dev/common/dunwu-logo.png",repo:"dunwu/spring-boot-tutorial",searchMaxSuggestions:10,lastUpdated:"上次更新",docsDir:"docs",editLinks:!0,editLinkText:"📝 帮助改善此页面！",sidebar:{"/10.Java/":[{title:"框架",collapsable:!0,children:[{title:"SpringBoot",collapsable:!0,children:[{title:"SpringBoot综合",collapsable:!0,children:[["13.框架/02.SpringBoot/00.SpringBoot综合/01.SpringBoot知识图谱.md","SpringBoot 知识图谱","/pages/430f53/"],["13.框架/02.SpringBoot/00.SpringBoot综合/02.SpringBoot基本原理.md","SpringBoot 基本原理","/pages/dbf521/"]]},{title:"SpringBoot基础",collapsable:!0,children:[["13.框架/02.SpringBoot/01.SpringBoot基础/01.SpringBoot之快速入门.md","SpringBoot 之快速入门","/pages/950e4d/"],["13.框架/02.SpringBoot/01.SpringBoot基础/02.SpringBoot之属性加载.md","SpringBoot 之属性加载详解","/pages/0fb992/"],["13.框架/02.SpringBoot/01.SpringBoot基础/03.SpringBoot之Profile.md","SpringBoot 之 Profile","/pages/cb598e/"]]},{title:"SpringBootWeb",collapsable:!0,children:[["13.框架/02.SpringBoot/02.SpringBootWeb/01.SpringBoot之应用EasyUI.md","SpringBoot 之应用 EasyUI","/pages/ad0516/"]]},{title:"SpringBoot数据",collapsable:!0,children:[["13.框架/02.SpringBoot/03.SpringBoot数据/01.SpringBoot之JDBC.md","SpringBoot 之 JDBC","/pages/cf19fd/"],["13.框架/02.SpringBoot/03.SpringBoot数据/11.SpringBoot之Mybatis.md","SpringBoot 之集成 MyBatis","/pages/88219e/"],["13.框架/02.SpringBoot/03.SpringBoot数据/22.SpringBoot之Elasticsearch.md","SpringBoot 之集成 Elasticsearch","/pages/fac14c/"],["13.框架/02.SpringBoot/03.SpringBoot数据/23.SpringBoot之MongoDB.md","SpringBoot 之集成 MongoDB","/pages/db2a41/"]]},{title:"SpringBootIO",collapsable:!0,children:[["13.框架/02.SpringBoot/04.SpringBootIO/01.SpringBoot之异步请求.md","spring-boot-async","/pages/92add2/"],["13.框架/02.SpringBoot/04.SpringBootIO/02.SpringBoot之Json.md","SpringBoot 之集成 Json","/pages/676725/"],["13.框架/02.SpringBoot/04.SpringBootIO/03.SpringBoot之邮件.md","SpringBoot 之发送邮件","/pages/2586f1/"]]},{title:"SpringBoot安全",collapsable:!0,children:[["13.框架/02.SpringBoot/10.SpringBoot安全/01.SpringBoot之安全快速入门.md","SpringBoot 之安全快速入门","/pages/568352/"]]},{title:"SpringBoot其他",collapsable:!0,children:[["13.框架/02.SpringBoot/99.SpringBoot其他/01.SpringBoot之banner定制.md","SpringBoot 之 banner 定制","/pages/bac2ce/"]]}]}]}],catalogue:{}},sidebarOpen:!0,updateBar:{showToArticle:!0},category:!0,tag:!0,archive:!0,author:{name:"dunwu",href:"https://github.com/dunwu"},social:{icons:[{iconClass:"icon-youjian",title:"发邮件",link:"mailto:forbreak@163.com"},{iconClass:"icon-github",title:"GitHub",link:"https://github.com/dunwu"}]},footer:{createYear:2019,copyrightInfo:"钝悟（dunwu） | CC-BY-SA-4.0"},htmlModules:{pageB:'\n  <div class="wwads-cn wwads-horizontal pageB" data-id="136" style="width:100%;max-height:80px;min-height:auto;"></div>\n  <style>\n    .pageB img{width:80px!important;}\n    .wwads-horizontal .wwads-text, .wwads-content .wwads-text{line-height:1;}\n  </style>\n  ',windowRB:'\n    <div class="wwads-cn wwads-vertical windowRB" data-id="136" style="max-width:160px;\n    min-width: auto;min-height:auto;"></div>\n    <style>\n      .windowRB{ padding: 0;}\n      .windowRB .wwads-img{margin-top: 10px;}\n      .windowRB .wwads-content{margin: 0 10px 10px 10px;}\n      .custom-html-window-rb .close-but{\n        display: none;\n      }\n    </style>\n  '}}},lc=(t(166),t(223),t(155),t(233)),pc=t(234),uc=(t(403),t(248),t(45));var dc={computed:{$filterPosts:function(){return this.$site.pages.filter((function(n){var e=n.frontmatter,t=e.pageComponent,r=e.article,o=e.home;return!(t||!1===r||!0===o)}))},$sortPosts:function(){return(n=this.$filterPosts).sort((function(n,e){var t=n.frontmatter.sticky,r=e.frontmatter.sticky;return t&&r?t==r?Object(uc.a)(n,e):t-r:t&&!r?-1:!t&&r?1:Object(uc.a)(n,e)})),n;var n},$sortPostsByDate:function(){return(n=this.$filterPosts).sort((function(n,e){return Object(uc.a)(n,e)})),n;var n},$groupPosts:function(){return function(n){for(var e={},t={},r=function(r,o){var i=n[r].frontmatter,a=i.categories,s=i.tags;"array"===Object(uc.n)(a)&&a.forEach((function(t){t&&(e[t]||(e[t]=[]),e[t].push(n[r]))})),"array"===Object(uc.n)(s)&&s.forEach((function(e){e&&(t[e]||(t[e]=[]),t[e].push(n[r]))}))},o=0,i=n.length;o<i;o++)r(o);return{categories:e,tags:t}}(this.$sortPosts)},$categoriesAndTags:function(){return function(n){var e=[],t=[];for(var r in n.categories)e.push({key:r,length:n.categories[r].length});for(var o in n.tags)t.push({key:o,length:n.tags[o].length});return{categories:e,tags:t}}(this.$groupPosts)}}};Lo.component(lc.default),Lo.component(pc.default);function fc(n){return n.toString().padStart(2,"0")}t(407);Lo.component("Badge",(function(){return Promise.all([t.e(0),t.e(3)]).then(t.bind(null,537))})),Lo.component("CodeBlock",(function(){return Promise.resolve().then(t.bind(null,233))})),Lo.component("CodeGroup",(function(){return Promise.resolve().then(t.bind(null,234))}));t(408),t(409);var gc,mc,hc=t(54),vc=(t(412),t(149),t(232)),bc=t.n(vc),yc=t(113);"valine"===(mc="gitalk")?t.e(26).then(t.t.bind(null,513,7)).then((function(n){return n.default})):"gitalk"===mc&&Promise.all([t.e(0),t.e(25)]).then(t.t.bind(null,514,7)).then((function(){return t.e(24).then(t.t.bind(null,515,7))})).then((function(n){return gc=n.default}));function xc(n,e){var t={};return Reflect.ownKeys(n).forEach((function(r){if("string"==typeof n[r])try{t[r]=bc.a.render(n[r],e)}catch(e){console.warn('Comment config option error at key named "'.concat(r,'"')),console.warn("More info: ".concat(e.message)),t[r]=n[r]}else t[r]=n[r]})),t}console.log('How to use "'.concat("gitalk",'" in ').concat(yc.name,"@v").concat(yc.version,":"),yc.homepage);var Sc={render:function(n,e){var t=document.createElement("div");t.id=e,document.querySelector("main.page").appendChild(t),new gc(xc({clientID:"1e3cda7418b07bf78caf",clientSecret:"66818dd37589da091efe23523b66c35ce19c8a3c",repo:"spring-boot-tutorial",owner:"dunwu",admin:["dunwu"],pagerDirection:"last",id:"<%- (frontmatter.permalink || frontmatter.to.path).slice(-16) %>",title:"「评论」<%- frontmatter.title %>",labels:["Gitalk","Comment"],body:"页面：<%- window.location.origin + (frontmatter.to.path || window.location.pathname) %>"},{frontmatter:n})).render(e)},clear:function(n){var e=document.querySelector("#".concat(n));return e&&e.remove(),!0}},_c=null;function wc(n){return Sc.clear("vuepress-plugin-comment")}function jc(n){return!1!==n.comment&&!1!==n.comments}function Cc(n){if(clearTimeout(_c),document.querySelector("main.page"))return Sc.render(n,"vuepress-plugin-comment");_c=setTimeout((function(){return Cc(n)}),200)}var kc={mounted:function(){var n=this;_c=setTimeout((function(){var e=Object(hc.a)({to:{},from:{}},n.$frontmatter);wc()&&jc(e)&&Cc(e)}),1e3),this.$router.afterEach((function(e,t){if(!e||!t||e.path!==t.path){var r=Object(hc.a)({to:e,from:t},n.$frontmatter);wc()&&jc(r)&&Cc(r)}}))}},Ec=Object(ic.a)(kc,(function(){var n=this.$createElement;return(this._self._c||n)("div")}),[],!1,null,null,null).exports,Bc=[function(n){n.Vue,n.options,n.router,n.siteData},function(n){var e=n.Vue,t=(n.options,n.router,n.siteData);t.pages.map((function(n){var e=n.frontmatter,r=e.date,o=e.author;"string"==typeof r&&"Z"===r.charAt(r.length-1)&&(n.frontmatter.date=function(n){n instanceof Date||(n=new Date(n));return"".concat(n.getUTCFullYear(),"-").concat(fc(n.getUTCMonth()+1),"-").concat(fc(n.getUTCDate())," ").concat(fc(n.getUTCHours()),":").concat(fc(n.getUTCMinutes()),":").concat(fc(n.getUTCSeconds()))}(r)),o?n.author=o:t.themeConfig.author&&(n.author=t.themeConfig.author)})),e.mixin(dc)},{},function(n){n.Vue.mixin({computed:{$dataBlock:function(){return this.$options.__data__block__}}})},{},{},function(){"undefined"!=typeof window&&function(n,e,t){function r(n){var t=e.createElement("div");t.className="heart",o.push({el:t,x:n.clientX-5,y:n.clientY-5,scale:1,alpha:1,color:"#11a8cd"}),e.body.appendChild(t)}var o=[];n.requestAnimationFrame=n.requestAnimationFrame||n.webkitRequestAnimationFrame||n.mozRequestAnimationFrame||n.oRequestAnimationFrame||n.msRequestAnimationFrame||function(n){setTimeout(n,1e3/60)},function(n){var t=e.createElement("style");t.type="text/css";try{t.appendChild(e.createTextNode(n))}catch(e){t.styleSheet.cssText=n}e.getElementsByTagName("head")[0].appendChild(t)}(".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}"),function(){var e="function"==typeof n.onclick&&n.onclick;n.onclick=function(n){var t=!0;n.path&&n.path.forEach((function(n){1===n.nodeType&&"string"==typeof n.className&&n.className.indexOf("theme-vdoing-content")>-1&&(t=!1)})),t&&(e&&e(),r(n))}}(),function n(){for(var t=0;t<o.length;t++)o[t].alpha<=0?(e.body.removeChild(o[t].el),o.splice(t,1)):(o[t].y--,o[t].scale+=.004,o[t].alpha-=.013,o[t].el.style.cssText="left:"+o[t].x+"px;top:"+o[t].y+"px;opacity:"+o[t].alpha+";transform:scale("+o[t].scale+","+o[t].scale+") rotate(45deg);background:"+o[t].color+";z-index:99999");requestAnimationFrame(n)}()}(window,document)},function(n){n.Vue.component("Comment",Ec)}],Ac=["Comment"];t(61),t(81);t(137);function Tc(n,e){return(Tc=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,e){return n.__proto__=e,n})(n,e)}t(227);function Ic(n){return(Ic=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function Oc(n,e){if(e&&("object"===Object(Ea.a)(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n)}function Pc(n){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(n){return!1}}();return function(){var t,r=Ic(n);if(e){var o=Ic(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return Oc(this,t)}}var Mc=function(n){!function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),Object.defineProperty(n,"prototype",{writable:!1}),e&&Tc(n,e)}(t,n);var e=Pc(t);function t(){return ps(this,t),e.apply(this,arguments)}return ds(t)}(function(){function n(){ps(this,n),this.store=new Lo({data:{state:{}}})}return ds(n,[{key:"$get",value:function(n){return this.store.state[n]}},{key:"$set",value:function(n,e){Lo.set(this.store.state,n,e)}},{key:"$emit",value:function(){var n;(n=this.store).$emit.apply(n,arguments)}},{key:"$on",value:function(){var n;(n=this.store).$on.apply(n,arguments)}}]),n}());Object.assign(Mc.prototype,{getPageAsyncComponent:Ua,getLayoutAsyncComponent:qa,getAsyncComponent:Ha,getVueComponent:Wa});var Lc={install:function(n){var e=new Mc;n.$vuepress=e,n.prototype.$vuepress=e}};function zc(n){n.beforeEach((function(e,t,r){if(Rc(n,e.path))r();else if(/(\/|\.html)$/.test(e.path))if(/\/$/.test(e.path)){var o=e.path.replace(/\/$/,"")+".html";Rc(n,o)?r(o):r()}else r();else{var i=e.path+"/",a=e.path+".html";Rc(n,a)?r(a):Rc(n,i)?r(i):r()}}))}function Rc(n,e){var t=e.toLowerCase();return n.options.routes.some((function(n){return n.path.toLowerCase()===t}))}var Dc={props:{pageKey:String,slotKey:{type:String,default:"default"}},render:function(n){var e=this.pageKey||this.$parent.$page.key;return Ga("pageKey",e),Lo.component(e)||Lo.component(e,Ua(e)),Lo.component(e)?n(e):n("")}},$c={functional:!0,props:{slotKey:String,required:!0},render:function(n,e){var t=e.props,r=e.slots;return n("div",{class:["content__".concat(t.slotKey)]},r()[t.slotKey])}},Nc={computed:{openInNewWindowTitle:function(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},Fc=(t(417),t(418),Object(ic.a)(Nc,(function(){var n=this.$createElement,e=this._self._c||n;return e("span",[e("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[e("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),e("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),e("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports);function Jc(){return(Jc=Object(o.a)(Object(r.a)().mark((function n(e){var t,o,i,a;return Object(r.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return t="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:cc.routerBase||cc.base,zc(o=new Ca({base:t,mode:"history",fallback:!1,routes:sc,scrollBehavior:function(n,e,t){return t||(n.hash?!Lo.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(n.hash)}:{x:0,y:0})}})),i={},n.prev=4,n.next=7,Promise.all(Bc.filter((function(n){return"function"==typeof n})).map((function(n){return n({Vue:Lo,options:i,router:o,siteData:cc,isServer:e})})));case 7:n.next=12;break;case 9:n.prev=9,n.t0=n.catch(4),console.error(n.t0);case 12:return a=new Lo(Object.assign(i,{router:o,render:function(n){return n("div",{attrs:{id:"app"}},[n("RouterView",{ref:"layout"}),n("div",{class:"global-ui"},Ac.map((function(e){return n(e)})))])}})),n.abrupt("return",{app:a,router:o});case 14:case"end":return n.stop()}}),n,null,[[4,9]])})))).apply(this,arguments)}Lo.config.productionTip=!1,Lo.use(Ca),Lo.use(Lc),Lo.mixin(function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Lo;ka(e),t.$vuepress.$set("siteData",e);var r=n(t.$vuepress.$get("siteData")),o=new r,i=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(o)),a={};return Object.keys(i).reduce((function(n,e){return e.startsWith("$")&&(n[e]=i[e].get),n}),a),{computed:a}}((function(n){return function(){function e(){ps(this,e)}return ds(e,[{key:"setPage",value:function(n){this.__page=n}},{key:"$site",get:function(){return n}},{key:"$themeConfig",get:function(){return this.$site.themeConfig}},{key:"$frontmatter",get:function(){return this.$page.frontmatter}},{key:"$localeConfig",get:function(){var n,e,t=this.$site.locales,r=void 0===t?{}:t;for(var o in r)"/"===o?e=r[o]:0===this.$page.path.indexOf(o)&&(n=r[o]);return n||e||{}}},{key:"$siteTitle",get:function(){return this.$localeConfig.title||this.$site.title||""}},{key:"$canonicalUrl",get:function(){var n=this.$page.frontmatter.canonicalUrl;return"string"==typeof n&&n}},{key:"$title",get:function(){var n=this.$page,e=this.$page.frontmatter.metaTitle;if("string"==typeof e)return e;var t=this.$siteTitle,r=n.frontmatter.home?null:n.frontmatter.title||n.title;return t?r?r+" | "+t:t:r||"VuePress"}},{key:"$description",get:function(){var n=function(n){if(n){var e=n.filter((function(n){return"description"===n.name}))[0];if(e)return e.content}}(this.$page.frontmatter.meta);return n||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}},{key:"$lang",get:function(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}},{key:"$localePath",get:function(){return this.$localeConfig.path||"/"}},{key:"$themeLocaleConfig",get:function(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}},{key:"$page",get:function(){return this.__page?this.__page:function(n,e){for(var t=0;t<n.length;t++){var r=n[t];if(r.path.toLowerCase()===e.toLowerCase())return r}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}}]),e}()}),cc)),Lo.component("Content",Dc),Lo.component("ContentSlotsDistributor",$c),Lo.component("OutboundLink",Fc),Lo.component("ClientOnly",{functional:!0,render:function(n,e){var t=e.parent,r=e.children;if(t._isMounted)return r;t.$once("hook:mounted",(function(){t.$forceUpdate()}))}}),Lo.component("Layout",qa("Layout")),Lo.component("NotFound",qa("NotFound")),Lo.prototype.$withBase=function(n){var e=this.$site.base;return"/"===n.charAt(0)?e+n.slice(1):n},window.__VUEPRESS__={version:"1.9.2",hash:"23922cb"},function(n){return Jc.apply(this,arguments)}(!1).then((function(n){var e=n.app;n.router.onReady((function(){e.$mount("#app")}))}))}]);